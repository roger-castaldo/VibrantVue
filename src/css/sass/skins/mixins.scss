$extendedColors: (
  "black","white","primary","info",
  "success","warning","danger",
  "light","dark"
);

$basicColors:(
  "black-bis","black-ter","grey-darker",
  "grey-dark","grey","grey-light",
  "grey-lighter","grey-lightest","white-ter",
  "white-bis","orange","yellow","green",
  "turquoise","cyan","blue","purple",
  "red","text","text-strong",
  "link","link-light","link-dark","scheme-main",
  "scheme-invert"
);

$invertableColors: (
  "black","black-bis","black-ter",
  "blue","link","cyan","info",
  "green","success","primary",
  "purple","red","danger",
  "text","turquoise",
  "white","white-ter","white-bis",
  "yellow","warning",
  "light"
);

$lightDarkColors:(
  "primary","info","success",
  "warning","danger",
  "link","text","border","code"
);

$variableMaps:(
  "background":(
    "hr-background-color","code-background","pre-background","message-background-color",
    "button-text-hover-background-color","menu-item-hover-background-color",
    "tabs-boxed-link-hover-background-color","tabs-toggle-link-hover-background-color",
    "panel-block-hover-background-color","navbar-box-shadow-color","navbar-dropdown-item-hover-background-color",
    "navbar-dropdown-item-active-background-color","navbar-divider-background-color","modal-card-head-background-color",
    "dropdown-item-hover-background-color","tag-background-color","notification-background-color",
    "content-blockquote-background-color","input-disabled-background-color","input-disabled-border-color"
  ),
  "black":("scheme-invert"),
  "black-bis":("scheme-invert-bis"),
  "black-ter":("scheme-invert-ter"),
  "blue":("link","link-focus-border"),
  "border":(
    "message-body-border-color","tabs-border-bottom-color",
    "tabs-boxed-link-hover-border-bottom-color", "tabs-boxed-link-active-border-color",
    "tabs-toggle-link-border-color","pagination-border-color","pagination-disabled-background-color",
    "pagination-disabled-border-color","button-border-color","button-disabled-border-color",
    "button-static-border-color","input-border-color","input-icon-color",
    "file-border-color","file-name-border-color"
  ),
  "border-hover":(
    "tabs-toggle-link-hover-border-color","breadcrumb-item-separator-color","input-hover-border-color"
  ),
  "border-light":(
    "panel-heading-background-color","dropdown-divider-background-color","progress-bar-background-color"
  ),
  "cyan":("info"),
  "green":("success"),
  "grey":("text-light"),
  "grey-dark":("text","link-active-border"),
  "grey-darker":("dark","text-strong","link-hover","link-focus","link-active"),
  "grey-light":("border-hover","border-light-hover","link-hover-border","pagination-ellipsis-color"),
  "grey-lighter":("border"),
  "grey-lightest":("border-light"),
  "link":(
    "breadcrumb-item-color", "menu-item-active-background-color","tabs-link-active-border-bottom-color",
    "tabs-link-active-color", "tabs-toggle-link-active-background-color", "tabs-toggle-link-active-border-color",
    "panel-list-item-hover-color","panel-block-active-border-left-color","panel-block-active-icon-color",
    "pagination-current-background-color","pagination-current-border-color","navbar-item-hover-color",
    "navbar-tab-hover-border-bottom-color","navbar-tab-active-color","navbar-tab-active-border-bottom-color",
    "navbar-dropdown-arrow","navbar-dropdown-item-active-color","dropdown-content-arrow",
    "dropdown-item-active-background-color","button-ghost-color","button-ghost-hover-color",
    "input-focus-border-color","input-arrow"
  ),
  "link-active":(
    "button-active-color","panel-tab-active-color","panel-block-active-color",
    "pagination-active-color"
  ),
  "link-active-border":(
    "button-active-border-color","panel-tab-active-border-bottom-color","pagination-active-border-color"
  ),
  "link-focus":("button-focus-color","pagination-focus-color"),
  "link-focus-border":(
    "button-focus-border-color","pagination-focus-border-color"
  ),
  "link-hover":(
    "button-hover-color","breadcrumb-item-hover-color","pagination-hover-color"
  ),
  "link-hover-border":(
    "button-hover-border-color","pagination-hover-border-color"
  ),
  "link-invert":(
    "menu-item-active-color","tabs-toggle-link-active-color","pagination-current-color",
    "dropdown-item-active-color"
  ),
  "navbar-item-color":("navbar-burger-color"),
  "primary":("table-row-active-background-color"),
  "primary-invert":("table-row-active-color"),
  "purple":("link-visited"),
  "red":("danger"),
  "scheme-invert":(
    "footer-color","navbar-item-active-color","navbar-dropdown-item-hover-color",
    "dropdown-item-hover-color"
  ),
  "scheme-main":(
    "body-background-color","card-background-color","button-background-color","message-body-pre-background-color",
    "tabs-boxed-link-active-background-color","navbar-background-color","navbar-dropdown-background-color",
    "modal-card-body-background-color","dropdown-content-background-color",
    "table-background-color","notification-code-background-color","button-disabled-background-color",
    "box-background-color","input-background-color"
  ),
  "scheme-main-bis":(
    "navbar-item-hover-background-color","table-row-hover-background-color","table-striped-row-even-background-color",
    "footer-background-color"
  ),
  "scheme-main-ter":(
    "table-striped-row-even-hover-background-color","button-static-background-color","file-cta-background-color"
  ),
  "shadow":(
    "card-shadow","panel-shadow","card-shadow",
    "box-shadow","dropdown-content-shadow"
  ),
  "text":(
    "body-color","pre","card-color","message-header-background-color","button-text-color",
    "message-body-color","menu-item-color","tabs-link-color","panel-list-item-color",
    "navbar-item-color","dropdown-item-color",
    "tag-color","progress-value-background-color","box-color",
    "input-icon-active-color","file-cta-color"
  ),
  "text-invert":("message-header-color"),
  "text-light":(
    "menu-label-color","panel-icon-color","pagination-disabled-color",
    "button-static-color","input-disabled-color"
  ),
  "text-strong":(
    "strong-color","breadcrumb-item-active-color","card-header-color",
    "button-color","button-text-hover-color","menu-item-hover-color",
    "tabs-link-hover-border-bottom-color","tabs-link-hover-color","panel-heading-color",
    "panel-block-color","pagination-color","modal-card-title-color",
    "title-color","subtitle-strong-color",
    "table-color","table-cell-heading-color","table-head-cell-color",
    "table-foot-cell-color","content-heading-color","content-table-cell-heading-color",
    "content-table-head-cell-color","content-table-foot-cell-color","label-color",
    "input-color","input-hover-color","input-focus-color",
    "file-cta-hover-color","file-cta-active-color"
  ),
  "turquoise":("primary"),
  "white":("scheme-main"),
  "white-ter":("scheme-main-ter","background","light","dark-invert"),
  "white-bis":("scheme-main-bis"),
  "yellow":("warning"),

  "family-code":("code-family"),
  "family-monospace":("family-code"),
  "family-primary":("body-family"),
  "family-sans-serif":("family-primary","family-secondary","title-family","subtitle-family"),
  
  "size-3":("title-size"),
  "size-4":("size-large","modal-card-title-size"),
  "size-5":("size-medium"),
  "size-6":("size-normal"),
  "size-7":("size-small"),
  "size-small":("help-size"),
  "weight-bold":(
    "strong-weight","card-header-weight","message-header-weight",
    "panel-heading-weight","card-header-weight","label-weight"
  ),
  "weight-normal":("body-weight","subtitle-weight"),
  "weight-semibold":(
    "title-weight","subtitle-strong-weight","content-heading-weight"
  ),

  "block-spacing":("card-media-margin","panel-margin","card-media-margin"),
  "control-border-width":("button-border-width"),
  "control-height":("pagination-min-width","input-height"),
  "control-padding-horizontal":("textarea-padding"),
  "radius":(
    "control-radius","message-radius","message-header-radius","message-body-radius",
    "tabs-boxed-link-radius", "tabs-toggle-link-radius","panel-heading-radius",
    "dropdown-content-radius", "tag-radius","notification-radius",
    "input-radius","file-radius"
  ),
  "radius-large":(
    "panel-radius","navbar-dropdown-radius","navbar-dropdown-boxed-radius",
    "modal-card-head-radius","modal-card-foot-radius","box-radius"
  ),
  "radius-rounded":("progress-border-radius"),
  "radius-small":("control-radius-small","menu-item-radius")
);

@function contains($list,$var) {
  @return index($list, $var);
}

@function bulmaRgba($color, $alpha){
  @if type-of($color) != 'color'{
    $varname: #{str-slice('#{$color}', 5, -2)};
    @return 'rgba(var(#{$varname}-r),var(#{$varname}-g),var(#{$varname}-b), #{$alpha})';
  }
  @return rgba($color, $alpha);
}

@function define-hero-gradiants($name,$map){
  @return map-merge($map,(
    #{"--#{$name}-gradient-top-left"}:hsl(calc(var(--#{$name}-h) - 10deg), calc(var(--#{$name}-s) + 10%), calc(var(--#{$name}-l) - 10%)),
    #{"--#{$name}-gradient-bottom-right"}: hsl(calc(var(--#{$name}-h) + 10deg), calc(var(--#{$name}-s) + 5%), calc(var(--#{$name}-l) + 5%))
  ));
}

@function define-message-light-dark($name,$map){
  @return map-merge($map,(
    #{"--#{$name}-messages-light"}: "hsl(var(--#{$name}-h),var(--#{$name}-s),calc((max(100% - var(--#{$name}-l)) - 2%, 0%)))",
    #{"--#{$name}-messages-dark"}: hsl(var(--#{$name}-h),calc(var(--#{$name}-s) - (var(--#{$name}-l) * 30%)),calc(var(--#{$name}-l) - (var(--#{$name}-l) * 70%)))
  ));
}

@function define-color-hsl($name,$value,$map){
  @if type-of($value) == color {
    @return map-merge($map,(
      #{"--#{$name}-h"}: #{str-slice('#{round(hue($value))}',1,-4)},
      #{"--#{$name}-s"}: #{round(saturation($value))},
      #{"--#{$name}-l"}: #{round(lightness($value))}
    ));
  }@else{
    $varname: #{str-slice('#{$value}', 5, -2)};
    @return map-merge($map,(
      #{"--#{$name}-h"}: var(#{$varname}-h),
      #{"--#{$name}-s"}: var(#{$varname}-s),
      #{"--#{$name}-l"}: var(#{$varname}-l)
    ));
  }
}

@mixin define-skin($name){
  body[data-skin="#{$name}"] {
    @content;
  }
}

@function define-value($name,$value,$map){
  $map:map-merge($map, (
    #{"--#{$name}"}:#{$value}
  ));
  @if type-of($value) == 'color'{
    $map:map-merge($map, (
      #{"--#{$name}-r"}:#{red($value)},
      #{"--#{$name}-g"}:#{green($value)},
      #{"--#{$name}-b"}:#{blue($value)},
      #{"--#{$name}-a"}:#{alpha($value)},
    ));
  }
  @return $map;
}

@function define-basic-color($name,$value,$map){
  @return define-color-hsl($name,$value,$map);
}

@function define-extended-color($name,$value,$map){
  $map:define-basic-color($name,$value,$map);
  $map:define-hero-gradiants($name,$map);
  $map:define-message-light-dark($name,$map);
  @return $map;
}

@function define-color-invert($name,$value,$map){
  $color:$value; 
  @if type-of($value) == color {
    $color:findColorInvert($value);
  }@else{
    $varname: #{str-slice('#{$value}', 5, -2)};
    $color:var(#{$varname}-invert);
  }
  @return define-variable($name+"-invert", $color,$map);
}
    
@function define-variable($name,$value,$map:()){
  $map:define-value($name,$value,$map);

  //extend colors
  @if contains($extendedColors,$name){
    $map:define-extended-color($name,$value,$map);
  }@else if contains($basicColors,$name){
    $map:define-basic-color($name,$value,$map);
  }

  @if contains($invertableColors,$name){
    $map:define-color-invert($name,$value,$map);
  }

  @if contains($lightDarkColors,$name){
    $map:define-variable($name+"-light",findLightColor($value),$map);
    $map:define-variable($name+"-dark",findDarkColor($value),$map);
  }

  //extend maps
  @if map-has-key($variableMaps, $name) {
    @each $var in map-get($variableMaps,$name){
      $map:define-variable($var,var(--#{$name}),$map);
    }
  }
  
  @if $name=="scheme-invert"{
    $map:define-variable("shadow", (0 0.5em 1em -0.125em bulmaRgba($value, 0.1), 0 0px 0 1px bulmaRgba($value, 0.02)),$map);
    $map:define-variable("modal-background-background-color",bulmaRgba($value, 0.86),$map);
    $map:define-variable("card-header-shadow",(0 0.125em 0.25em bulmaRgba($value, 0.1)),$map);
    $map:define-variable("box-link-hover-shadow",(0 0.5em 1em -0.125em bulmaRgba($value, 0.1), 0 0 0 1px var(--link)),$map);
    $map:define-variable("box-link-active-shadow",(inset 0 1px 2px bulmaRgba($value, 0.2), 0 0 0 1px var(--link)),$map);
    $map:define-variable("input-shadow",(inset 0 0.0625em 0.125em bulmaRgba($value, 0.05)),$map);
    $map:define-variable("navbar-dropdown-boxed-shadow",(0 8px 8px bulmaRgba($value, 0.1), 0 0 0 1px bulmaRgba($value, 0.1)),$map);
    $map:define-variable("pagination-shadow-inset",(inset 0 1px 2px bulmaRgba($value, 0.2)),$map);
  } @else if $name=="border"{
    $map:define-variable("media-border-color", bulmaRgba($value, 0.5),$map);
    $map:define-variable("content-blockquote-border-left",(5px solid var(--#{$name})),$map);
    $map:define-variable("content-table-cell-border",(1px solid var(--#{$name})),$map);
    $map:define-variable("table-cell-border",(1px solid var(--#{$name})),$map);
  } @else if $name=="block-spacing"{
    $map:define-variable("level-item-spacing",(calc(var(--#{$name}) * 0.5)),$map);
  } @else if $name=="link"{
    $map:define-variable("button-focus-box-shadow-color",bulmaRgba($value, 0.25),$map);
    $map:define-variable("input-focus-box-shadow-color",bulmaRgba($value, 0.25),$map);
  } @else if $name=="input-color"{
    $map:define-variable("input-placeholder-color",bulmaRgba($value, 0.3),$map);
  } @else if $name=="input-disabled-color"{
    $map:define-variable("input-disabled-placeholder-color",bulmaRgba($value, 0.3),$map); 
  } @else if $name=="border-light" {
    $map:define-variable("card-footer-border-top",(1px solid var(--#{$name})),$map);
    $map:define-variable("panel-item-border",(1px solid var(--#{$name})),$map);
    $map:define-variable("panel-tab-border-bottom",(1px solid var(--#{$name})),$map);
  } @else if $name=="gap"{
    $map:define-variable("container-offset",calc(2 * var(--#{$name})),$map);
  } @else if $name=="control-border-width"{
    $map:define-variable("control-padding-vertical", calc(0.5em - var(--#{$name})),$map); 
    $map:define-variable("control-padding-horizontal",calc(0.75em - var(--#{$name})),$map); 
  } @else if $name=="red"{
    $map:define-variable("code",hsl(var(--#{$name}-h,var(--#{$name}-s),calc(var(--#{$name}-l) - 15%))),$map);
  }

  @return $map;
}

@mixin output-skin-map($map:()){
  @each $name,$value in $map{
    #{$name}:#{$value};
  }
}