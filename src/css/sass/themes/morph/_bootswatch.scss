@use "../../../../../node_modules/bulma/sass/utilities/initial-variables" as iv;
@use "../../../../../node_modules/bulma/sass/utilities/css-variables" as cv;
@use "../../../../../node_modules/bulma/sass/utilities/derived-variables" as dv;
@use "../mixins" as lmx;
@use "sass:color";

// Mixins

@mixin shadow($bg, $shadow: #{cv.getVar("box-shadow")}) {
  background-color: $bg;
  border: none;
  box-shadow: $shadow;
  transition: background-color .15s ease-in-out, border .15s ease-in-out, box-shadow .15s ease-in-out, color .15s ease-in-out;
}

@mixin shadow-outline($bg: $body-bg, $shadow: #{cv.getVar("box-shadow")}) {
  position: absolute;
  top: -.5rem;
  right: -.5rem;
  bottom: -.5rem;
  left: -.5rem;
  z-index: -1;
  content: "";
  background-color: $bg;
  border: 1px solid rgba($white, .1);
  box-shadow: $shadow;
  transition: background-color .15s ease-in-out, border .15s ease-in-out, box-shadow .15s ease-in-out, color .15s ease-in-out;
}

@mixin boot-swatch-content($white, $black, $gray-100, $gray-700, $gray-800, $dark, $gray-200){

  $border-radius:0.375rem;
  $dropdown-box-shadow:#{cv.getVar("box-shadow-lg")}, inset 1px 1px 3px rgba($white, .5), inset -5px -5px 20px rgba($black, .05);

  .#{iv.$class-prefix}button{
    box-shadow: #{cv.getVar("box-shadow")};
    font-weight:600;

    @include cv.register-vars((
      "control-radius":cv.getVar("border-radius-pill")
    ));

    &.#{iv.$class-prefix}is-large{
      @include cv.register-vars((
        "button-padding-vertical":1.5rem,
        "button-padding-horizontal":2.25rem
      ));
    }
  }

  .#{iv.$class-prefix}field-label {
    .#{iv.$class-prefix}label {
      font-weight:600;
    }
  }

  .#{iv.$class-prefix}input,
  .#{iv.$class-prefix}textarea,
  .#{iv.$class-prefix}select select {
    background-color:$gray-100;
    &::placeholder,
    &::-ms-input-placeholder {
      color: #{cv.getVar("text-muted")};
    }
  }

  .#{iv.$class-prefix}field{
    &.#{iv.$class-prefix}has-addons{
      .#{iv.$class-prefix}control{
        .#{iv.$class-prefix}button{
          @include cv.register-var("button-padding-vertical",0);
        }
      }
    }
  }

  .#{iv.$class-prefix}select:not(.#{iv.$class-prefix}is-multiple):not(.#{iv.$class-prefix}is-loading)::after {
    border-color:#{cv.getVar("text")};
  }

  .#{iv.$class-prefix}select select {
    box-shadow: #{cv.getVar("box-shadow-inset")};
  }

  .#{iv.$class-prefix}navbar-item,
  .#{iv.$class-prefix}navbar-link {
    color: #{cv.getVar("text")};
    &:focus,
    &:focus-within,
    &:hover{
      color: #{cv.getVar("text")};
    }

    &.#{iv.$class-prefix}is-disabled{
      color: #{cv.getVar("text-muted")};
    }
  }

  .#{iv.$class-prefix}navbar {
    .#{iv.$class-prefix}is-dark {
      color: rgba($white, .75);

      &:focus,
      &:focus-within,
      &:hover,
      &:active,
      &.#{iv.$class-prefix}is-active{
        color:$white;
      }

      &.#{iv.$class-prefix}is-disabled{
        color:rgba($white, .25);
      }
    }

    .#{iv.$class-prefix}is-light {
      color: #{cv.getVar("text")};

      &:focus,
      &:focus-within,
      &:hover,
      &:active,
      &.#{iv.$class-prefix}is-active{
        color:#{cv.getVar("link")};
      }

      &.#{iv.$class-prefix}is-disabled{
        color:#{cv.getVar("text-muted")};
      }
    }
  }

  .#{iv.$class-prefix}dropdown,
  a.#{iv.$class-prefix}dropdown-item,
  button.#{iv.$class-prefix}dropdown-item {
    background-color: rgba($gray-100, .8);
  }

  a.#{iv.$class-prefix}dropdown-item,
  button.#{iv.$class-prefix}dropdown-item {
    color: $gray-700;

    &:hover{
      color:$gray-800;
      background:transparent;
    }
  }

  .#{iv.$class-prefix}dropdown{
    box-shadow: $dropdown-box-shadow;
  }

  .#{iv.$class-prefix}pagination {
    @include cv.register-vars((
      "pagination-padding-vertical":1rem,
      "pagination-padding-horizontal":0.57rem,
      "pagination-item-padding-left": cv.getVar("pagination-padding-horizontal"),
      "pagination-item-padding-right":cv.getVar("pagination-padding-horizontal"),
      "pagination-disabled-background-color":transparent,
      "pagination-disabled-color":cv.getVar("text-muted")
    ));

    &.#{iv.$class-prefix}is-small {
      @include cv.register-vars((
        "pagination-padding-vertical":0.5rem,
        "pagination-padding-horizontal":1.5rem
      ));
    }
  }

  .#{iv.$class-prefix}pagination-previous,
  .#{iv.$class-prefix}pagination-next,
  .#{iv.$class-prefix}pagination-link,
  .#{iv.$class-prefix}pagination-ellipsis {
    color:$gray-700;
    background-color: transparent;

    &:active,
    &.#{iv.$class-prefix}is-active {
      color: color.adjust($gray-700,$lightness: -20%);
      background-color:transparent;
    }
  }

  .#{iv.$class-prefix}tag {
    padding-left: .75em;
    padding-right: .75em;
    padding-top: 1.25em;
    padding-bottom: 1.25em;
  }

  .#{iv.$class-prefix}progress {
    height:1.5rem;
  }

  $btn-box-shadow-inset: inset 2px 3px 6px rgba($black, .2), inset -3px -2px 6px rgba($white, .2) !default;

  $box-shadow-dark: 5px 5px 10px rgba(color.adjust($dark,$lightness: -50%), .2), -5px -5px 10px rgba($white, .05) !default;

  // Buttons

  .#{iv.$class-prefix}button{
    position: relative;
    @include shadow($gray-200);

    &:hover,
    &:focus,
    &:active,
    &:active:focus {
      @include shadow($gray-200);
    }

    &:active,
    &:active:focus {
      border-color: transparent;
      box-shadow: $btn-box-shadow-inset;
    }

    @each $color,$value in dv.$colors {
      &.#{iv.$class-prefix}is-#{$color} {

        &:active,
        &:active:focus {
          @if ($color == light) {
            color: $gray-700;
            background-color: $gray-200;
          } @else {
            color: $white;
            background-color: #{cv.getVar($color)};
          }
        }

        &.#{iv.$class-prefix}is-outlined{
          background-color: $value;
          border: none;
          box-shadow: 5px 5px 10px rgba($black, .2), -5px -5px 10px rgba($white, .1);
    
          @if ($color == light) {
            color: $gray-700;
          } @else {
            color: $white;
          }
    
          &:hover,
          &:focus {
            background-color: $value;
            border: none;
            box-shadow: 5px 5px 10px rgba($black, .2), -5px -5px 10px rgba($white, .1);
    
            @if ($color == light) {
              color: $gray-700;
            } @else {
              color: $white;
            }
          }
    
          &:active,
          &:active:focus {
            background-color: $value;
            border: none;
            box-shadow: inset 2px 3px 6px rgba($black, .1), inset -3px -2px 6px rgba($white, .1);
    
            @if ($color == light) {
              color: $gray-700;
            } @else {
              color: $white;
            }
          }
        }
      }
    }

    &.#{iv.$class-prefix}is-link {
      &:hover,
      &:active,
      &:active:focus {
        color: #{cv.getVar("dark")};
      }
    }

    &.#{iv.$class-prefix}is-disabled {
      color: $gray-700;
      background-color: $gray-200;
      box-shadow: 2px 2px 5px rgba($black, .1), -2px -2px 5px rgba($white, .5);
    }
  }

  // Navs

  .#{iv.$class-prefix}dropdown {
    backdrop-filter: blur(3px);
  }

  .#{iv.$class-prefix}tabs {
    @include shadow($gray-200);
    border-radius: $border-radius;

    li {
      box-shadow: 1px 0 #{cv.getVar("border")};

      &:first-child .nav-link {
        border-top-left-radius: $border-radius;
        border-bottom-left-radius: $border-radius;
      }

      &:last-child .nav-link {
        border-top-right-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }

      &.#{iv.$class-prefix}is-active
      {
        box-shadow: inset 0 3px 6px rgba($black, .2);
      }
    }

    &.#{iv.$class-prefix}is-toggle {
      @include shadow($gray-200);
      padding: 1rem;
      border-radius: $border-radius;


      li.#{iv.$class-prefix}is-active {
        box-shadow: inset 0 3px 6px rgba($black, .2);
      }
    }
  }

  .#{iv.$class-prefix}breadcrumb {
    @include shadow($gray-200);
    border-radius: $border-radius;
  }

  .#{iv.$class-prefix}pagination {
    @include shadow($gray-200);
    justify-content: center;
    border-radius: $border-radius;
  }

  /*
  // Forms

  .input-group {
    background-color: $gray-100;
    border-radius: $border-radius;
    box-shadow: #{cv.getVar("box-shadow-inset")};

    > .form-control {
      background: none;
      box-shadow: none;
    }

    .input-group-text {
      background: none;
    }

    .btn {
      border: none;
      border-radius: 0;

      &:first-child {
        border-radius: $border-radius 0 0 $border-radius;
      }

      &:last-child {
        border-radius: 0 $border-radius $border-radius 0;
      }
    }
  }

  .form-range {
    &::-webkit-slider-runnable-track {
      box-shadow: inset 1px 1px 4px rgba($black, .15);
    }

    &::-webkit-slider-thumb,
    &:focus::-webkit-slider-thumb {
      //box-shadow: 1px 1px 3px rgba($black, .2), inset 2px 2px 8px rgba(shade-color($form-range-thumb-bg, 50%), .1);
    }
  }

  .form-check-input {
    background-color: $gray-400;
    border: none;
    box-shadow: inset 1px 1px 7px rgba($black, .2);

    &:focus {
      border: none;
      box-shadow: none;
    }

    &:active {
      filter: none;
    }

    &:checked {
      background-color: #{cv.getVar("primary")};
      box-shadow: inset 1px 1px 7px rgba($black, .2);
    }
  }

  .form-control {
    &::file-selector-button {
      //box-shadow: 2px 2px 5px rgba($black, .2), inset 3px 3px 10px rgba(shade-color($form-range-thumb-bg, 50%), .1);
    }
  }

  .form-select:not([multiple]) {
    position: relative;
    box-shadow: #{cv.getVar("box-shadow")};
  } */

  // Indicators

  .#{iv.$class-prefix}notification {
    backdrop-filter: blur(3px);
    box-shadow: $dropdown-box-shadow;

    @each $color, $value in dv.$colors {
      &.#{iv.$class-prefix}is-#{$color} {
        background-color: #{cv.buildHslaString($color,null,.75)};
        box-shadow: #{cv.getVar("box-shadow-lg")}, inset 1px 1px 3px #{lmx.lighten-color($color,80,0.4)}, inset -5px -5px 20px #{lmx.darken-color($color,80,0.05)};
      }
    }
  }

  .#{iv.$class-prefix}badge {
    &.#{iv.$class-prefix}is-light {
      color: $gray-700;
    }
  }

  /*
  .tooltip {
    &.show {
      opacity: 1;
    }

    &-inner,
    .arrow {
      backdrop-filter: blur(3px);
      box-shadow: $dropdown-box-shadow;
    }
  }

  .popover,
  .toast,
  .modal-content {
    backdrop-filter: blur(3px);
    box-shadow: $dropdown-box-shadow;
  }
  */

  .#{iv.$class-prefix}progress {
    box-shadow: inset 2px 4px 6px #{lmx.lighten-color("text",50,0.2)}, inset -3px -2px 5px rgba($white, .8);
  }

  /*.progress-bar {
    box-shadow: 2px 2px 5px rgba($black, .2);

    &:first-child {
      border-top-left-radius: #{cv.getVar("border-radius-pill")};
      border-bottom-left-radius: #{cv.getVar("border-radius-pill")};
    }

    &:last-child {
      border-top-right-radius: $border-radius-pill;
      border-bottom-right-radius: $border-radius-pill;
    }
  }*/

  // Containers

  .#{iv.$class-prefix}card {
    box-shadow: inset 2px 2px 6px #{lmx.darken-color("text",50,0.2)}, inset -3px -2px 4px rgba($white, .2);

    @each $color, $value in dv.$colors {
      &.#{iv.$class-prefix}is-#{$color} {
        box-shadow: inset 2px 2px 6px  #{lmx.darken-color($color,80,0.05)}, inset -3px -2px 4px #{lmx.lighten-color($color,80,0.2)};
      }
    }

    .#{iv.$class-prefix}card-header {
      border-bottom: 1px solid #{cv.getVar("border-color")};
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: inherit;
    }
  }

  /*
  .list-group {
    //background-color: $card-bg;
    box-shadow: inset 2px 2px 6px #{lmx.darken-color("text", 50, .2)}, inset -3px -2px 4px rgba($white, .2);
  }

  .list-group-item {
    background-color: transparent;
  }*/

}