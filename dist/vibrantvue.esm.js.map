{"version":3,"file":"vibrantvue.esm.js","sources":["../src/components/utilities.ts","../src/enums.ts","../src/components/shared.ts","../src/components/common/animation.vue","../src/components/common/icon.vue","../src/components/common/buttons/button.vue","../src/messages/button/messages.json?raw","../src/messages/filter/messages.json?raw","../src/messages/pagination/messages.json?raw","../src/messages/date/messages.json?raw","../src/messages/form/messages.json?raw","../src/messages/wizard/messages.json?raw","../src/messages/messages.ts","../src/components/common/buttons/button-add.vue","../src/components/common/buttons/button-cancel.vue","../src/components/common/buttons/button-delete.vue","../src/components/common/buttons/button-disable.vue","../src/components/common/buttons/button-download.vue","../src/components/common/buttons/button-edit.vue","../src/components/common/buttons/button-enable.vue","../src/components/common/buttons/button-okay.vue","../src/components/common/buttons/button-print.vue","../src/components/common/buttons/button-refresh.vue","../src/components/common/buttons/button-save.vue","../src/components/common/buttons/button-upload.vue","../src/components/common/buttons-container.vue","../src/components/common/check-mark.vue","../src/components/common/dropdown.vue","../src/components/common/dynamic-slot.vue","../src/components/common/filter.vue","../src/components/common/message.vue","../src/components/common/notification.vue","../src/components/common/page-notification.vue","../src/components/common/pagination.vue","../src/components/common/Promised.vue","../src/components/common/progress.vue","../src/components/common/navbar-item.vue","../src/components/common/navbar.vue","../src/components/common/menus/menu.vue","../src/components/common/menus/menu-label.vue","../src/components/common/menus/menu-entry.vue","../src/components/common/menus/menu-list.vue","../src/components/common/badge.vue","../src/components/common/tooltip.vue","../src/components/common/tag.vue","../src/components/common/tags.vue","../src/components/dragging/draggable-item.vue","../src/components/dragging/dropzone.vue","../src/components/layout/list.vue","../src/components/dragging/sortable.vue","../src/components/form/common.ts","../src/components/form/autocomplete.vue","../src/components/form/button.vue","../src/components/form/checkbox-group.vue","../src/components/form/checkbox.vue","../src/components/form/dates.ts","../src/components/form/time.vue","../src/components/form/date.vue","../src/components/form/full-editor.vue","../src/components/form/header.vue","../src/components/form/hidden.vue","../src/components/form/number.vue","../src/components/form/paragraph.vue","../src/components/form/radio-group.vue","../src/components/form/select.vue","../src/components/form/switch.vue","../src/components/form/text.vue","../src/components/form/textarea.vue","../src/components/layout/column-container.vue","../src/components/form/inputs-collection.vue","../src/components/form/subform.vue","../src/components/form/enums.ts","../src/components/form/form-component.vue","../src/components/form/component-form.vue","../src/components/layout/banner.vue","../src/components/layout/breadcrumbs.vue","../src/components/layout/card.vue","../src/components/layout/level.vue","../src/components/layout/media.vue","../src/components/layout/modal.vue","../src/components/layout/modal-card.vue","../src/components/layout/panel.vue","../src/components/layout/section.vue","../src/components/layout/table.vue","../src/components/layout/tabs.vue","../src/components/layout/slideout.vue","../src/components/layout/step-wizard.vue","../src/css/skins.ts","../src/components/extended/chart.vue","../src/components/extended/code-writer.vue","../src/components/extended/grid.vue","../src/components/extended/progress-group.vue","../src/components/index.ts"],"sourcesContent":["export const css = (path:string|string[]) : Promise<any>=>{\r\n    return new Promise((resolve) => {\r\n        let promises = [];\r\n        let head = document.head || document.getElementsByTagName('head')[0];\r\n        (!Array.isArray(path) ? [path] : path).forEach((url,index) => {\r\n            if (!url.toLowerCase().endsWith('.css')) {\r\n                url += '.css';\r\n            }\r\n            let add = document.querySelectorAll('link[server_path=\"' + url + '\"]').length == 0;\r\n            if (add) {\r\n                let style = document.createElement('link');\r\n                let prom = new Promise(resolve => {\r\n                    style.onload = function () { resolve(url); };\r\n                });\r\n                promises[index] = prom;\r\n                head.appendChild(style);\r\n                style.setAttribute('rel', 'stylesheet');\r\n                style.setAttribute('type', 'text/css');\r\n                style.setAttribute('server_path', url);\r\n                style.setAttribute('href', url);\r\n            } else\r\n                promises[index] = Promise.resolve(url);\r\n        });\r\n        Promise.all(promises).then(results => {\r\n            resolve(results);\r\n        });\r\n    });\r\n};\r\n\r\ntype loadedModule = {\r\n    path:string,\r\n    result?:any|null\r\n};\r\n\r\nconst loadedModules:loadedModule[] = [];\r\n\r\nexport const loadNonEs6Module = (path:string,windowProperties?:string[]) : Promise<any|undefined> => {\r\n    return new Promise(resolve=>{\r\n        let res = loadedModules.find(m=>m.path===path);\r\n        if (res!==undefined && res!==null){\r\n            if ((res.result===undefined && windowProperties!==undefined)\r\n            ||(res.result===null && windowProperties===undefined)){\r\n                let timeout = setTimeout(()=>{\r\n                    let res = loadedModules.find(m=>m.path===path);\r\n                    if (res===undefined || res===null){\r\n                        clearTimeout(timeout);\r\n                        resolve(undefined);\r\n                    }else if ((res.result!==undefined && windowProperties!==undefined)\r\n                    ||(res.result===undefined && windowProperties===undefined)){\r\n                        clearTimeout(timeout);\r\n                        resolve(res.result);\r\n                    }\r\n                },500);\r\n            }else{\r\n                resolve(res.result);\r\n            }\r\n        }else{\r\n            loadedModules.push({\r\n                path:path,\r\n                result:(windowProperties===undefined ? null : undefined)\r\n            });\r\n            let script = document.createElement('script');\r\n            script.onload = ()=>{\r\n                let idx = loadedModules.findIndex(m=>m.path===path);\r\n                if (windowProperties===undefined){\r\n                    loadedModules[idx].result=undefined;\r\n                }else{\r\n                    let result = {};\r\n                    windowProperties.forEach(p=>{\r\n                        result[p] = window[p];\r\n                    });\r\n                    loadedModules[idx].result=result;\r\n                }\r\n                resolve(loadedModules[idx].result);\r\n            };\r\n            script.setAttribute('src',path);\r\n            let head = document.head || document.getElementsByTagName('head')[0];\r\n            head.appendChild(script);            \r\n        }\r\n    });\r\n}\r\n\r\nexport const generateUUID = () : string => {\r\n  let cryptoRef: Crypto;\r\n  let r: string | undefined = \"\";\r\n\r\n  if (typeof self.crypto !== \"undefined\") {\r\n    cryptoRef = self.crypto;\r\n    r = cryptoRef.randomUUID?.();\r\n  }\r\n\r\n  return r ? r : \"\";\r\n}","export enum ColorTypes{ white='white', black='black', light='light', dark='dark', \r\nprimary='primary', link='link', info='info', success='success', warning='warning', \r\ndanger='danger' };\r\nexport enum NoticeTypes{ info='info', success='success', warning='warning', danger='danger' };\r\nexport enum Sizes{small='small',normal='normal',medium='medium',large='large'};\r\nexport enum AnimationSpeeds{slower='slower',slow='slow',fast='fast',faster='faster'};\r\nexport enum AnimationTypes{bounce='bounce',flash='flash',pulse='pulse',rubberBand='rubberBand',shakeX='shakeX',\r\nshakeY='shakeY',headShake='headShake',swing='swing',tada='tada',wobble='wobble',jello='jello',heartBeat='heartBeat',\r\nbackOutDown='backOutDown',backOutLeft='backOutLeft',backOutRight='backOutRight',backOutUp='backOutUp',\r\nbounceIn='bounceIn',bounceInDown='bounceInDown',bounceInLeft='bounceInLeft',bounceInRight='bounceInRight',bounceInUp='bounceInUp',\r\nbounceOut='bounceOut',boundOutDown='boundOutDown',bounceOutLeft='bounceOutLeft',boundOutRight='boundOutRight',bounceOutUp='bounceOutUp',\r\nfadeIn='fadeIn',fadeInDown='fadeInDown',fadeInDownBig='fadeInDownBig',fadeInLeft='fadeInLeft',fadeInLeftBig='fadeInLeftBig',\r\nfadeInRight='fadeInRight',fadeInRightBig='fadeInRightBig',fadeInUp='fadeInUp',fadeInUpBig='fadeInUpBig',fadeInTopLeft='fadeInTopLeft',\r\nfadeInTopRight='fadeInTopRight',fadeInBottomLeft='fadeInBottomLeft',fadeInBottomRight='fadeInBottomRight',\r\nfadeOut='fadeOut',fadeOutDown='fadeOutDown',fadeOutDownBig='fadeOutDownBig',fadeOutLeft='fadeOutLeft',fadeOutLeftBig='fadeOutLeftBig',\r\nfadeOutRight='fadeOutRight',fadeOutRightBig='fadeOutRightBig',fadeOutUp='fadeOutUp',fadeOutUpBig='fadeOutUpBig',fadeOutTopLeft='fadeOutTopLeft',\r\nfadeOutTopRight='fadeOutTopRight',fadeOutBottomRight='fadeOutBottomRight',fadeOutBottomLeft='fadeOutBottomLeft',\r\nflip='flip',flipInX='flipInX',flipInY='flipInY',flipOutX='flipOutX',flipOutY='flipOutY',\r\nlightSpeedInRight='lightSpeedInRight',lightSpeedInLeft='lightSpeedInLeft',lightSpeedOutRight='lightSpeedOutRight',\r\nlightSpeedOutLeft='lightSpeedOutLeft',rotateIn='rotateIn',rotateInDownLeft='rotateInDownLeft',rotateInDownRight='rotateInDownRight',\r\nrotateInUpLeft='rotateInUpLeft',rotateInUpRight='rotateInUpRight',rotateOut='rotateOut',rotateOutDownLeft='rotateOutDownLeft',\r\nrotateOutDownRight='rotateOutDownRight',rotateOutUpLeft='rotateOutUpLeft',rotateOutUpRight='rotateOutUpRight',\r\nhinge='hinge',jackInTheBox='jackInTheBox',rollIn='rollIn',rollOut='rollOut',\r\nzoomIn='zoomIn',zoomInDown='zoomInDown',zoomInLeft='zoomInLeft',zoomInRight='zoomInRight',zoomInUp='zoomInUp',\r\nzoomOut='zoomOut',zoomOutDown='zoomOutDown',zoomOutLeft='zoomOutLeft',zoomOutRight='zoomOutRight',zoomOutUp='zoomOutUp',\r\nslideInDown='slideInDown',slideInLeft='slideInLeft',slideInRight='slideInRight',slideInUp='slideInUp',\r\nslideOutDown='slideOutDown',slideOutLeft='slideOutLeft',slideOutRight='slideOutRight',slideOutUp='slideOutUp'};\r\nexport enum ChartTypes{area='area',bar='bar',bubble='bubble',doughnut='doughnut',pie='pie',line='line',polarArea='polarArea',radar='radar',scatter='scatter'};\r\nexport enum ChartLegendPositions{top='top',left='left',bottom='bottom',right='right',chartArea='chartArea'};\r\nexport enum IconSizes{xxsmall='2xs',xsmall='xs',small='sm',normal='',large='lg',xlarge='xl',xxlarge='2xl'};\r\nexport enum DropZoneQuadrants{center='center',topLeft='topLeft',bottomLeft='bottomLeft',topRight='topRight',bottomRight='bottomRight',\r\ntop='top',bottom='bottom'};\r\nexport enum BreadCrumbAlignments{centered='centered',right='right',left='left'};\r\nexport enum BreadCrumbSeperators{arrow='arrow',button='button',dot='dot',succeeds='succeeds'};\r\nexport enum ColumnContainerModifiers{mobile='mobile',desktop='desktop',gapless='gapless',multiline='multiline', \r\ncentered='centered', borderleft='borderleft',borderright='borderright',borderbottom='borderbottom',bordertop='bordertop',fullWidth='fullwidth',\r\nfullHeight='fullheight'};\r\nexport enum ColumnSizes {three_quarters=\"three-quarters\",two_thirds=\"two-thirds\",half=\"half\",one_third=\"one-third\",\r\none_quarter=\"one-quarter\",full=\"full\",one_fifth=\"one-fifth\",two_fifths=\"two-fifths\",three_fifths=\"three-fifths\",\r\nfour_fifths=\"four-fifths\",one=\"1\",two=\"2\",three=\"3\",four=\"4\",five=\"5\",six=\"6\",seven=\"7\",eight=\"8\",nine=\"9\",\r\nten=\"10\",eleven=\"11\",twelve=\"12\",narrow=\"narrow\",wide=\"wide\"};\r\nexport enum ColumnOffsetSizes {three_quarters=\"three-quarters\",two_thirds=\"two-thirds\",half=\"half\",one_third=\"one-third\",\r\none_quarter=\"one-quarter\",one_fifth=\"one-fifth\",two_fifths=\"two-fifths\",three_fifths=\"three-fifths\",four_fifths=\"four-fifths\",\r\none=\"1\",two=\"2\",three=\"3\",four=\"4\",five=\"5\",six=\"6\",seven=\"7\",eight=\"8\",nine=\"9\",ten=\"10\",eleven=\"11\"}\r\nexport enum BorderTypes{left='left',right='right',bottom='bottom',top='top',all='all'};\r\nexport enum TabAlignments{centered='centered',right='right',left='left'};\r\nexport enum TabStyles{boxed='boxed',toggled='toggled',roundToggle='roundToggle'};\r\nexport enum TileSizes{one=\"1\",two=\"2\",three=\"3\",four=\"4\",five=\"5\",six=\"6\",seven=\"7\",eight=\"8\",nine=\"9\",ten=\"10\",eleven=\"11\",twelve=\"12\"};\r\nexport enum TileTypes{parent='parent',child='child',ancestor='ancestor'};\r\nexport enum FixedNavBarPositions{top='is-fixed-top',bottom='is-fixed-bottom'};\r\nexport enum FixedMenuPositions{left='left',right='right'};\r\nexport enum BadgePositions{topLeft='top-left',top='top',topRight='top-right',right='right',bottomRight='bottom-right',bottom='bottom',bottomLeft='bottom-left',left='left'};\r\nexport enum ToolTipPositions{left='left',right='right',bottom='bottom',top='top'};\r\nexport enum ToolTipTextAlignments{left='left',centered='centered',right='right'};\r\nexport enum ButtonAlignments{centered='centered',right='right',left='left'};\r\nexport enum SkinTypes{cerulean='cerulean',cosmo='cosmo',cyborg='cyborg',dark='dark',darkly='darkly',default='default',flatly='flatly',journal='journal',\r\n    light='light',litera='litera',lumen='lumen',lux='lux',materia='materia',minty='minty',morph='morph',pulse='pulse',quartz='quartz',sandstone='sandstone',\r\n    simplex='simplex',sketchy='sketchy',slate='slate',solar='solar',spacelab='spacelab',superhero='superhero',united='united',vapor='vapor',yeti='yeti',\r\n    zephyr='zephyr'};\r\nexport enum SectionSizes{medium='medium',large='large'};\r\nexport enum StepWizardOrientations{default='default',verticalRight='is-vertical-right',verticalLeft='is-vertical-left'}","import { ComputedRef, computed } from \"vue\";\r\n\r\nexport const useLanguage= (inject: (<T>(string,T?)=> T | undefined)) : ComputedRef<string> => {\r\n    const ILanguage = inject<string>('Language','en');\r\n    const Language = computed<string>(()=>ILanguage!);\r\n  \r\n    return Language;\r\n};\r\n\r\nexport const useIconSet= (inject: (<T>(string,T?)=> T | undefined)) : ComputedRef<string> => {\r\n    const IIconSet = inject<string>('IconSet','solid');\r\n    const IconSet = computed<string>(()=>IIconSet!);\r\n  \r\n    return IconSet;\r\n};\r\n\r\nexport const useSummerNote = (inject: (<T>(string,T?)=> T | undefined)) : string => \r\n    inject<string>('SummerNoteCDN','https://cdnjs.cloudflare.com/ajax/libs/summernote/0.9.0/')!;\r\n\r\nexport const useFontAwesome = (inject: (<T>(string,T?)=> T | undefined)) : string => \r\n    inject<string>('FontAwesomeCDN','https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/')!;\r\n\r\nexport const useAnimation = (inject: (<T>(string,T?)=> T | undefined)) : string => \r\n    inject<string>('AnimateCDN','https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/')!;\r\n\r\nexport const useChartJS = (inject: (<T>(string,T?)=> T | undefined)) : string => \r\n    inject<string>('ChartJSCDN','https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.7/')!;\r\n\r\nexport const useAceJS = (inject: (<T>(string,T?)=> T | undefined)) : string => \r\n    inject<string>('AceJSCDN','https://cdn.jsdelivr.net/npm/ace-builds@1.37.3/')!;\r\n\r\n\r\n\r\n\r\n","<template>\r\n    <Transition :enter-active-class=\"onEnter\" :leave-active-class=\"onExit\" :duration=\"Duration\" v-if=\"!props.repeating\">\r\n        <!--\r\n            @slot Content to be animated\r\n        -->\r\n        <slot/>\r\n    </Transition>\r\n    <div :class=\"repeatingClass\" v-else>\r\n        <!--\r\n            @slot Content to be animated\r\n        -->\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n/**\r\n     * When supplying properties, the combinations should either be incoming and outgoing if seperate types are desired.\r\n     * Otherwise supply inout and it will use that for both enter an exit.\r\n     * If the desire is to repeat, specify repeating and do not specify the previous ones.\r\n     * If the speed for either enter and exit is desired to be the same, specify speed.\r\n     * Otherwise specify speedin or speedout or both.  These will not apply to repeating, speed will apply to repeating.\r\n     * \r\n     * @displayName Animation\r\n     * @link https://animate.style/\r\n     * @link_title Animate.css library\r\n     */\r\n    import {css} from '../utilities.js';\r\n    import { computed,inject } from 'vue';\r\n    import { AnimationSpeeds, AnimationTypes } from '../../enums';\r\n    import { useAnimation } from '../shared';\r\n\r\n    const baseURL = useAnimation(inject);\r\n\r\n    css(`${baseURL}animate.min.css`);\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n       * The incoming animation to use for an item entering\r\n       */\r\n        incoming?:AnimationTypes,\r\n        /**\r\n       * The outgoing animation to use for an item exiting\r\n       */\r\n        outgoing?:AnimationTypes,\r\n        /**\r\n       * The animation to use for an item entering and exiting\r\n       */\r\n        inout?:AnimationTypes,\r\n        /**\r\n       * The speed of the animation\r\n       */\r\n        speed?:AnimationSpeeds, \r\n        /**\r\n       * The speed of the animation for an item entering\r\n       */\r\n        speedIn?:AnimationSpeeds, \r\n        /**\r\n       * The speed of the animation for an item exiting\r\n       */\r\n        speedOut?:AnimationSpeeds,\r\n        /**\r\n       * The repeating animation to use for an item\r\n       */\r\n        repeating?:AnimationTypes\r\n    }>(),{\r\n        speed:AnimationSpeeds.slow\r\n    });\r\n\r\n    const getSpeedTime = (speed:AnimationSpeeds) => {\r\n        switch (speed) {\r\n            case AnimationSpeeds.slower:\r\n                return 3000;\r\n            case AnimationSpeeds.fast:\r\n                return 800;\r\n            case AnimationSpeeds.faster:\r\n                return 500;\r\n            default:\r\n                return 2000;\r\n        }\r\n    };\r\n\r\n    const getAnimationName = (animation?:AnimationTypes) => {\r\n        return (animation === undefined ? '' : `animate__${animation}`);\r\n    };\r\n    const getSpeedName = (speed?:AnimationSpeeds)=> {\r\n        return (speed === undefined ? 'animate__slow' : `animate__${speed}`);\r\n    };\r\n    \r\n    const Duration = computed(() => {\r\n        return {\r\n            enter: getSpeedTime(props.speedIn ?? props.speed),\r\n            leave: getSpeedTime(props.speedOut ?? props.speed)\r\n        };\r\n    });\r\n    const onEnter = computed(() => {\r\n        return [\r\n            'animate__animated',\r\n            getAnimationName(props.incoming ?? props.inout),\r\n            getSpeedName(props.speedIn ?? props.speed)\r\n        ].join(' ');\r\n    });\r\n    const onExit = computed(() => {\r\n        return [\r\n            'animate__animated',\r\n            getAnimationName(props.outgoing ?? props.inout),\r\n            getSpeedName(props.speedOut ?? props.speed)\r\n        ].join(' ');\r\n    });\r\n    const repeatingClass = computed(() => {\r\n        return [\r\n            'animate__animated',\r\n            'animate__infinite',\r\n            getAnimationName(props.repeating),\r\n            getSpeedName(props.speed)\r\n        ].join(' ');\r\n    });\r\n</script>.js","<template>\r\n    <i :class=\"clazz\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed,watch,inject,ref } from 'vue';\r\n    import {IconSizes} from '../../enums';\r\n    import { useFontAwesome, useIconSet } from '../shared';\r\n\r\n    const brandsUrl:string = `brands.min.css`;\r\n    const allUrl:string = `all.min.css`;\r\n    const brandsId:string = 'icon_styles';\r\n\r\n    const reg = /\\.fa-([^: ]+):before/g;\r\n    const urlReg = /url\\(([^)]+)\\)/g;\r\n    const brands = ref<string[]>([]);\r\n    const loading = ref<boolean>(false);\r\n    \r\n    const loadStyles = async (urlBase:string,iconSet:string) : Promise<void> =>{\r\n        if (!loading.value){\r\n            loading.value=true;\r\n            let el:HTMLStyleElement;\r\n            if (brands.value.length===0){\r\n                el = document.createElement('style') as HTMLStyleElement;\r\n                el.setAttribute('id',brandsId);\r\n                document.head.appendChild(el);\r\n                el.setAttribute('type', 'text/css');\r\n            }else{\r\n                el = document.getElementById(brandsId) as HTMLStyleElement;\r\n            }\r\n            brands.value=[' '];\r\n            let results = await Promise.all([\r\n                fetch(`${urlBase}${brandsUrl}`),\r\n                fetch(`${urlBase}${allUrl}`),\r\n                fetch(`${urlBase}${iconSet}.min.css`)\r\n            ]);\r\n            let content:string = await results[0].text();\r\n            [...content.matchAll(reg)].forEach(match => {\r\n                brands.value.push(match[1]);\r\n            });\r\n            content = `${await results[1].text()}\r\n    ${await results[2].text()}\r\n    ${content}`;\r\n            [...content.matchAll(urlReg)].forEach(match=>{\r\n                content=content.replace(match[0],`url(${new URL(match[1],urlBase)})`);\r\n            });\r\n            el.innerText=content;\r\n            brands.value.splice(0,1);\r\n            loading.value=false;\r\n        }\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to add an icon on the screen from the font-awesome icon set\r\n * If you desire to change the font awesome cdn version, inject FontAwesomeCDN\r\n * If you desire to change the font awesome iconset to use, default is solid, inject IconSet\r\n * \r\n * @displayName Icon\r\n * @link https://bulma.io/documentation/elements/icon/\r\n */\r\n    const urlBase = useFontAwesome(inject);\r\n    const iconSet = useIconSet(inject);\r\n\r\n    if(brands.value.length===0){\r\n        loadStyles(urlBase,iconSet.value);\r\n    }else{\r\n        watch(iconSet,()=>loadStyles(urlBase,iconSet.value));\r\n    }\r\n    \r\n    const props = defineProps<{\r\n        /**\r\n         * The icon name to use from font awesome\r\n         */\r\n        icon:string,\r\n        /**\r\n         * The size of the icon\r\n         */\r\n        size?:IconSizes\r\n    }>();\r\n\r\n    const clazz = computed(() => {\r\n        let results = [];\r\n        if (props.icon !== undefined && props.icon !== null) {\r\n            if (brands.value.indexOf(props.icon) >= 0) {\r\n                results.push('fa-brands');\r\n            } else {\r\n                results.push('fa-ico');\r\n                results.push(`fa-${iconSet.value}`);\r\n            }\r\n            results.push((props.icon.indexOf('fa-') == -1 ? ' fa-' : ' ') + props.icon);\r\n        }\r\n        if (props.size !== undefined && props.size !== null && props.size!==IconSizes.normal) {\r\n            results.push(`fa-${props.size}`);\r\n        }\r\n        return results;\r\n    });\r\n</script>\r\n\r\n<style>\r\n    .fa-ico.fa-md {\r\n        font-size: 15px !important;\r\n    }\r\n</style>","<template>\r\n    <button :class=\"Classes\" :disabled=\"props.disabled\" @click=\"emit('click')\">\r\n        <span class=\"icon is-small\" v-if=\"props.icon\">\r\n            <Icon :icon=\"props.icon\"/>\r\n        </span>\r\n        <span v-if=\"props.title\">{{props.title}}</span>\r\n    </button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import Icon from '../icon.vue';\r\n    import {ColorTypes,Sizes} from '../../../enums';\r\n    import {computed} from 'vue';\r\nimport { IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is a stylized and customizable button\r\n * @displayName Button\r\n * @link https://bulma.io/documentation/elements/button/\r\n */\r\n    const props = withDefaults(defineProps<IButtonProperties>(),{\r\n        type:ColorTypes.primary,\r\n        size:Sizes.normal\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n\r\n    const Classes = computed<string[]>(()=>{\r\n        return [\r\n            'button',\r\n            `is-${props.size??Sizes.normal}`,\r\n            `is-${props.type??ColorTypes.primary}`,\r\n            (props.disabled ? 'disabled' : ''),\r\n            (props.is_rounded ? 'is-rounded' : ''),\r\n            (props.hide_mobile ? 'is-hidden-mobile' : ''),\r\n            (props.hide_tablet ? 'is-hidden-tablet-only' : ''),\r\n            (props.hide_desktop ? 'is-hidden-desktop is-hidden-widescreen' : '' )\r\n        ];\r\n    });\r\n</script>","export default \"{\\\"en\\\":{\\\"Add\\\":\\\"Add\\\",\\\"Cancel\\\":\\\"Cancel\\\",\\\"Delete\\\":\\\"Delete\\\",\\\"Disable\\\":\\\"Disable\\\",\\\"Download\\\":\\\"Download\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Enable\\\",\\\"Okay\\\":\\\"Okay\\\",\\\"Print\\\":\\\"Print\\\",\\\"Refresh\\\":\\\"Refresh\\\",\\\"Save\\\":\\\"Save\\\",\\\"Submit\\\":\\\"Submit\\\",\\\"Upload\\\":\\\"Upload\\\"},\\\"ar\\\":{\\\"Add\\\":\\\"مضافا\\\",\\\"Cancel\\\":\\\"إلغاء\\\",\\\"Delete\\\":\\\"تحذف\\\",\\\"Disable\\\":\\\"العجز\\\",\\\"Download\\\":\\\"تحميل\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"التمكين\\\",\\\"Okay\\\":\\\"حسناً\\\",\\\"Print\\\":\\\"الطباعة\\\",\\\"Refresh\\\":\\\"التجديد\\\",\\\"Save\\\":\\\"أنقذ\\\",\\\"Submit\\\":\\\"Submit\\\",\\\"Upload\\\":\\\"تحميل\\\"},\\\"az\\\":{\\\"Add\\\":\\\"Axtarış\\\",\\\"Cancel\\\":\\\"Tarix\\\",\\\"Delete\\\":\\\"Delete\\\",\\\"Disable\\\":\\\"Qeydiyyat\\\",\\\"Download\\\":\\\"Qeydiyyat\\\",\\\"Edit\\\":\\\"Tarix\\\",\\\"Enable\\\":\\\"Qeydiyyat\\\",\\\"Okay\\\":\\\" Okay\\\",\\\"Print\\\":\\\"Çap\\\",\\\"Refresh\\\":\\\"Axtarış\\\",\\\"Save\\\":\\\"Yadda\\\",\\\"Submit\\\":\\\"Qeydiyyat\\\",\\\"Upload\\\":\\\"Tarix\\\"},\\\"bg\\\":{\\\"Add\\\":\\\"Добавяне\\\",\\\"Cancel\\\":\\\"Отмяна\\\",\\\"Delete\\\":\\\"Изтриване\\\",\\\"Disable\\\":\\\"Изключване\\\",\\\"Download\\\":\\\"Изтегляне\\\",\\\"Edit\\\":\\\"Редактиране\\\",\\\"Enable\\\":\\\"Включване\\\",\\\"Okay\\\":\\\"Добре\\\",\\\"Print\\\":\\\"Печат\\\",\\\"Refresh\\\":\\\"Обновяване\\\",\\\"Save\\\":\\\"Запис\\\",\\\"Submit\\\":\\\"Подаване\\\",\\\"Upload\\\":\\\"Качване\\\"},\\\"bn\\\":{\\\"Add\\\":\\\"যোগ\\\",\\\"Cancel\\\":\\\"বাতিল\\\",\\\"Delete\\\":\\\"মুছে\\\",\\\"Disable\\\":\\\"নিষ্ক্রিয়\\\",\\\"Download\\\":\\\"ডাউনলোড\\\",\\\"Edit\\\":\\\"সম্পাদনা\\\",\\\"Enable\\\":\\\"সক্রিয়\\\",\\\"Okay\\\":\\\"ঠিক\\\",\\\"Print\\\":\\\"প্রিন্ট\\\",\\\"Refresh\\\":\\\"নতুন\\\",\\\"Save\\\":\\\"সংরক্ষণ\\\",\\\"Submit\\\":\\\"জমা\\\",\\\"Upload\\\":\\\"আপলোড\\\"},\\\"ca\\\":{\\\"Add\\\":\\\"Afegeix\\\",\\\"Cancel\\\":\\\"Cancel·\\\",\\\"Delete\\\":\\\"Esborra\\\",\\\"Disable\\\":\\\"Deshabilita\\\",\\\"Download\\\":\\\"Descarrega\\\",\\\"Edit\\\":\\\"Edita\\\",\\\"Enable\\\":\\\"Habilita\\\",\\\"Okay\\\":\\\"Bé\\\",\\\"Print\\\":\\\"Imprimeix\\\",\\\"Refresh\\\":\\\"Refresca\\\",\\\"Save\\\":\\\"Desa\\\",\\\"Submit\\\":\\\"Envia\\\",\\\"Upload\\\":\\\"Puja\\\"},\\\"cs\\\":{\\\"Add\\\":\\\"Přidat\\\",\\\"Cancel\\\":\\\"Zrušit\\\",\\\"Delete\\\":\\\"Smazat\\\",\\\"Disable\\\":\\\"Zakázat\\\",\\\"Download\\\":\\\"Stáhnout\\\",\\\"Edit\\\":\\\"Upravit\\\",\\\"Enable\\\":\\\"Povolit\\\",\\\"Okay\\\":\\\"Dobře\\\",\\\"Print\\\":\\\"Tisk\\\",\\\"Refresh\\\":\\\"Obnovit\\\",\\\"Save\\\":\\\"Uložit\\\",\\\"Submit\\\":\\\"Odeslat\\\",\\\"Upload\\\":\\\"Načíst\\\"},\\\"da\\\":{\\\"Add\\\":\\\"Tilføj\\\",\\\"Cancel\\\":\\\"Annullér\\\",\\\"Delete\\\":\\\"Slet\\\",\\\"Disable\\\":\\\"Deaktivér\\\",\\\"Download\\\":\\\"Download\\\",\\\"Edit\\\":\\\"Redigér\\\",\\\"Enable\\\":\\\"Aktivér\\\",\\\"Okay\\\":\\\"Okay\\\",\\\"Print\\\":\\\"Udskriv\\\",\\\"Refresh\\\":\\\"Genopfrisk\\\",\\\"Save\\\":\\\"Gem\\\",\\\"Submit\\\":\\\"Indsend\\\",\\\"Upload\\\":\\\"Upload\\\"},\\\"de\\\":{\\\"Add\\\":\\\"Hinzufügen\\\",\\\"Cancel\\\":\\\"Abbrechen\\\",\\\"Delete\\\":\\\"Löschen\\\",\\\"Disable\\\":\\\"Deaktivieren\\\",\\\"Download\\\":\\\"Herunterladen\\\",\\\"Edit\\\":\\\"Bearbeiten\\\",\\\"Enable\\\":\\\"Aktivieren\\\",\\\"Okay\\\":\\\"Okay\\\",\\\"Print\\\":\\\"Drucken\\\",\\\"Refresh\\\":\\\"Aktualisieren\\\",\\\"Save\\\":\\\"Speichern\\\",\\\"Submit\\\":\\\"Senden\\\",\\\"Upload\\\":\\\"Hochladen\\\"},\\\"el\\\":{\\\"Add\\\":\\\"Προσθήκη\\\",\\\"Cancel\\\":\\\"Ακύρωση\\\",\\\"Delete\\\":\\\"Διαγραφή\\\",\\\"Disable\\\":\\\"Απενεργοποίηση\\\",\\\"Download\\\":\\\"Λήψη\\\",\\\"Edit\\\":\\\"Επεξεργασία\\\",\\\"Enable\\\":\\\"Ενεργοποίηση\\\",\\\"Okay\\\":\\\"Εντάξει\\\",\\\"Print\\\":\\\"Εκτύπωση\\\",\\\"Refresh\\\":\\\"Ανανέωση\\\",\\\"Save\\\":\\\"Αποθήκευση\\\",\\\"Submit\\\":\\\"Υποβολή\\\",\\\"Upload\\\":\\\"Αποστολή\\\"},\\\"eo\\\":{\\\"Add\\\":\\\"Aldonu\\\",\\\"Cancel\\\":\\\"Cancel\\\",\\\"Delete\\\":\\\"Delete\\\",\\\"Disable\\\":\\\"Distingebla\\\",\\\"Download\\\":\\\"Elŝutu\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Enable\\\",\\\"Okay\\\":\\\"Bone\\\",\\\"Print\\\":\\\"Presaĵo\\\",\\\"Refresh\\\":\\\"Refresh\\\",\\\"Save\\\":\\\"Savi\\\",\\\"Submit\\\":\\\"Submit\\\",\\\"Upload\\\":\\\"Ĝis\\\"},\\\"es\\\":{\\\"Add\\\":\\\"Añadir\\\",\\\"Cancel\\\":\\\"Cancelar\\\",\\\"Delete\\\":\\\"Suprimir\\\",\\\"Disable\\\":\\\"Inhabilitación\\\",\\\"Download\\\":\\\"Descargar\\\",\\\"Edit\\\":\\\"Editar\\\",\\\"Enable\\\":\\\"Habilitación\\\",\\\"Okay\\\":\\\"Está\\\",\\\"Print\\\":\\\"Imprimir\\\",\\\"Refresh\\\":\\\"Refresh\\\",\\\"Save\\\":\\\"Guardar\\\",\\\"Submit\\\":\\\"Submit\\\",\\\"Upload\\\":\\\"Subir\\\"},\\\"et\\\":{\\\"Add\\\":\\\"Lisa\\\",\\\"Cancel\\\":\\\"Tühistage\\\",\\\"Delete\\\":\\\"Kustuta\\\",\\\"Disable\\\":\\\"Keela\\\",\\\"Download\\\":\\\"Laadi\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Luba\\\",\\\"Okay\\\":\\\"Olgu\\\",\\\"Print\\\":\\\"Printi\\\",\\\"Refresh\\\":\\\"Värskenda\\\",\\\"Save\\\":\\\"Päästa\\\",\\\"Submit\\\":\\\"Esita\\\",\\\"Upload\\\":\\\"Laadi\\\"},\\\"eu\\\":{\\\"Add\\\":\\\"Gehitu\\\",\\\"Cancel\\\":\\\"Utzi\\\",\\\"Delete\\\":\\\"Ezabatu\\\",\\\"Disable\\\":\\\"Desgaitu\\\",\\\"Download\\\":\\\"Deskargatu\\\",\\\"Edit\\\":\\\"Editatu\\\",\\\"Enable\\\":\\\"Gaitu\\\",\\\"Okay\\\":\\\"Ados\\\",\\\"Print\\\":\\\"Inprimatu\\\",\\\"Refresh\\\":\\\"Freskatu\\\",\\\"Save\\\":\\\"Gorde\\\",\\\"Submit\\\":\\\"Bidali\\\",\\\"Upload\\\":\\\"Igo\\\"},\\\"fa\\\":{\\\"Add\\\":\\\"Add\\\",\\\"Cancel\\\":\\\"لغو\\\",\\\"Delete\\\":\\\"حذف\\\",\\\"Disable\\\":\\\"Disable\\\",\\\"Download\\\":\\\"Download\\\",\\\"Edit\\\":\\\"ویرایش\\\",\\\"Enable\\\":\\\"گزینه\\\",\\\"Okay\\\":\\\"خوب\\\",\\\"Print\\\":\\\"Print\\\",\\\"Refresh\\\":\\\"بازسازی\\\",\\\"Save\\\":\\\"Save\\\",\\\"Submit\\\":\\\"ارسال\\\",\\\"Upload\\\":\\\"آپلود\\\"},\\\"fi\\\":{\\\"Add\\\":\\\"Lisää\\\",\\\"Cancel\\\":\\\"Peruuta\\\",\\\"Delete\\\":\\\"Poista\\\",\\\"Disable\\\":\\\"Poista\\\",\\\"Download\\\":\\\"Lataa\\\",\\\"Edit\\\":\\\"Muuta\\\",\\\"Enable\\\":\\\"Käytä\\\",\\\"Okay\\\":\\\"Selvä\\\",\\\"Print\\\":\\\"Tulosta\\\",\\\"Refresh\\\":\\\"Päivitä\\\",\\\"Save\\\":\\\"Tallenna\\\",\\\"Submit\\\":\\\"Lähetä\\\",\\\"Upload\\\":\\\"Lähetä\\\"},\\\"fr\\\":{\\\"Add\\\":\\\"Ajouter\\\",\\\"Cancel\\\":\\\"Annuler\\\",\\\"Delete\\\":\\\"Supprimer\\\",\\\"Disable\\\":\\\"Désactiver\\\",\\\"Download\\\":\\\"Télécharger\\\",\\\"Edit\\\":\\\"Modifier\\\",\\\"Enable\\\":\\\"Activer\\\",\\\"Okay\\\":\\\"Très\\\",\\\"Print\\\":\\\"Imprimer\\\",\\\"Refresh\\\":\\\"Actualiser\\\",\\\"Save\\\":\\\"Enregistrer\\\",\\\"Submit\\\":\\\"Soumettre\\\",\\\"Upload\\\":\\\"Envoi\\\"},\\\"ga\\\":{\\\"Add\\\":\\\"Déan\\\",\\\"Cancel\\\":\\\"Cealaigh\\\",\\\"Delete\\\":\\\"Scriosta\\\",\\\"Disable\\\":\\\"Díroghnaigh\\\",\\\"Download\\\":\\\"Íoslódáil\\\",\\\"Edit\\\":\\\"Toir\\\",\\\"Enable\\\":\\\"Cumasaigh\\\",\\\"Okay\\\":\\\"Riachtanais\\\",\\\"Print\\\":\\\"Priontáil\\\",\\\"Refresh\\\":\\\"Athraigh\\\",\\\"Save\\\":\\\"Sábháil\\\",\\\"Submit\\\":\\\"Cuir\\\",\\\"Upload\\\":\\\"Uaslódáil\\\"},\\\"gl\\\":{\\\"Add\\\":\\\"Add\\\",\\\"Cancel\\\":\\\"Cancelar\\\",\\\"Delete\\\":\\\"Eliminar\\\",\\\"Disable\\\":\\\"Disable\\\",\\\"Download\\\":\\\"Baixar\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Habilitar\\\",\\\"Okay\\\":\\\"Ok\\\",\\\"Print\\\":\\\"Imprimir\\\",\\\"Refresh\\\":\\\"Refresco\\\",\\\"Save\\\":\\\"Save\\\",\\\"Submit\\\":\\\"Presentación\\\",\\\"Upload\\\":\\\"Upload\\\"},\\\"he\\\":{\\\"Add\\\":\\\"הוסף\\\",\\\"Cancel\\\":\\\"ביטול\\\",\\\"Delete\\\":\\\"Delete\\\",\\\"Disable\\\":\\\"אכזבה\\\",\\\"Download\\\":\\\"הורד\\\",\\\"Edit\\\":\\\"Editעריכה\\\",\\\"Enable\\\":\\\"אפשרות\\\",\\\"Okay\\\":\\\"בסדר\\\",\\\"Print\\\":\\\"הדפסה\\\",\\\"Refresh\\\":\\\"מרעננים\\\",\\\"Save\\\":\\\"להציל\\\",\\\"Submit\\\":\\\"הגשת\\\",\\\"Upload\\\":\\\"Upload\\\"},\\\"hi\\\":{\\\"Add\\\":\\\"जोड़ें\\\",\\\"Cancel\\\":\\\"रद्द\\\",\\\"Delete\\\":\\\"डिलीट\\\",\\\"Disable\\\":\\\"अक्षम\\\",\\\"Download\\\":\\\"डाउनलोड\\\",\\\"Edit\\\":\\\"संपादित\\\",\\\"Enable\\\":\\\"सक्षम\\\",\\\"Okay\\\":\\\"ओके\\\",\\\"Print\\\":\\\"छाप\\\",\\\"Refresh\\\":\\\"रिफ्रेश\\\",\\\"Save\\\":\\\"सहेजें\\\",\\\"Submit\\\":\\\"जमा\\\",\\\"Upload\\\":\\\"अपलोड\\\"},\\\"hu\\\":{\\\"Add\\\":\\\"Hozzáadás\\\",\\\"Cancel\\\":\\\"Törlés\\\",\\\"Delete\\\":\\\"Törlés\\\",\\\"Disable\\\":\\\"Kikapcsolás\\\",\\\"Download\\\":\\\"Letöltés\\\",\\\"Edit\\\":\\\"Szerkesztés\\\",\\\"Enable\\\":\\\"Beállítás\\\",\\\"Okay\\\":\\\"Oké\\\",\\\"Print\\\":\\\"Nyomtatás\\\",\\\"Refresh\\\":\\\"Frissítés\\\",\\\"Save\\\":\\\"Mentés\\\",\\\"Submit\\\":\\\"Küldés\\\",\\\"Upload\\\":\\\"Feltöltés\\\"},\\\"id\\\":{\\\"Add\\\":\\\"Tambah\\\",\\\"Cancel\\\":\\\"Batal\\\",\\\"Delete\\\":\\\"Hapus\\\",\\\"Disable\\\":\\\"Matikan\\\",\\\"Download\\\":\\\"Unduh\\\",\\\"Edit\\\":\\\"Sunting\\\",\\\"Enable\\\":\\\"Aktifkan\\\",\\\"Okay\\\":\\\"Oke\\\",\\\"Print\\\":\\\"Cetak\\\",\\\"Refresh\\\":\\\"Segarkan\\\",\\\"Save\\\":\\\"Simpan\\\",\\\"Submit\\\":\\\"Kirim\\\",\\\"Upload\\\":\\\"Unggah\\\"},\\\"it\\\":{\\\"Add\\\":\\\"Aggiungi\\\",\\\"Cancel\\\":\\\"Annulla\\\",\\\"Delete\\\":\\\"Cancella\\\",\\\"Disable\\\":\\\"Disattivare\\\",\\\"Download\\\":\\\"Scarica\\\",\\\"Edit\\\":\\\"Modifica\\\",\\\"Enable\\\":\\\"Abilitare\\\",\\\"Okay\\\":\\\"Ok\\\",\\\"Print\\\":\\\"Stampa\\\",\\\"Refresh\\\":\\\"Rifiuti\\\",\\\"Save\\\":\\\"Salva\\\",\\\"Submit\\\":\\\"Inviare\\\",\\\"Upload\\\":\\\"Caricamento\\\"},\\\"ja\\\":{\\\"Add\\\":\\\"追加する\\\",\\\"Cancel\\\":\\\"キャンセル\\\",\\\"Delete\\\":\\\"削除\\\",\\\"Disable\\\":\\\"免責事項\\\",\\\"Download\\\":\\\"ダウンロード\\\",\\\"Edit\\\":\\\"編集\\\",\\\"Enable\\\":\\\"アクセス\\\",\\\"Okay\\\":\\\"お問い合わせ\\\",\\\"Print\\\":\\\"プリント\\\",\\\"Refresh\\\":\\\"リフレッシュ\\\",\\\"Save\\\":\\\"保存する\\\",\\\"Submit\\\":\\\"送信する\\\",\\\"Upload\\\":\\\"アップロード\\\"},\\\"ko\\\":{\\\"Add\\\":\\\"기타\\\",\\\"Cancel\\\":\\\"이름\\\",\\\"Delete\\\":\\\"기타\\\",\\\"Disable\\\":\\\"기타\\\",\\\"Download\\\":\\\"다운로드\\\",\\\"Edit\\\":\\\"제품정보\\\",\\\"Enable\\\":\\\"이름\\\",\\\"Okay\\\":\\\"이름\\\",\\\"Print\\\":\\\"제품정보\\\",\\\"Refresh\\\":\\\"지원하다\\\",\\\"Save\\\":\\\"제품\\\",\\\"Submit\\\":\\\"제출하기\\\",\\\"Upload\\\":\\\"제품정보\\\"},\\\"lt\\\":{\\\"Add\\\":\\\"Pridėti\\\",\\\"Cancel\\\":\\\"Atsisakyti\\\",\\\"Delete\\\":\\\"Trinti\\\",\\\"Disable\\\":\\\"Išjungti\\\",\\\"Download\\\":\\\"Atsisiųsti\\\",\\\"Edit\\\":\\\"Keisti\\\",\\\"Enable\\\":\\\"Įjungti\\\",\\\"Okay\\\":\\\"Gerai\\\",\\\"Print\\\":\\\"Spausdinti\\\",\\\"Refresh\\\":\\\"Atnaujinti\\\",\\\"Save\\\":\\\"Įrašyti\\\",\\\"Submit\\\":\\\"Siųsti\\\",\\\"Upload\\\":\\\"Siųsti\\\"},\\\"lv\\\":{\\\"Add\\\":\\\"Pievienot\\\",\\\"Cancel\\\":\\\"Atcelt\\\",\\\"Delete\\\":\\\"Dzēst\\\",\\\"Disable\\\":\\\"Atslēgt\\\",\\\"Download\\\":\\\"Lejupielādēt\\\",\\\"Edit\\\":\\\"Rediģēt\\\",\\\"Enable\\\":\\\"Ieslēgt\\\",\\\"Okay\\\":\\\"Labi\\\",\\\"Print\\\":\\\"Drukāt\\\",\\\"Refresh\\\":\\\"Atsvaidzināt\\\",\\\"Save\\\":\\\"Saglabāt\\\",\\\"Submit\\\":\\\"Nosūtīt\\\",\\\"Upload\\\":\\\"Augšupielāde\\\"},\\\"ms\\\":{\\\"Add\\\":\\\"Tambah\\\",\\\"Cancel\\\":\\\"Batal\\\",\\\"Delete\\\":\\\"Dihapus\\\",\\\"Disable\\\":\\\"Matikan\\\",\\\"Download\\\":\\\"Muaturun\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Hidupkan\\\",\\\"Okay\\\":\\\"Oke\\\",\\\"Print\\\":\\\"Cetakan\\\",\\\"Refresh\\\":\\\"Segarkan\\\",\\\"Save\\\":\\\"Simpan\\\",\\\"Submit\\\":\\\"Diserahkan\\\",\\\"Upload\\\":\\\"Unggah\\\"},\\\"nb\\\":{\\\"Add\\\":\\\"Legg\\\",\\\"Cancel\\\":\\\"Avbryt\\\",\\\"Delete\\\":\\\"Slett\\\",\\\"Disable\\\":\\\"Slå\\\",\\\"Download\\\":\\\"Last\\\",\\\"Edit\\\":\\\"Rediger\\\",\\\"Enable\\\":\\\"Slå\\\",\\\"Okay\\\":\\\"Ok\\\",\\\"Print\\\":\\\"Skriv\\\",\\\"Refresh\\\":\\\"Oppdater\\\",\\\"Save\\\":\\\"Lagre\\\",\\\"Submit\\\":\\\"Send\\\",\\\"Upload\\\":\\\"Last\\\"},\\\"nl\\\":{\\\"Add\\\":\\\"Voeg\\\",\\\"Cancel\\\":\\\"Annuleren\\\",\\\"Delete\\\":\\\"Verwijderen\\\",\\\"Disable\\\":\\\"Uitschakelen\\\",\\\"Download\\\":\\\"Downloaden\\\",\\\"Edit\\\":\\\"Bewerken\\\",\\\"Enable\\\":\\\"Inschakelen\\\",\\\"Okay\\\":\\\"Oké\\\",\\\"Print\\\":\\\"Afdrukken\\\",\\\"Refresh\\\":\\\"Verversen\\\",\\\"Save\\\":\\\"Opslaan\\\",\\\"Submit\\\":\\\"Verzenden\\\",\\\"Upload\\\":\\\"Uploaden\\\"},\\\"pl\\\":{\\\"Add\\\":\\\"Dodaj\\\",\\\"Cancel\\\":\\\"Anuluj\\\",\\\"Delete\\\":\\\"Usuń\\\",\\\"Disable\\\":\\\"Wyłącz\\\",\\\"Download\\\":\\\"Pobierz\\\",\\\"Edit\\\":\\\"Edycja\\\",\\\"Enable\\\":\\\"Włącz\\\",\\\"Okay\\\":\\\"Dobrze\\\",\\\"Print\\\":\\\"Drukuj\\\",\\\"Refresh\\\":\\\"Odśwież\\\",\\\"Save\\\":\\\"Zapisz\\\",\\\"Submit\\\":\\\"Prześlij\\\",\\\"Upload\\\":\\\"Wyślij\\\"},\\\"pt\\\":{\\\"Add\\\":\\\"Adicionar\\\",\\\"Cancel\\\":\\\"Cancelar\\\",\\\"Delete\\\":\\\"Excluir\\\",\\\"Disable\\\":\\\"Deficiência\\\",\\\"Download\\\":\\\"Baixar\\\",\\\"Edit\\\":\\\"Editar\\\",\\\"Enable\\\":\\\"Habilitar\\\",\\\"Okay\\\":\\\"Está\\\",\\\"Print\\\":\\\"Impressão\\\",\\\"Refresh\\\":\\\"Atualizar\\\",\\\"Save\\\":\\\"Salvar\\\",\\\"Submit\\\":\\\"Submeter-me\\\",\\\"Upload\\\":\\\"Carregar\\\"},\\\"ro\\\":{\\\"Add\\\":\\\"Adaugă\\\",\\\"Cancel\\\":\\\"Renunță\\\",\\\"Delete\\\":\\\"Șterge\\\",\\\"Disable\\\":\\\"Dezactivează\\\",\\\"Download\\\":\\\"Descărcare\\\",\\\"Edit\\\":\\\"Editare\\\",\\\"Enable\\\":\\\"Activează\\\",\\\"Okay\\\":\\\"Bine\\\",\\\"Print\\\":\\\"Tipărește\\\",\\\"Refresh\\\":\\\"Reîmprospătează\\\",\\\"Save\\\":\\\"Salvează\\\",\\\"Submit\\\":\\\"Trimite\\\",\\\"Upload\\\":\\\"Încarcă\\\"},\\\"ru\\\":{\\\"Add\\\":\\\"Добавить\\\",\\\"Cancel\\\":\\\"Отменить\\\",\\\"Delete\\\":\\\"Исключить\\\",\\\"Disable\\\":\\\"Инвалид\\\",\\\"Download\\\":\\\"Скачать\\\",\\\"Edit\\\":\\\"Редактировать\\\",\\\"Enable\\\":\\\"Допускать\\\",\\\"Okay\\\":\\\"Хорошо\\\",\\\"Print\\\":\\\"Печать\\\",\\\"Refresh\\\":\\\"Освежить\\\",\\\"Save\\\":\\\"Спасти\\\",\\\"Submit\\\":\\\"Представить\\\",\\\"Upload\\\":\\\"Загрузить\\\"},\\\"sk\\\":{\\\"Add\\\":\\\"Pridať\\\",\\\"Cancel\\\":\\\"Zrušiť\\\",\\\"Delete\\\":\\\"Odstrániť\\\",\\\"Disable\\\":\\\"Zakázať\\\",\\\"Download\\\":\\\"Stiahnuť\\\",\\\"Edit\\\":\\\"Upraviť\\\",\\\"Enable\\\":\\\"Povoliť\\\",\\\"Okay\\\":\\\"Dobre\\\",\\\"Print\\\":\\\"Tlač\\\",\\\"Refresh\\\":\\\"Obnoviť\\\",\\\"Save\\\":\\\"Uložiť\\\",\\\"Submit\\\":\\\"Predložiť\\\",\\\"Upload\\\":\\\"Odoslať\\\"},\\\"sl\\\":{\\\"Add\\\":\\\"Dodaj\\\",\\\"Cancel\\\":\\\"Prekliči\\\",\\\"Delete\\\":\\\"Zbriši\\\",\\\"Disable\\\":\\\"Onemogoči\\\",\\\"Download\\\":\\\"Prenesi\\\",\\\"Edit\\\":\\\"Uredi\\\",\\\"Enable\\\":\\\"Omogoči\\\",\\\"Okay\\\":\\\"V\\\",\\\"Print\\\":\\\"Natisni\\\",\\\"Refresh\\\":\\\"Osveži\\\",\\\"Save\\\":\\\"Shrani\\\",\\\"Submit\\\":\\\"Pošlji\\\",\\\"Upload\\\":\\\"Pošlji\\\"},\\\"sq\\\":{\\\"Add\\\":\\\"_Shto\\\",\\\"Cancel\\\":\\\"Anullo\\\",\\\"Delete\\\":\\\"Elemino\\\",\\\"Disable\\\":\\\"Jo\\\",\\\"Download\\\":\\\"Shkarkimi\\\",\\\"Edit\\\":\\\"Ndrysho\\\",\\\"Enable\\\":\\\"Aktivo\\\",\\\"Okay\\\":\\\"Mirë\\\",\\\"Print\\\":\\\"Printo\\\",\\\"Refresh\\\":\\\"Rifresko\\\",\\\"Save\\\":\\\"Ruaj\\\",\\\"Submit\\\":\\\"Dërgo\\\",\\\"Upload\\\":\\\"Ngarko\\\"},\\\"sv\\\":{\\\"Add\\\":\\\"Lägg\\\",\\\"Cancel\\\":\\\"Avbokning\\\",\\\"Delete\\\":\\\"Delete\\\",\\\"Disable\\\":\\\"Inaktivera\\\",\\\"Download\\\":\\\"Ladda\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Aktivera\\\",\\\"Okay\\\":\\\"Okej\\\",\\\"Print\\\":\\\"Print\\\",\\\"Refresh\\\":\\\"Refresh\\\",\\\"Save\\\":\\\"Spara\\\",\\\"Submit\\\":\\\"Inlämning\\\",\\\"Upload\\\":\\\"Upload\\\"},\\\"th\\\":{\\\"Add\\\":\\\"เพิ่ม\\\",\\\"Cancel\\\":\\\"ยกเลิก\\\",\\\"Delete\\\":\\\"ลบ\\\",\\\"Disable\\\":\\\"ปิดการใช้งาน\\\",\\\"Download\\\":\\\"ดาวน์โหลด\\\",\\\"Edit\\\":\\\"แก้ไข\\\",\\\"Enable\\\":\\\"เปิด\\\",\\\"Okay\\\":\\\"โอเค\\\",\\\"Print\\\":\\\"พิมพ์\\\",\\\"Refresh\\\":\\\"ปรับปรุงใหม่\\\",\\\"Save\\\":\\\"บันทึก\\\",\\\"Submit\\\":\\\"ส่ง\\\",\\\"Upload\\\":\\\"อัปโหลด\\\"},\\\"tl\\\":{\\\"Add\\\":\\\"Magdagdag\\\",\\\"Cancel\\\":\\\"Huwag\\\",\\\"Delete\\\":\\\"Ibagsak\\\",\\\"Disable\\\":\\\"Hindi\\\",\\\"Download\\\":\\\"Ibaba\\\",\\\"Edit\\\":\\\"Baguhin\\\",\\\"Enable\\\":\\\"Kaibig\\\",\\\"Okay\\\":\\\"Okay\\\",\\\"Print\\\":\\\"Nakalimbag\\\",\\\"Refresh\\\":\\\"Nakapagpapasigla\\\",\\\"Save\\\":\\\"Mag\\\",\\\"Submit\\\":\\\"Pagpapasakop\\\",\\\"Upload\\\":\\\"Itaas\\\"},\\\"tr\\\":{\\\"Add\\\":\\\"Add\\\",\\\"Cancel\\\":\\\"Cancel\\\",\\\"Delete\\\":\\\"Delete\\\",\\\"Disable\\\":\\\"Engelliler\\\",\\\"Download\\\":\\\"Download\\\",\\\"Edit\\\":\\\"Edit\\\",\\\"Enable\\\":\\\"Enable\\\",\\\"Okay\\\":\\\"Tamam\\\",\\\"Print\\\":\\\"Baskı\\\",\\\"Refresh\\\":\\\"Yenileme\\\",\\\"Save\\\":\\\"Kaydet\\\",\\\"Submit\\\":\\\"Gönder\\\",\\\"Upload\\\":\\\"Download\\\"},\\\"uk\\\":{\\\"Add\\\":\\\"Додати\\\",\\\"Cancel\\\":\\\"Зареєструватися\\\",\\\"Delete\\\":\\\"Делет\\\",\\\"Disable\\\":\\\"Вимкнути\\\",\\\"Download\\\":\\\"Завантажити\\\",\\\"Edit\\\":\\\"Редагування\\\",\\\"Enable\\\":\\\"Увімкнути\\\",\\\"Okay\\\":\\\"Проксимус\\\",\\\"Print\\\":\\\"Друк\\\",\\\"Refresh\\\":\\\"Реверс\\\",\\\"Save\\\":\\\"Зберегти\\\",\\\"Submit\\\":\\\"Подати\\\",\\\"Upload\\\":\\\"Завантажити\\\"},\\\"ur\\\":{\\\"Add\\\":\\\"_شامل\\\",\\\"Cancel\\\":\\\"منسوخ\\\",\\\"Delete\\\":\\\"حذف\\\",\\\"Disable\\\":\\\"منسوخ\\\",\\\"Download\\\":\\\"اوپر\\\",\\\"Edit\\\":\\\"مرتب\\\",\\\"Enable\\\":\\\"فعال\\\",\\\"Okay\\\":\\\"ٹھیک\\\",\\\"Print\\\":\\\"پرنٹ\\\",\\\"Refresh\\\":\\\"خوشی\\\",\\\"Save\\\":\\\"محفوظ\\\",\\\"Submit\\\":\\\"غیر\\\",\\\"Upload\\\":\\\"اپ\\\"},\\\"zh\\\":{\\\"Add\\\":\\\"添加\\\",\\\"Cancel\\\":\\\"取消\\\",\\\"Delete\\\":\\\"删除\\\",\\\"Disable\\\":\\\"禁用\\\",\\\"Download\\\":\\\"下载\\\",\\\"Edit\\\":\\\"编辑\\\",\\\"Enable\\\":\\\"启用\\\",\\\"Okay\\\":\\\"还好\\\",\\\"Print\\\":\\\"打印\\\",\\\"Refresh\\\":\\\"刷新\\\",\\\"Save\\\":\\\"保存\\\",\\\"Submit\\\":\\\"提交\\\",\\\"Upload\\\":\\\"上传\\\"},\\\"zt\\\":{\\\"Add\\\":\\\"添加\\\",\\\"Cancel\\\":\\\"取消\\\",\\\"Delete\\\":\\\"刪除\\\",\\\"Disable\\\":\\\"禁用\\\",\\\"Download\\\":\\\"下載\\\",\\\"Edit\\\":\\\"編輯\\\",\\\"Enable\\\":\\\"開啟\\\",\\\"Okay\\\":\\\"好吧\\\",\\\"Print\\\":\\\"打印\\\",\\\"Refresh\\\":\\\"刷新\\\",\\\"Save\\\":\\\"保存\\\",\\\"Submit\\\":\\\"提交\\\",\\\"Upload\\\":\\\"上傳\\\"}}\"","export default \"{\\\"en\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"ar\\\":{\\\"Filter\\\":\\\"فيلم\\\"},\\\"az\\\":{\\\"Filter\\\":\\\" Filter\\\"},\\\"bg\\\":{\\\"Filter\\\":\\\"Филтър\\\"},\\\"bn\\\":{\\\"Filter\\\":\\\"ফিল্টার\\\"},\\\"ca\\\":{\\\"Filter\\\":\\\"Filtre\\\"},\\\"cs\\\":{\\\"Filter\\\":\\\"Filtr\\\"},\\\"da\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"de\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"el\\\":{\\\"Filter\\\":\\\"Φίλτρο\\\"},\\\"eo\\\":{\\\"Filter\\\":\\\"Filtero\\\"},\\\"es\\\":{\\\"Filter\\\":\\\"Filtro\\\"},\\\"et\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"eu\\\":{\\\"Filter\\\":\\\"Iragazkia\\\"},\\\"fa\\\":{\\\"Filter\\\":\\\"فیلتر\\\"},\\\"fi\\\":{\\\"Filter\\\":\\\"Suodatin\\\"},\\\"fr\\\":{\\\"Filter\\\":\\\"Filtre\\\"},\\\"ga\\\":{\\\"Filter\\\":\\\"Scagaire\\\"},\\\"gl\\\":{\\\"Filter\\\":\\\"Filtrar\\\"},\\\"he\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"hi\\\":{\\\"Filter\\\":\\\"फिल्टर\\\"},\\\"hu\\\":{\\\"Filter\\\":\\\"Szűrő\\\"},\\\"id\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"it\\\":{\\\"Filter\\\":\\\"Filtro\\\"},\\\"ja\\\":{\\\"Filter\\\":\\\"フィルター\\\"},\\\"ko\\\":{\\\"Filter\\\":\\\"제품정보\\\"},\\\"lt\\\":{\\\"Filter\\\":\\\"Filtras\\\"},\\\"lv\\\":{\\\"Filter\\\":\\\"Filtrs\\\"},\\\"ms\\\":{\\\"Filter\\\":\\\"Penapis\\\"},\\\"nb\\\":{\\\"Filter\\\":\\\"Filtrer\\\"},\\\"nl\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"pl\\\":{\\\"Filter\\\":\\\"Filtr\\\"},\\\"pt\\\":{\\\"Filter\\\":\\\"Filtro\\\"},\\\"ro\\\":{\\\"Filter\\\":\\\"Filtru\\\"},\\\"ru\\\":{\\\"Filter\\\":\\\"Фильтр\\\"},\\\"sk\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"sl\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"sq\\\":{\\\"Filter\\\":\\\"Filtra\\\"},\\\"sv\\\":{\\\"Filter\\\":\\\"Filter\\\"},\\\"th\\\":{\\\"Filter\\\":\\\"กรอง\\\"},\\\"tl\\\":{\\\"Filter\\\":\\\"Pansala\\\"},\\\"tr\\\":{\\\"Filter\\\":\\\"Filtre\\\"},\\\"uk\\\":{\\\"Filter\\\":\\\"Фільтри\\\"},\\\"ur\\\":{\\\"Filter\\\":\\\"فائلز\\\"},\\\"zh\\\":{\\\"Filter\\\":\\\"过滤器\\\"},\\\"zt\\\":{\\\"Filter\\\":\\\"分頁\\\"}}\"","export default \"{\\\"en\\\":{\\\"Previous\\\":\\\"Previous\\\",\\\"Next\\\":\\\"Next\\\",\\\"Older\\\":\\\"Older\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"Go To Page\\\"},\\\"ar\\\":{\\\"Previous\\\":\\\"سابقا\\\",\\\"Next\\\":\\\"التالي\\\",\\\"Older\\\":\\\"كبار\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"الذهاب إلى الصفحة\\\"},\\\"az\\\":{\\\"Previous\\\":\\\" Previous\\\",\\\"Next\\\":\\\" Next\\\",\\\"Older\\\":\\\"Yaşlı\\\",\\\"Newer\\\":\\\"Yeniyetmə\\\",\\\"GoToPage\\\":\\\"Qeydiyyat\\\"},\\\"bg\\\":{\\\"Previous\\\":\\\"Предишен\\\",\\\"Next\\\":\\\"Следващият\\\",\\\"Older\\\":\\\"По-\\\",\\\"Newer\\\":\\\"По-\\\",\\\"GoToPage\\\":\\\"Отиване на страница\\\"},\\\"bn\\\":{\\\"Previous\\\":\\\"পূর্ববর্তী\\\",\\\"Next\\\":\\\"পরবর্তী\\\",\\\"Older\\\":\\\"বয়স্ক\\\",\\\"Newer\\\":\\\"নিউকার\\\",\\\"GoToPage\\\":\\\"চিহ্নিত স্থানে চলুন\\\"},\\\"ca\\\":{\\\"Previous\\\":\\\"Anterior\\\",\\\"Next\\\":\\\"Següent\\\",\\\"Older\\\":\\\"Vella\\\",\\\"Newer\\\":\\\"Més\\\",\\\"GoToPage\\\":\\\"Vés a la pàgina\\\"},\\\"cs\\\":{\\\"Previous\\\":\\\"Předchozí\\\",\\\"Next\\\":\\\"Další\\\",\\\"Older\\\":\\\"Starší\\\",\\\"Newer\\\":\\\"Novější\\\",\\\"GoToPage\\\":\\\"Přejít na stránku\\\"},\\\"da\\\":{\\\"Previous\\\":\\\"Forrige\\\",\\\"Next\\\":\\\"Næste\\\",\\\"Older\\\":\\\"Ældre\\\",\\\"Newer\\\":\\\"Nyere\\\",\\\"GoToPage\\\":\\\"Gå til side\\\"},\\\"de\\\":{\\\"Previous\\\":\\\"Vorherige\\\",\\\"Next\\\":\\\"Nach\\\",\\\"Older\\\":\\\"Ältere\\\",\\\"Newer\\\":\\\"Neuer\\\",\\\"GoToPage\\\":\\\"Zur Seite gehen\\\"},\\\"el\\\":{\\\"Previous\\\":\\\"Προηγούμενο\\\",\\\"Next\\\":\\\"Επόμενο\\\",\\\"Older\\\":\\\"Μεγαλύτερος\\\",\\\"Newer\\\":\\\"Νεότερα\\\",\\\"GoToPage\\\":\\\"Μετάβαση στη σελίδα\\\"},\\\"eo\\\":{\\\"Previous\\\":\\\"Antaŭa\\\",\\\"Next\\\":\\\"La\\\",\\\"Older\\\":\\\"Pli\\\",\\\"Newer\\\":\\\"Pli\\\",\\\"GoToPage\\\":\\\"Iru al paĝo\\\"},\\\"es\\\":{\\\"Previous\\\":\\\"Anterior\\\",\\\"Next\\\":\\\"Siguiente\\\",\\\"Older\\\":\\\"Older\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"Ir a la página\\\"},\\\"et\\\":{\\\"Previous\\\":\\\"Eelmine\\\",\\\"Next\\\":\\\"Järgmine\\\",\\\"Older\\\":\\\"Vanem\\\",\\\"Newer\\\":\\\"Uuem\\\",\\\"GoToPage\\\":\\\"Mine lehele\\\"},\\\"eu\\\":{\\\"Previous\\\":\\\"Aurrekoa\\\",\\\"Next\\\":\\\"Hurrengoa\\\",\\\"Older\\\":\\\"Zaharragoa\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"Joan orrira\\\"},\\\"fa\\\":{\\\"Previous\\\":\\\"Previous\\\",\\\"Next\\\":\\\"بعدی\\\",\\\"Older\\\":\\\"مسن\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"به صفحه بروید\\\"},\\\"fi\\\":{\\\"Previous\\\":\\\"Edellinen\\\",\\\"Next\\\":\\\"Seuraava\\\",\\\"Older\\\":\\\"Vanhempi\\\",\\\"Newer\\\":\\\"Uusi\\\",\\\"GoToPage\\\":\\\"Siirry sivulle\\\"},\\\"fr\\\":{\\\"Previous\\\":\\\"Précédent\\\",\\\"Next\\\":\\\"Suivant\\\",\\\"Older\\\":\\\"Plus\\\",\\\"Newer\\\":\\\"Plus\\\",\\\"GoToPage\\\":\\\"Aller à la page\\\"},\\\"ga\\\":{\\\"Previous\\\":\\\"Roimhe\\\",\\\"Next\\\":\\\"Ar\\\",\\\"Older\\\":\\\"Sean\\\",\\\"Newer\\\":\\\"Nuashonraigh\\\",\\\"GoToPage\\\":\\\"Téigh go Leathanach\\\"},\\\"gl\\\":{\\\"Previous\\\":\\\"Anterior\\\",\\\"Next\\\":\\\"Seguinte\\\",\\\"Older\\\":\\\"Idade\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"Ir á páxina\\\"},\\\"he\\\":{\\\"Previous\\\":\\\"הקודם\\\",\\\"Next\\\":\\\"הבא\\\",\\\"Older\\\":\\\"מבוגר\\\",\\\"Newer\\\":\\\"חדש\\\",\\\"GoToPage\\\":\\\"ללכת לדף\\\"},\\\"hi\\\":{\\\"Previous\\\":\\\"पिछला\\\",\\\"Next\\\":\\\"अगला\\\",\\\"Older\\\":\\\"पुराना\\\",\\\"Newer\\\":\\\"नया\\\",\\\"GoToPage\\\":\\\"पृष्ठ पर जाएं\\\"},\\\"hu\\\":{\\\"Previous\\\":\\\"Előző\\\",\\\"Next\\\":\\\"Következő\\\",\\\"Older\\\":\\\"Idősebb\\\",\\\"Newer\\\":\\\"Újabb\\\",\\\"GoToPage\\\":\\\"Ugrás az oldalra\\\"},\\\"id\\\":{\\\"Previous\\\":\\\"Sebelumnya\\\",\\\"Next\\\":\\\"Berikutnya\\\",\\\"Older\\\":\\\"Lebih\\\",\\\"Newer\\\":\\\"Baru\\\",\\\"GoToPage\\\":\\\"Ke Halaman\\\"},\\\"it\\\":{\\\"Previous\\\":\\\"Precedente\\\",\\\"Next\\\":\\\"Il\\\",\\\"Older\\\":\\\"Vecchio\\\",\\\"Newer\\\":\\\"Nuovo\\\",\\\"GoToPage\\\":\\\"Vai alla pagina\\\"},\\\"ja\\\":{\\\"Previous\\\":\\\"新着情報\\\",\\\"Next\\\":\\\"次へ\\\",\\\"Older\\\":\\\"古い投稿\\\",\\\"Newer\\\":\\\"ニュース\\\",\\\"GoToPage\\\":\\\"サイトマップ\\\"},\\\"ko\\\":{\\\"Previous\\\":\\\"이름\\\",\\\"Next\\\":\\\"이름\\\",\\\"Older\\\":\\\"인기있는\\\",\\\"Newer\\\":\\\"더\\\",\\\"GoToPage\\\":\\\"본문 바로가기\\\"},\\\"lt\\\":{\\\"Previous\\\":\\\"Ankstesnis\\\",\\\"Next\\\":\\\"Sekantis\\\",\\\"Older\\\":\\\"Senesni\\\",\\\"Newer\\\":\\\"Naujokas\\\",\\\"GoToPage\\\":\\\"Pereiti į puslapį\\\"},\\\"lv\\\":{\\\"Previous\\\":\\\"Iepriekšējais\\\",\\\"Next\\\":\\\"Nākamais\\\",\\\"Older\\\":\\\"Vecāki\\\",\\\"Newer\\\":\\\"Jaunāks\\\",\\\"GoToPage\\\":\\\"Iet uz lapu\\\"},\\\"ms\\\":{\\\"Previous\\\":\\\"Sebelumnya\\\",\\\"Next\\\":\\\"Next\\\",\\\"Older\\\":\\\"♪\\\",\\\"Newer\\\":\\\"Perancis\\\",\\\"GoToPage\\\":\\\"Pergi Ke Halaman\\\"},\\\"nb\\\":{\\\"Previous\\\":\\\"Forrige\\\",\\\"Next\\\":\\\"Neste\\\",\\\"Older\\\":\\\"Eldre\\\",\\\"Newer\\\":\\\"Nyere\\\",\\\"GoToPage\\\":\\\"Gå til siden\\\"},\\\"nl\\\":{\\\"Previous\\\":\\\"Vorige\\\",\\\"Next\\\":\\\"Volgende\\\",\\\"Older\\\":\\\"Ouder\\\",\\\"Newer\\\":\\\"Nieuwer\\\",\\\"GoToPage\\\":\\\"Ga naar pagina\\\"},\\\"pl\\\":{\\\"Previous\\\":\\\"Poprzedni\\\",\\\"Next\\\":\\\"Następny\\\",\\\"Older\\\":\\\"Starszy\\\",\\\"Newer\\\":\\\"Nowsza\\\",\\\"GoToPage\\\":\\\"Przejdź do strony\\\"},\\\"pt\\\":{\\\"Previous\\\":\\\"Anterior\\\",\\\"Next\\\":\\\"Próximo\\\",\\\"Older\\\":\\\"O\\\",\\\"Newer\\\":\\\"Mais\\\",\\\"GoToPage\\\":\\\"Ir para a página\\\"},\\\"ro\\\":{\\\"Previous\\\":\\\"Precedent\\\",\\\"Next\\\":\\\"Înainte\\\",\\\"Older\\\":\\\"Mai\\\",\\\"Newer\\\":\\\"Mai\\\",\\\"GoToPage\\\":\\\"Du-te la pagina\\\"},\\\"ru\\\":{\\\"Previous\\\":\\\"Предыдущий\\\",\\\"Next\\\":\\\"Следующий\\\",\\\"Older\\\":\\\"Старше\\\",\\\"Newer\\\":\\\"Новый\\\",\\\"GoToPage\\\":\\\"Перейти на страницу\\\"},\\\"sk\\\":{\\\"Previous\\\":\\\"Predchádzajúca\\\",\\\"Next\\\":\\\"Nasledujúci\\\",\\\"Older\\\":\\\"Staršie\\\",\\\"Newer\\\":\\\"Novšie\\\",\\\"GoToPage\\\":\\\"Prejsť na stránku\\\"},\\\"sl\\\":{\\\"Previous\\\":\\\"Prejšnja\\\",\\\"Next\\\":\\\"Naprej\\\",\\\"Older\\\":\\\"Starejši\\\",\\\"Newer\\\":\\\"Novejši\\\",\\\"GoToPage\\\":\\\"Pojdi na stran\\\"},\\\"sq\\\":{\\\"Previous\\\":\\\"Paraardhëse\\\",\\\"Next\\\":\\\"Në\\\",\\\"Older\\\":\\\"Më\\\",\\\"Newer\\\":\\\"Ri\\\",\\\"GoToPage\\\":\\\"Shko tek faqja\\\"},\\\"sv\\\":{\\\"Previous\\\":\\\"Föregående\\\",\\\"Next\\\":\\\"Nästa\\\",\\\"Older\\\":\\\"Äldre\\\",\\\"Newer\\\":\\\"Nyare\\\",\\\"GoToPage\\\":\\\"Gå till Page\\\"},\\\"th\\\":{\\\"Previous\\\":\\\"ก่อนหน้า\\\",\\\"Next\\\":\\\"ต่อไป\\\",\\\"Older\\\":\\\"อายุ\\\",\\\"Newer\\\":\\\"สร้างใหม่\\\",\\\"GoToPage\\\":\\\"ไปยังหน้า\\\"},\\\"tl\\\":{\\\"Previous\\\":\\\"Bago\\\",\\\"Next\\\":\\\"Susunod\\\",\\\"Older\\\":\\\"Mas\\\",\\\"Newer\\\":\\\"Mas\\\",\\\"GoToPage\\\":\\\"Pumunta sa Pahina\\\"},\\\"tr\\\":{\\\"Previous\\\":\\\"Önceki\\\",\\\"Next\\\":\\\"Sonraki\\\",\\\"Older\\\":\\\"Yaşlı\\\",\\\"Newer\\\":\\\"Newer\\\",\\\"GoToPage\\\":\\\"Go To Page\\\"},\\\"uk\\\":{\\\"Previous\\\":\\\"Попереднє\\\",\\\"Next\\\":\\\"Про\\\",\\\"Older\\\":\\\"Старші\\\",\\\"Newer\\\":\\\"Нова\\\",\\\"GoToPage\\\":\\\"Перейти на сторінку\\\"},\\\"ur\\\":{\\\"Previous\\\":\\\"پہلے\\\",\\\"Next\\\":\\\"اگلا\\\",\\\"Older\\\":\\\"عمررسیدہ\\\",\\\"Newer\\\":\\\"نیا\\\",\\\"GoToPage\\\":\\\"صفحہ ۲۴ پر جائیں\\\"},\\\"zh\\\":{\\\"Previous\\\":\\\"上一个\\\",\\\"Next\\\":\\\"下一个\\\",\\\"Older\\\":\\\"老年人\\\",\\\"Newer\\\":\\\"更新\\\",\\\"GoToPage\\\":\\\"转到页面\\\"},\\\"zt\\\":{\\\"Previous\\\":\\\"前一個\\\",\\\"Next\\\":\\\"下一頁\\\",\\\"Older\\\":\\\"老了\\\",\\\"Newer\\\":\\\"更新\\\",\\\"GoToPage\\\":\\\"跳至頁面\\\"}}\"","export default \"{\\\"en\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sun\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Sunday\\\",\\\"Monday\\\":\\\"Monday\\\",\\\"Tuesday\\\":\\\"Tuesday\\\",\\\"Wednesday\\\":\\\"Wednesday\\\",\\\"Thursday\\\":\\\"Thursday\\\",\\\"Friday\\\":\\\"Friday\\\",\\\"Saturday\\\":\\\"Saturday\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"May\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"January\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"March\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"June\\\",\\\"July\\\":\\\"July\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"October\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"Today\\\"},\\\"ar\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"الشمس\\\",\\\"Mon\\\":\\\"مون\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"فري\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"الأحد\\\",\\\"Monday\\\":\\\"الاثنين\\\",\\\"Tuesday\\\":\\\"الثلاثاء\\\",\\\"Wednesday\\\":\\\"الأربعاء\\\",\\\"Thursday\\\":\\\"الخميس\\\",\\\"Friday\\\":\\\"الجمعة\\\",\\\"Saturday\\\":\\\"السبت\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"يان\\\",\\\"Feb\\\":\\\"شباط/فبراير\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"أيار/مايو\\\",\\\"Jun\\\":\\\"جون\\\",\\\"Jul\\\":\\\"(جول)\\\",\\\"Aug\\\":\\\"آب/أغسطس\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"كانون\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"آذار/مارس\\\",\\\"April\\\":\\\"نيسان/أبريل\\\",\\\"June\\\":\\\"حزيران/يونيه\\\",\\\"July\\\":\\\"تموز/يوليه\\\",\\\"August\\\":\\\"آب/أغسطس\\\",\\\"September\\\":\\\"أيلول/سبتمبر\\\",\\\"October\\\":\\\"تشرين\\\",\\\"November\\\":\\\"تشرين\\\",\\\"December\\\":\\\"كانون\\\"},\\\"Today\\\":\\\"اليوم\\\"},\\\"az\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Qalereya\\\",\\\"Mon\\\":\\\"Bakı\\\",\\\"Tue\\\":\\\"Qalereya\\\",\\\"Wed\\\":\\\"Biznes\\\",\\\"Thu\\\":\\\"Qalereya\\\",\\\"Fri\\\":\\\"Bakı\\\",\\\"Sat\\\":\\\"Bakı\\\",\\\"Sunday\\\":\\\"Bakı\\\",\\\"Monday\\\":\\\"Bakı\\\",\\\"Tuesday\\\":\\\"Bakı\\\",\\\"Wednesday\\\":\\\"Bakı\\\",\\\"Thursday\\\":\\\"Bakı\\\",\\\"Friday\\\":\\\"Bakı\\\",\\\"Saturday\\\":\\\"Bakı\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Axtarış\\\",\\\"Feb\\\":\\\"Bakı\\\",\\\"Mar\\\":\\\"Bakı\\\",\\\"Apr\\\":\\\"Bakı\\\",\\\"May\\\":\\\"İyul\\\",\\\"Jun\\\":\\\"Bakı\\\",\\\"Jul\\\":\\\"Bakı\\\",\\\"Aug\\\":\\\"Axtarış\\\",\\\"Sep\\\":\\\"Bakı\\\",\\\"Oct\\\":\\\"Axtarış\\\",\\\"Nov\\\":\\\"Bakı\\\",\\\"Dec\\\":\\\"Elan\\\",\\\"January\\\":\\\"Yanvar\\\",\\\"Febuary\\\":\\\"Bakı\\\",\\\"March\\\":\\\"Bakı\\\",\\\"April\\\":\\\"Bakı\\\",\\\"June\\\":\\\"İyun\\\",\\\"July\\\":\\\"İyul\\\",\\\"August\\\":\\\"Avqust\\\",\\\"September\\\":\\\"Bakı\\\",\\\"October\\\":\\\"Bakı\\\",\\\"November\\\":\\\"Bakı\\\",\\\"December\\\":\\\"Bakı\\\"},\\\"Today\\\":\\\"Bu\\\"},\\\"bg\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Слънце\\\",\\\"Mon\\\":\\\"Мон\\\",\\\"Tue\\\":\\\"Туе\\\",\\\"Wed\\\":\\\"Сватба\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Сат\\\",\\\"Sunday\\\":\\\"Неделя\\\",\\\"Monday\\\":\\\"Понеделник\\\",\\\"Tuesday\\\":\\\"Вторник\\\",\\\"Wednesday\\\":\\\"Сряда\\\",\\\"Thursday\\\":\\\"Четвъртък\\\",\\\"Friday\\\":\\\"Петък\\\",\\\"Saturday\\\":\\\"Събота\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Ян\\\",\\\"Feb\\\":\\\"Февруари\\\",\\\"Mar\\\":\\\"Мар\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Май\\\",\\\"Jun\\\":\\\"Джун\\\",\\\"Jul\\\":\\\"Юли\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Сеп\\\",\\\"Oct\\\":\\\"Окт\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Дек\\\",\\\"January\\\":\\\"Януари\\\",\\\"Febuary\\\":\\\"Февруари\\\",\\\"March\\\":\\\"Март\\\",\\\"April\\\":\\\"Април\\\",\\\"June\\\":\\\"Юни\\\",\\\"July\\\":\\\"Юли\\\",\\\"August\\\":\\\"Август\\\",\\\"September\\\":\\\"Септември\\\",\\\"October\\\":\\\"Октомври\\\",\\\"November\\\":\\\"Ноември\\\",\\\"December\\\":\\\"Декември\\\"},\\\"Today\\\":\\\"Днес\\\"},\\\"bn\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"রবি\\\",\\\"Mon\\\":\\\"মন\\\",\\\"Tue\\\":\\\"মঙ্গল\\\",\\\"Wed\\\":\\\"অস্বীকৃত\\\",\\\"Thu\\\":\\\"বৃহঃ\\\",\\\"Fri\\\":\\\"ফ্রিসেল\\\",\\\"Sat\\\":\\\"শনি\\\",\\\"Sunday\\\":\\\"রবিবার\\\",\\\"Monday\\\":\\\"সোমবার\\\",\\\"Tuesday\\\":\\\"মঙ্গলবার\\\",\\\"Wednesday\\\":\\\"বুধবার\\\",\\\"Thursday\\\":\\\"বৃহস্পতিবার\\\",\\\"Friday\\\":\\\"শুক্রবার\\\",\\\"Saturday\\\":\\\"শনিবার\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"জানুয়ারী\\\",\\\"Feb\\\":\\\"ফেব্রুয়ারীMarch\\\",\\\"Mar\\\":\\\"মার্চApril\\\",\\\"Apr\\\":\\\"এপ্রিল\\\",\\\"May\\\":\\\"মে\\\",\\\"Jun\\\":\\\"জুনিউ\\\",\\\"Jul\\\":\\\"জুমি\\\",\\\"Aug\\\":\\\"আগস্ট\\\",\\\"Sep\\\":\\\"সেপ্টেম্বরOctober\\\",\\\"Oct\\\":\\\"অক্টোবর\\\",\\\"Nov\\\":\\\"নভেম্বর\\\",\\\"Dec\\\":\\\"ডিসেম্বর\\\",\\\"January\\\":\\\"জানুয়ারী\\\",\\\"Febuary\\\":\\\"ফেব্রুয়ারীof\\\",\\\"March\\\":\\\"মার্চ\\\",\\\"April\\\":\\\"এপ্রিল\\\",\\\"June\\\":\\\"জুন\\\",\\\"July\\\":\\\"জুলাই\\\",\\\"August\\\":\\\"আগস্ট\\\",\\\"September\\\":\\\"সেপ্টেম্বর\\\",\\\"October\\\":\\\"অক্টোবর\\\",\\\"November\\\":\\\"নভেম্বর\\\",\\\"December\\\":\\\"সদস্য\\\"},\\\"Today\\\":\\\"আজ\\\"},\\\"ca\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sol\\\",\\\"Mon\\\":\\\"Dl\\\",\\\"Tue\\\":\\\"Dt\\\",\\\"Wed\\\":\\\"Dc\\\",\\\"Thu\\\":\\\"Dj\\\",\\\"Fri\\\":\\\"DvSaturday\\\",\\\"Sat\\\":\\\"DsSunday\\\",\\\"Sunday\\\":\\\"Diumenge\\\",\\\"Monday\\\":\\\"Dilluns\\\",\\\"Tuesday\\\":\\\"Dimarts\\\",\\\"Wednesday\\\":\\\"Dimecres\\\",\\\"Thursday\\\":\\\"Dijous\\\",\\\"Friday\\\":\\\"Divendres\\\",\\\"Saturday\\\":\\\"Dissabte\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Mare\\\",\\\"Feb\\\":\\\"FebMarch\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"AbrMay\\\",\\\"May\\\":\\\"Maig\\\",\\\"Jun\\\":\\\"JunJuly\\\",\\\"Jul\\\":\\\"JulAugust\\\",\\\"Aug\\\":\\\"AgoSeptember\\\",\\\"Sep\\\":\\\"Set\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Des\\\",\\\"January\\\":\\\"Gener\\\",\\\"Febuary\\\":\\\"FebuaryCity\\\",\\\"March\\\":\\\"Març\\\",\\\"April\\\":\\\"Abril\\\",\\\"June\\\":\\\"Juny\\\",\\\"July\\\":\\\"Juliol\\\",\\\"August\\\":\\\"Agost\\\",\\\"September\\\":\\\"Setembre\\\",\\\"October\\\":\\\"Octubre\\\",\\\"November\\\":\\\"Novembre\\\",\\\"December\\\":\\\"Desembre\\\"},\\\"Today\\\":\\\"Avui\\\"},\\\"cs\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Slunce\\\",\\\"Mon\\\":\\\"Po\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"St\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sad\\\",\\\"Sunday\\\":\\\"Neděle\\\",\\\"Monday\\\":\\\"Pondělí\\\",\\\"Tuesday\\\":\\\"Úterý\\\",\\\"Wednesday\\\":\\\"Středa\\\",\\\"Thursday\\\":\\\"Čtvrtek\\\",\\\"Friday\\\":\\\"Pátek\\\",\\\"Saturday\\\":\\\"Sobota\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Únor\\\",\\\"Mar\\\":\\\"Březen\\\",\\\"Apr\\\":\\\"Duben\\\",\\\"May\\\":\\\"May\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Srpen\\\",\\\"Sep\\\":\\\"Září\\\",\\\"Oct\\\":\\\"Říjen\\\",\\\"Nov\\\":\\\"Listopad\\\",\\\"Dec\\\":\\\"Prosinec\\\",\\\"January\\\":\\\"Leden\\\",\\\"Febuary\\\":\\\"Únor\\\",\\\"March\\\":\\\"Březen\\\",\\\"April\\\":\\\"Duben\\\",\\\"June\\\":\\\"Červen\\\",\\\"July\\\":\\\"Červenec\\\",\\\"August\\\":\\\"Srpen\\\",\\\"September\\\":\\\"Září\\\",\\\"October\\\":\\\"Říjen\\\",\\\"November\\\":\\\"Listopad\\\",\\\"December\\\":\\\"Prosinec\\\"},\\\"Today\\\":\\\"Dnes\\\"},\\\"da\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sol\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tir\\\",\\\"Wed\\\":\\\"On\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Lø\\\",\\\"Sunday\\\":\\\"Søndag\\\",\\\"Monday\\\":\\\"Mandag\\\",\\\"Tuesday\\\":\\\"Tirsdag\\\",\\\"Wednesday\\\":\\\"Onsdag\\\",\\\"Thursday\\\":\\\"Torsdag\\\",\\\"Friday\\\":\\\"Fredag\\\",\\\"Saturday\\\":\\\"Lørdag\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Maj\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januar\\\",\\\"Febuary\\\":\\\"Fejl\\\",\\\"March\\\":\\\"Marts\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"I\\\"},\\\"de\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sonne\\\",\\\"Mon\\\":\\\"Mo\\\",\\\"Tue\\\":\\\"Di\\\",\\\"Wed\\\":\\\"Mi\\\",\\\"Thu\\\":\\\"Do\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sa\\\",\\\"Sunday\\\":\\\"Sonntag\\\",\\\"Monday\\\":\\\"Montag\\\",\\\"Tuesday\\\":\\\"Dienstag\\\",\\\"Wednesday\\\":\\\"Mittwoch\\\",\\\"Thursday\\\":\\\"Donnerstag\\\",\\\"Friday\\\":\\\"Freitag\\\",\\\"Saturday\\\":\\\"Samstag\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mär\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mai\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Juli\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dez\\\",\\\"January\\\":\\\"Januar\\\",\\\"Febuary\\\":\\\"Februar\\\",\\\"March\\\":\\\"März\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"Dezember\\\"},\\\"Today\\\":\\\"Heute\\\"},\\\"el\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Ήλιος\\\",\\\"Mon\\\":\\\"Δευ\\\",\\\"Tue\\\":\\\"Τεύχος\\\",\\\"Wed\\\":\\\"Τετ\\\",\\\"Thu\\\":\\\"Θου\\\",\\\"Fri\\\":\\\"Παρ\\\",\\\"Sat\\\":\\\"Σάβ\\\",\\\"Sunday\\\":\\\"Κυριακή\\\",\\\"Monday\\\":\\\"Δευτέρα\\\",\\\"Tuesday\\\":\\\"Τρίτη\\\",\\\"Wednesday\\\":\\\"Τετάρτη\\\",\\\"Thursday\\\":\\\"Πέμπτη\\\",\\\"Friday\\\":\\\"Παρασκευή\\\",\\\"Saturday\\\":\\\"Σάββατο\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Ιαν\\\",\\\"Feb\\\":\\\"Φεβ\\\",\\\"Mar\\\":\\\"Μαρ\\\",\\\"Apr\\\":\\\"Απρ\\\",\\\"May\\\":\\\"Μάιος\\\",\\\"Jun\\\":\\\"Ιουν\\\",\\\"Jul\\\":\\\"Ιουλ\\\",\\\"Aug\\\":\\\"Αυγ\\\",\\\"Sep\\\":\\\"Σεπ\\\",\\\"Oct\\\":\\\"Οκτ\\\",\\\"Nov\\\":\\\"Νοε\\\",\\\"Dec\\\":\\\"Δεκ\\\",\\\"January\\\":\\\"Ιανουάριος\\\",\\\"Febuary\\\":\\\"Φεβουάριο\\\",\\\"March\\\":\\\"Μάρτιος\\\",\\\"April\\\":\\\"Απρίλιος\\\",\\\"June\\\":\\\"Ιούνιος\\\",\\\"July\\\":\\\"Ιούλιος\\\",\\\"August\\\":\\\"Αύγουστος\\\",\\\"September\\\":\\\"Σεπτέμβριος\\\",\\\"October\\\":\\\"Οκτώβριος\\\",\\\"November\\\":\\\"Νοέμβριος\\\",\\\"December\\\":\\\"Δεκέμβριος\\\"},\\\"Today\\\":\\\"Σήμερα\\\"},\\\"eo\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Suno\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Ni\\\",\\\"Thu\\\":\\\"Tumulto\\\",\\\"Fri\\\":\\\"Frio\\\",\\\"Sat\\\":\\\"Sidanta\\\",\\\"Sunday\\\":\\\"Dimanĉo\\\",\\\"Monday\\\":\\\"Lundo\\\",\\\"Tuesday\\\":\\\"Marŝi\\\",\\\"Wednesday\\\":\\\"Merkredo\\\",\\\"Thursday\\\":\\\"Ĵaŭdon\\\",\\\"Friday\\\":\\\"Vendrede\\\",\\\"Saturday\\\":\\\"Sabato\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Marŝa\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Majo\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aŭgusto\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oktobro\\\",\\\"Nov\\\":\\\"Nov-Zelando\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januaro\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Marto\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Junio\\\",\\\"July\\\":\\\"Julio\\\",\\\"August\\\":\\\"Aŭgusto\\\",\\\"September\\\":\\\"Septembro\\\",\\\"October\\\":\\\"Oktobro\\\",\\\"November\\\":\\\"Novembro\\\",\\\"December\\\":\\\"Decembro\\\"},\\\"Today\\\":\\\"Hodiaŭ\\\"},\\\"es\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sol\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Domingo\\\",\\\"Monday\\\":\\\"Lunes\\\",\\\"Tuesday\\\":\\\"Martes\\\",\\\"Wednesday\\\":\\\"Miércoles\\\",\\\"Thursday\\\":\\\"Jueves\\\",\\\"Friday\\\":\\\"Viernes\\\",\\\"Saturday\\\":\\\"Sábado\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mayo\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Enero\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Marzo\\\",\\\"April\\\":\\\"Abril\\\",\\\"June\\\":\\\"Junio\\\",\\\"July\\\":\\\"Julio\\\",\\\"August\\\":\\\"Agosto\\\",\\\"September\\\":\\\"Septiembre\\\",\\\"October\\\":\\\"Octubre\\\",\\\"November\\\":\\\"Noviembre\\\",\\\"December\\\":\\\"Diciembre\\\"},\\\"Today\\\":\\\"Hoy\\\"},\\\"et\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Päike\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sattus\\\",\\\"Sunday\\\":\\\"Pühapäev\\\",\\\"Monday\\\":\\\"Esmaspäev\\\",\\\"Tuesday\\\":\\\"Teisipäev\\\",\\\"Wednesday\\\":\\\"Kolmapäev\\\",\\\"Thursday\\\":\\\"Neljapäeval\\\",\\\"Friday\\\":\\\"Reede\\\",\\\"Saturday\\\":\\\"Laupäev\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Veebruar\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"May\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oktoober\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Jaanuar\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Märts\\\",\\\"April\\\":\\\"Aprill\\\",\\\"June\\\":\\\"Juuni\\\",\\\"July\\\":\\\"Juuli\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktoober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"Detsember\\\"},\\\"Today\\\":\\\"Täna\\\"},\\\"eu\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sun\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Apustua\\\",\\\"Thu\\\":\\\"Og\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Igandea\\\",\\\"Monday\\\":\\\"Astelehena\\\",\\\"Tuesday\\\":\\\"Asteartea\\\",\\\"Wednesday\\\":\\\"Asteazkena\\\",\\\"Thursday\\\":\\\"Osteguna\\\",\\\"Friday\\\":\\\"Ostirala\\\",\\\"Saturday\\\":\\\"Larunbata\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Ots\\\",\\\"Mar\\\":\\\"Marmar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Maiatza\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Abusua\\\",\\\"Sep\\\":\\\"Ira\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Aza\\\",\\\"Dec\\\":\\\"Abendua\\\",\\\"January\\\":\\\"Urtarrila\\\",\\\"Febuary\\\":\\\"Feburoa\\\",\\\"March\\\":\\\"Martxoa\\\",\\\"April\\\":\\\"Apirila\\\",\\\"June\\\":\\\"Ekaina\\\",\\\"July\\\":\\\"Uztaila\\\",\\\"August\\\":\\\"Abuztua\\\",\\\"September\\\":\\\"Iraila\\\",\\\"October\\\":\\\"Urria\\\",\\\"November\\\":\\\"Azaroa\\\",\\\"December\\\":\\\"Abendua\\\"},\\\"Today\\\":\\\"Gaur\\\"},\\\"fa\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"خورشید\\\",\\\"Mon\\\":\\\"مون\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"تو\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"یکشنبه\\\",\\\"Monday\\\":\\\"دوشنبه\\\",\\\"Tuesday\\\":\\\"سه\\\",\\\"Wednesday\\\":\\\"چهارشنبه\\\",\\\"Thursday\\\":\\\"پنجشنبه\\\",\\\"Friday\\\":\\\"جمعه\\\",\\\"Saturday\\\":\\\"شنبه\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"ژانویه\\\",\\\"Feb\\\":\\\"فوریه\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"آوریل\\\",\\\"May\\\":\\\"ممکن\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"جول\\\",\\\"Aug\\\":\\\"آگوست\\\",\\\"Sep\\\":\\\"سپتامبر\\\",\\\"Oct\\\":\\\"اکتبر\\\",\\\"Nov\\\":\\\"نوامبر\\\",\\\"Dec\\\":\\\"دسامبر\\\",\\\"January\\\":\\\"ژانویه\\\",\\\"Febuary\\\":\\\"فوریه\\\",\\\"March\\\":\\\"مارس\\\",\\\"April\\\":\\\"آوریل\\\",\\\"June\\\":\\\"ژوئن\\\",\\\"July\\\":\\\"جولای\\\",\\\"August\\\":\\\"آگوست\\\",\\\"September\\\":\\\"سپتامبر\\\",\\\"October\\\":\\\"اکتبر\\\",\\\"November\\\":\\\"نوامبر\\\",\\\"December\\\":\\\"دسامبر\\\"},\\\"Today\\\":\\\"امروز\\\"},\\\"fi\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Su\\\",\\\"Mon\\\":\\\"Ma\\\",\\\"Tue\\\":\\\"Ti\\\",\\\"Wed\\\":\\\"Ke\\\",\\\"Thu\\\":\\\"To\\\",\\\"Fri\\\":\\\"Pe\\\",\\\"Sat\\\":\\\"La\\\",\\\"Sunday\\\":\\\"Sunnuntai\\\",\\\"Monday\\\":\\\"Maanantai\\\",\\\"Tuesday\\\":\\\"Tiistai\\\",\\\"Wednesday\\\":\\\"Keskiviikko\\\",\\\"Thursday\\\":\\\"Torstai\\\",\\\"Friday\\\":\\\"Perjantai\\\",\\\"Saturday\\\":\\\"Lauantai\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Tammi\\\",\\\"Feb\\\":\\\"Helmi\\\",\\\"Mar\\\":\\\"Maalis\\\",\\\"Apr\\\":\\\"Huhti\\\",\\\"May\\\":\\\"Toukokuu\\\",\\\"Jun\\\":\\\"Kesä\\\",\\\"Jul\\\":\\\"Heinä\\\",\\\"Aug\\\":\\\"Elo\\\",\\\"Sep\\\":\\\"Syys\\\",\\\"Oct\\\":\\\"Loka\\\",\\\"Nov\\\":\\\"Marras\\\",\\\"Dec\\\":\\\"Joulu\\\",\\\"January\\\":\\\"Tammikuu\\\",\\\"Febuary\\\":\\\"Helmikuu\\\",\\\"March\\\":\\\"Maaliskuu\\\",\\\"April\\\":\\\"Huhtikuu\\\",\\\"June\\\":\\\"Kesäkuu\\\",\\\"July\\\":\\\"Heinäkuu\\\",\\\"August\\\":\\\"Elokuu\\\",\\\"September\\\":\\\"Syyskuu\\\",\\\"October\\\":\\\"Lokakuu\\\",\\\"November\\\":\\\"Marraskuu\\\",\\\"December\\\":\\\"Joulukuu\\\"},\\\"Today\\\":\\\"Tänään\\\"},\\\"fr\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Soleil\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tu\\\",\\\"Wed\\\":\\\"Mariage\\\",\\\"Thu\\\":\\\"Jeu\\\",\\\"Fri\\\":\\\"Ven\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Dimanche\\\",\\\"Monday\\\":\\\"Lundi\\\",\\\"Tuesday\\\":\\\"Mardi\\\",\\\"Wednesday\\\":\\\"Mercredi\\\",\\\"Thursday\\\":\\\"Jeudi\\\",\\\"Friday\\\":\\\"Vendredi\\\",\\\"Saturday\\\":\\\"Samedi\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Janvier\\\",\\\"Feb\\\":\\\"Fév\\\",\\\"Mar\\\":\\\"Mars\\\",\\\"Apr\\\":\\\"Avr\\\",\\\"May\\\":\\\"Mai\\\",\\\"Jun\\\":\\\"Juin\\\",\\\"Jul\\\":\\\"Juillet\\\",\\\"Aug\\\":\\\"Août\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Déc\\\",\\\"January\\\":\\\"Janvier\\\",\\\"Febuary\\\":\\\"Février\\\",\\\"March\\\":\\\"Mars\\\",\\\"April\\\":\\\"Avril\\\",\\\"June\\\":\\\"Juin\\\",\\\"July\\\":\\\"Juillet\\\",\\\"August\\\":\\\"Août\\\",\\\"September\\\":\\\"Septembre\\\",\\\"October\\\":\\\"Octobre\\\",\\\"November\\\":\\\"Novembre\\\",\\\"December\\\":\\\"Décembre\\\"},\\\"Today\\\":\\\"Aujourd'hui\\\"},\\\"ga\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Ghrian\\\",\\\"Mon\\\":\\\"Uisce\\\",\\\"Tue\\\":\\\"Déan\\\",\\\"Wed\\\":\\\"Táimid\\\",\\\"Thu\\\":\\\"Thuama\\\",\\\"Fri\\\":\\\"Múirín\\\",\\\"Sat\\\":\\\"Sábháil\\\",\\\"Sunday\\\":\\\"Domhnach\\\",\\\"Monday\\\":\\\"Dé\\\",\\\"Tuesday\\\":\\\"Dé\\\",\\\"Wednesday\\\":\\\"Dé\\\",\\\"Thursday\\\":\\\"Déardaoin\\\",\\\"Friday\\\":\\\"Dé\\\",\\\"Saturday\\\":\\\"Dé\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"An\\\",\\\"Feb\\\":\\\"Is\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Aibreán\\\",\\\"May\\\":\\\"Bealtaine\\\",\\\"Jun\\\":\\\"Amharc\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Lúnasa\\\",\\\"Sep\\\":\\\"Meán\\\",\\\"Oct\\\":\\\"Deireadh\\\",\\\"Nov\\\":\\\"Cineál\\\",\\\"Dec\\\":\\\"Déan\\\",\\\"January\\\":\\\"Irl\\\",\\\"Febuary\\\":\\\"Amharc\\\",\\\"March\\\":\\\"Márta\\\",\\\"April\\\":\\\"Amharc\\\",\\\"June\\\":\\\"Meitheamh\\\",\\\"July\\\":\\\"Irl\\\",\\\"August\\\":\\\"Amharc\\\",\\\"September\\\":\\\"Meán\\\",\\\"October\\\":\\\"Deireadh\\\",\\\"November\\\":\\\"Samhain\\\",\\\"December\\\":\\\"Nollaig\\\"},\\\"Today\\\":\\\"Sa\\\"},\\\"gl\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sol\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Apostamos\\\",\\\"Thu\\\":\\\"Tu\\\",\\\"Fri\\\":\\\"Frio\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Domingo\\\",\\\"Monday\\\":\\\"Luns\\\",\\\"Tuesday\\\":\\\"Martes\\\",\\\"Wednesday\\\":\\\"Miércoles\\\",\\\"Thursday\\\":\\\"Xoves\\\",\\\"Friday\\\":\\\"Venres\\\",\\\"Saturday\\\":\\\"Sábado\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Febreiro\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Abril\\\",\\\"May\\\":\\\"Maio\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Xullo\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Novidade\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Xaneiro\\\",\\\"Febuary\\\":\\\"Febreiro\\\",\\\"March\\\":\\\"Marzo\\\",\\\"April\\\":\\\"Abril\\\",\\\"June\\\":\\\"Xuño\\\",\\\"July\\\":\\\"Xullo\\\",\\\"August\\\":\\\"Agosto\\\",\\\"September\\\":\\\"Setembro\\\",\\\"October\\\":\\\"Outubro\\\",\\\"November\\\":\\\"Novembro\\\",\\\"December\\\":\\\"Decembro\\\"},\\\"Today\\\":\\\"Hoxe\\\"},\\\"he\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"השמש\\\",\\\"Mon\\\":\\\"מונמון\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"תור\\\",\\\"Fri\\\":\\\"פרי\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"יום\\\",\\\"Monday\\\":\\\"יום\\\",\\\"Tuesday\\\":\\\"יום\\\",\\\"Wednesday\\\":\\\"יום\\\",\\\"Thursday\\\":\\\"יום\\\",\\\"Friday\\\":\\\"יום\\\",\\\"Saturday\\\":\\\"יום\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"יאן\\\",\\\"Feb\\\":\\\"פברואר\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"אנגלית\\\",\\\"May\\\":\\\"במאי\\\",\\\"Jun\\\":\\\"ג'ון\\\",\\\"Jul\\\":\\\"יולי\\\",\\\"Aug\\\":\\\"אוגוסט\\\",\\\"Sep\\\":\\\"ספרד\\\",\\\"Oct\\\":\\\"באוקטובר\\\",\\\"Nov\\\":\\\"נובמבר\\\",\\\"Dec\\\":\\\"דצמבר\\\",\\\"January\\\":\\\"ינואר\\\",\\\"Febuary\\\":\\\"פברואר\\\",\\\"March\\\":\\\"מרץ\\\",\\\"April\\\":\\\"אפריל\\\",\\\"June\\\":\\\"יוני\\\",\\\"July\\\":\\\"יולי\\\",\\\"August\\\":\\\"אוגוסט\\\",\\\"September\\\":\\\"ספטמבר\\\",\\\"October\\\":\\\"אוקטובר\\\",\\\"November\\\":\\\"נובמבר\\\",\\\"December\\\":\\\"דצמבר\\\"},\\\"Today\\\":\\\"היום\\\"},\\\"hi\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"सूर्य\\\",\\\"Mon\\\":\\\"सोम\\\",\\\"Tue\\\":\\\"मंगल\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"गुरु\\\",\\\"Fri\\\":\\\"शुक्र\\\",\\\"Sat\\\":\\\"सत\\\",\\\"Sunday\\\":\\\"रविवार\\\",\\\"Monday\\\":\\\"सोमवार\\\",\\\"Tuesday\\\":\\\"मंगलवार\\\",\\\"Wednesday\\\":\\\"बुधवार\\\",\\\"Thursday\\\":\\\"गुरुवार\\\",\\\"Friday\\\":\\\"शुक्रवार\\\",\\\"Saturday\\\":\\\"शनिवार\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"जनवरी\\\",\\\"Feb\\\":\\\"फ़रवरी\\\",\\\"Mar\\\":\\\"मार्च\\\",\\\"Apr\\\":\\\"अप्रैल\\\",\\\"May\\\":\\\"मई\\\",\\\"Jun\\\":\\\"जून\\\",\\\"Jul\\\":\\\"जुलाई\\\",\\\"Aug\\\":\\\"अगस्त\\\",\\\"Sep\\\":\\\"सितंबर\\\",\\\"Oct\\\":\\\"अक्टूबर\\\",\\\"Nov\\\":\\\"नवम्बर\\\",\\\"Dec\\\":\\\"दिसम्बर\\\",\\\"January\\\":\\\"जनवरी\\\",\\\"Febuary\\\":\\\"फ़रवरी\\\",\\\"March\\\":\\\"मार्च\\\",\\\"April\\\":\\\"अप्रैल\\\",\\\"June\\\":\\\"जून\\\",\\\"July\\\":\\\"जुलाई\\\",\\\"August\\\":\\\"अगस्त\\\",\\\"September\\\":\\\"सितंबर\\\",\\\"October\\\":\\\"अक्टूबर\\\",\\\"November\\\":\\\"नवंबर\\\",\\\"December\\\":\\\"दिसम्बर\\\"},\\\"Today\\\":\\\"आज\\\"},\\\"hu\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Nap\\\",\\\"Mon\\\":\\\"H\\\",\\\"Tue\\\":\\\"Sze\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Vasárnap\\\",\\\"Monday\\\":\\\"Hétfő\\\",\\\"Tuesday\\\":\\\"Kedd\\\",\\\"Wednesday\\\":\\\"Szerda\\\",\\\"Thursday\\\":\\\"Csütörtök\\\",\\\"Friday\\\":\\\"Péntek\\\",\\\"Saturday\\\":\\\"Szombat\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Május\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sz\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Január\\\",\\\"Febuary\\\":\\\"Február\\\",\\\"March\\\":\\\"Március\\\",\\\"April\\\":\\\"Április\\\",\\\"June\\\":\\\"Június\\\",\\\"July\\\":\\\"Július\\\",\\\"August\\\":\\\"Augusztus\\\",\\\"September\\\":\\\"Szeptember\\\",\\\"October\\\":\\\"Október\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"Ma\\\"},\\\"id\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Matahari\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Busana\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sab\\\",\\\"Sunday\\\":\\\"Minggu\\\",\\\"Monday\\\":\\\"Senin\\\",\\\"Tuesday\\\":\\\"Selasa\\\",\\\"Wednesday\\\":\\\"Rabu\\\",\\\"Thursday\\\":\\\"Kamis\\\",\\\"Friday\\\":\\\"Jumat\\\",\\\"Saturday\\\":\\\"Sabtu\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mei\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januari\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Maret\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"Agustus\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"Desember\\\"},\\\"Today\\\":\\\"Hari\\\"},\\\"it\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sole\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Gio\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Rasoio\\\",\\\"Sunday\\\":\\\"Domenica\\\",\\\"Monday\\\":\\\"Lunedì\\\",\\\"Tuesday\\\":\\\"Martedì\\\",\\\"Wednesday\\\":\\\"Mercoledì\\\",\\\"Thursday\\\":\\\"Giovedì\\\",\\\"Friday\\\":\\\"Venerdì\\\",\\\"Saturday\\\":\\\"Sabato\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Febbraio\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Aprile\\\",\\\"May\\\":\\\"Maggio\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Agosto\\\",\\\"Sep\\\":\\\"Articolo\\\",\\\"Oct\\\":\\\"Ottobre\\\",\\\"Nov\\\":\\\"No\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Gennaio\\\",\\\"Febuary\\\":\\\"Feburio\\\",\\\"March\\\":\\\"Marzo\\\",\\\"April\\\":\\\"Aprile\\\",\\\"June\\\":\\\"Giugno\\\",\\\"July\\\":\\\"Luglio\\\",\\\"August\\\":\\\"Agosto\\\",\\\"September\\\":\\\"Settembre\\\",\\\"October\\\":\\\"Ottobre\\\",\\\"November\\\":\\\"Novembre\\\",\\\"December\\\":\\\"Dicembre\\\"},\\\"Today\\\":\\\"Oggi\\\"},\\\"ja\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"日曜日\\\",\\\"Mon\\\":\\\"モンド\\\",\\\"Tue\\\":\\\"火曜日\\\",\\\"Wed\\\":\\\"お問い合わせ\\\",\\\"Thu\\\":\\\"日\\\",\\\"Fri\\\":\\\"フリガナ\\\",\\\"Sat\\\":\\\"スタッフ\\\",\\\"Sunday\\\":\\\"日曜日\\\",\\\"Monday\\\":\\\"月曜日～金曜日\\\",\\\"Tuesday\\\":\\\"火曜日\\\",\\\"Wednesday\\\":\\\"水曜日\\\",\\\"Thursday\\\":\\\"木曜日\\\",\\\"Friday\\\":\\\"金曜日\\\",\\\"Saturday\\\":\\\"土曜日\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"1月1日\\\",\\\"Feb\\\":\\\"1月2日\\\",\\\"Mar\\\":\\\"マーキー\\\",\\\"Apr\\\":\\\"4月4日\\\",\\\"May\\\":\\\"5月5日\\\",\\\"Jun\\\":\\\"ジュンジュン\\\",\\\"Jul\\\":\\\"7月7日\\\",\\\"Aug\\\":\\\"8月8日\\\",\\\"Sep\\\":\\\"9月9日\\\",\\\"Oct\\\":\\\"10月10日\\\",\\\"Nov\\\":\\\"11月11日\\\",\\\"Dec\\\":\\\"12月12日\\\",\\\"January\\\":\\\"1月1日\\\",\\\"Febuary\\\":\\\"2月1日\\\",\\\"March\\\":\\\"3月3日\\\",\\\"April\\\":\\\"4月4日\\\",\\\"June\\\":\\\"6月6日\\\",\\\"July\\\":\\\"7月7日\\\",\\\"August\\\":\\\"8月8日\\\",\\\"September\\\":\\\"9月9日\\\",\\\"October\\\":\\\"10月10日\\\",\\\"November\\\":\\\"11月11日\\\",\\\"December\\\":\\\"12月12日\\\"},\\\"Today\\\":\\\"今日更新\\\"},\\\"ko\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"(주)\\\",\\\"Mon\\\":\\\"담당자\\\",\\\"Tue\\\":\\\" \\\",\\\"Wed\\\":\\\"사이트맵\\\",\\\"Thu\\\":\\\"₢\\\",\\\"Fri\\\":\\\"₢\\\",\\\"Sat\\\":\\\"·\\\",\\\"Sunday\\\":\\\"주\\\",\\\"Monday\\\":\\\"월요일,\\\",\\\"Tuesday\\\":\\\"*\\\",\\\"Wednesday\\\":\\\"-\\\",\\\"Thursday\\\":\\\"주\\\",\\\"Friday\\\":\\\"월~금\\\",\\\"Saturday\\\":\\\"·\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"1\\\",\\\"Feb\\\":\\\"2월\\\",\\\"Mar\\\":\\\"3\\\",\\\"Apr\\\":\\\"4\\\",\\\"May\\\":\\\"5\\\",\\\"Jun\\\":\\\"주\\\",\\\"Jul\\\":\\\"7\\\",\\\"Aug\\\":\\\"8\\\",\\\"Sep\\\":\\\"9월\\\",\\\"Oct\\\":\\\"10월\\\",\\\"Nov\\\":\\\"11월\\\",\\\"Dec\\\":\\\"12월\\\",\\\"January\\\":\\\"1월\\\",\\\"Febuary\\\":\\\"주\\\",\\\"March\\\":\\\"3\\\",\\\"April\\\":\\\"4\\\",\\\"June\\\":\\\"6월\\\",\\\"July\\\":\\\"7\\\",\\\"August\\\":\\\"8\\\",\\\"September\\\":\\\"9\\\",\\\"October\\\":\\\"10월\\\",\\\"November\\\":\\\"11\\\",\\\"December\\\":\\\"12\\\"},\\\"Today\\\":\\\"으로\\\"},\\\"lt\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Saulė\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"WEd\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"FrNAME\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Sekmadienis\\\",\\\"Monday\\\":\\\"Pirmadienis\\\",\\\"Tuesday\\\":\\\"Antradienis\\\",\\\"Wednesday\\\":\\\"Trečiadienis\\\",\\\"Thursday\\\":\\\"Ketvirtadienis\\\",\\\"Friday\\\":\\\"Penktadienis\\\",\\\"Saturday\\\":\\\"Šeštadienis\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Sau\\\",\\\"Feb\\\":\\\"Vas\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Bal\\\",\\\"May\\\":\\\"Gegužės\\\",\\\"Jun\\\":\\\"Bir\\\",\\\"Jul\\\":\\\"Lie\\\",\\\"Aug\\\":\\\"Rgp\\\",\\\"Sep\\\":\\\"Rp\\\",\\\"Oct\\\":\\\"Spalis\\\",\\\"Nov\\\":\\\"Nr\\\",\\\"Dec\\\":\\\"Gruodis\\\",\\\"January\\\":\\\"Sausis\\\",\\\"Febuary\\\":\\\"Piešinys\\\",\\\"March\\\":\\\"Kovas\\\",\\\"April\\\":\\\"Balandis\\\",\\\"June\\\":\\\"Birželis\\\",\\\"July\\\":\\\"Liepa\\\",\\\"August\\\":\\\"Rugpjūtis\\\",\\\"September\\\":\\\"Rugsėjis\\\",\\\"October\\\":\\\"Spalis\\\",\\\"November\\\":\\\"Lapkritis\\\",\\\"December\\\":\\\"Gruodis\\\"},\\\"Today\\\":\\\"Šiandien\\\"},\\\"lv\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Saule\\\",\\\"Mon\\\":\\\"N\\\",\\\"Tue\\\":\\\"Otr\\\",\\\"Wed\\\":\\\"Tre\\\",\\\"Thu\\\":\\\"Cet\\\",\\\"Fri\\\":\\\"Pie\\\",\\\"Sat\\\":\\\"Ses\\\",\\\"Sunday\\\":\\\"Svētdiena\\\",\\\"Monday\\\":\\\"Pirmdiena\\\",\\\"Tuesday\\\":\\\"Otrdiena\\\",\\\"Wednesday\\\":\\\"Trešdiena\\\",\\\"Thursday\\\":\\\"Ceturtdiena\\\",\\\"Friday\\\":\\\"Piektdiena\\\",\\\"Saturday\\\":\\\"Sestdiena\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Janvāris\\\",\\\"Feb\\\":\\\"Febr\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Maijs\\\",\\\"Jun\\\":\\\"Jūn\\\",\\\"Jul\\\":\\\"Jūl\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sept\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Janvāris\\\",\\\"Febuary\\\":\\\"Febuāris\\\",\\\"March\\\":\\\"Marts\\\",\\\"April\\\":\\\"Aprīlis\\\",\\\"June\\\":\\\"Jūnijs\\\",\\\"July\\\":\\\"Jūlijs\\\",\\\"August\\\":\\\"Augusts\\\",\\\"September\\\":\\\"Septembris\\\",\\\"October\\\":\\\"Oktobris\\\",\\\"November\\\":\\\"Novembris\\\",\\\"December\\\":\\\"Decembris\\\"},\\\"Today\\\":\\\"Šodien\\\"},\\\"ms\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sun\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Perancis\\\",\\\"Wed\\\":\\\"♪\\\",\\\"Thu\\\":\\\"Khaw\\\",\\\"Fri\\\":\\\"Perancis\\\",\\\"Sat\\\":\\\"♪\\\",\\\"Sunday\\\":\\\"Ahad\\\",\\\"Monday\\\":\\\"Isnin\\\",\\\"Tuesday\\\":\\\"Selasa\\\",\\\"Wednesday\\\":\\\"Rabu\\\",\\\"Thursday\\\":\\\"Khamis\\\",\\\"Friday\\\":\\\"Jumat\\\",\\\"Saturday\\\":\\\"Sabtu\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Perancis\\\",\\\"Mar\\\":\\\"Perancis\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mei\\\",\\\"Jun\\\":\\\"Juni\\\",\\\"Jul\\\":\\\"♪\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Perancis\\\",\\\"Oct\\\":\\\"Takh\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Amerika\\\",\\\"January\\\":\\\"Januari\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"2010,\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"Ogos\\\",\\\"September\\\":\\\"Perancis\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"Amerika\\\"},\\\"Today\\\":\\\"Hari\\\"},\\\"nb\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sun\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Søndag\\\",\\\"Monday\\\":\\\"Mandag\\\",\\\"Tuesday\\\":\\\"Tirsdag\\\",\\\"Wednesday\\\":\\\"Onsdag\\\",\\\"Thursday\\\":\\\"Torsdag\\\",\\\"Friday\\\":\\\"Fredag\\\",\\\"Saturday\\\":\\\"Lørdag\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mai\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januar\\\",\\\"Febuary\\\":\\\"Februar\\\",\\\"March\\\":\\\"Mars\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"Desember\\\"},\\\"Today\\\":\\\"I\\\"},\\\"nl\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Zon\\\",\\\"Mon\\\":\\\"Ma\\\",\\\"Tue\\\":\\\"Di\\\",\\\"Wed\\\":\\\"Wo\\\",\\\"Thu\\\":\\\"Do\\\",\\\"Fri\\\":\\\"Vr\\\",\\\"Sat\\\":\\\"Zat\\\",\\\"Sunday\\\":\\\"Zondag\\\",\\\"Monday\\\":\\\"Maandag\\\",\\\"Tuesday\\\":\\\"Dinsdag\\\",\\\"Wednesday\\\":\\\"Woensdag\\\",\\\"Thursday\\\":\\\"Donderdag\\\",\\\"Friday\\\":\\\"Vrijdag\\\",\\\"Saturday\\\":\\\"Zaterdag\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mei\\\",\\\"Jun\\\":\\\"Juni\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januari\\\",\\\"Febuary\\\":\\\"February\\\",\\\"March\\\":\\\"Maart\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"Augustus\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"Vandaag\\\"},\\\"pl\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Słońce\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Wtyczka\\\",\\\"Wed\\\":\\\"Środ\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Niedziela\\\",\\\"Monday\\\":\\\"Poniedziałek\\\",\\\"Tuesday\\\":\\\"Wtorek\\\",\\\"Wednesday\\\":\\\"Środa\\\",\\\"Thursday\\\":\\\"Czwartek\\\",\\\"Friday\\\":\\\"Piątek\\\",\\\"Saturday\\\":\\\"Sobota\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Luty\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Kwiecień\\\",\\\"May\\\":\\\"Maj\\\",\\\"Jun\\\":\\\"Czerwiec\\\",\\\"Jul\\\":\\\"Lipiec\\\",\\\"Aug\\\":\\\"Sierpień\\\",\\\"Sep\\\":\\\"Wrzesień\\\",\\\"Oct\\\":\\\"Październik\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Grudzień\\\",\\\"January\\\":\\\"Styczeń\\\",\\\"Febuary\\\":\\\"Luty\\\",\\\"March\\\":\\\"Marzec\\\",\\\"April\\\":\\\"Kwiecień\\\",\\\"June\\\":\\\"Czerwiec\\\",\\\"July\\\":\\\"Lipiec\\\",\\\"August\\\":\\\"Sierpień\\\",\\\"September\\\":\\\"Wrzesień\\\",\\\"October\\\":\\\"Październik\\\",\\\"November\\\":\\\"Listopad\\\",\\\"December\\\":\\\"Grudzień\\\"},\\\"Today\\\":\\\"Dzisiaj\\\"},\\\"pt\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sol\\\",\\\"Mon\\\":\\\"Monsenhor\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Tu\\\",\\\"Fri\\\":\\\"Frio\\\",\\\"Sat\\\":\\\"Satisfeito\\\",\\\"Sunday\\\":\\\"Domingo\\\",\\\"Monday\\\":\\\"Segunda-feira\\\",\\\"Tuesday\\\":\\\"Terça-feira\\\",\\\"Wednesday\\\":\\\"Quarta-feira\\\",\\\"Thursday\\\":\\\"Quinta-feira\\\",\\\"Friday\\\":\\\"Sexta-feira\\\",\\\"Saturday\\\":\\\"Sábado\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Fev\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Abr\\\",\\\"May\\\":\\\"Maio\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"A\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"O\\\",\\\"Nov\\\":\\\"Não\\\",\\\"Dec\\\":\\\"Dez\\\",\\\"January\\\":\\\"Janeiro\\\",\\\"Febuary\\\":\\\"Fevereiro\\\",\\\"March\\\":\\\"Março\\\",\\\"April\\\":\\\"Abril\\\",\\\"June\\\":\\\"Junho\\\",\\\"July\\\":\\\"Julho\\\",\\\"August\\\":\\\"Agosto\\\",\\\"September\\\":\\\"Setembro\\\",\\\"October\\\":\\\"Outubro\\\",\\\"November\\\":\\\"Novembro\\\",\\\"December\\\":\\\"Dezembro\\\"},\\\"Today\\\":\\\"Hoje\\\"},\\\"ro\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Soare\\\",\\\"Mon\\\":\\\"Luni\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Căsătorie\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Vine\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Duminică\\\",\\\"Monday\\\":\\\"Luni\\\",\\\"Tuesday\\\":\\\"Marţi\\\",\\\"Wednesday\\\":\\\"Miercuri\\\",\\\"Thursday\\\":\\\"Joi\\\",\\\"Friday\\\":\\\"Vineri\\\",\\\"Saturday\\\":\\\"Sâmbătă\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Februarie\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"May\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Ianuarie\\\",\\\"Febuary\\\":\\\"Febur\\\",\\\"March\\\":\\\"Martie\\\",\\\"April\\\":\\\"Aprilie\\\",\\\"June\\\":\\\"Iunie\\\",\\\"July\\\":\\\"Iulie\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"Septembrie\\\",\\\"October\\\":\\\"Octombrie\\\",\\\"November\\\":\\\"Noiembrie\\\",\\\"December\\\":\\\"Decembrie\\\"},\\\"Today\\\":\\\"Astăzi\\\"},\\\"ru\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Солнце\\\",\\\"Mon\\\":\\\"Мон\\\",\\\"Tue\\\":\\\"Туи\\\",\\\"Wed\\\":\\\"Свадьба\\\",\\\"Thu\\\":\\\"Ту\\\",\\\"Fri\\\":\\\"Фри\\\",\\\"Sat\\\":\\\"Сидеть\\\",\\\"Sunday\\\":\\\"Воскресенье\\\",\\\"Monday\\\":\\\"Понедельник\\\",\\\"Tuesday\\\":\\\"Вторник\\\",\\\"Wednesday\\\":\\\"Среда\\\",\\\"Thursday\\\":\\\"Четверг\\\",\\\"Friday\\\":\\\"Пятница\\\",\\\"Saturday\\\":\\\"Суббота\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Ян\\\",\\\"Feb\\\":\\\"Февраль\\\",\\\"Mar\\\":\\\"Мар\\\",\\\"Apr\\\":\\\"Апр\\\",\\\"May\\\":\\\"Май\\\",\\\"Jun\\\":\\\"Джун\\\",\\\"Jul\\\":\\\"Джул\\\",\\\"Aug\\\":\\\"Ауг\\\",\\\"Sep\\\":\\\"Сеп\\\",\\\"Oct\\\":\\\"Октября\\\",\\\"Nov\\\":\\\"Ноябрь\\\",\\\"Dec\\\":\\\"Декларация\\\",\\\"January\\\":\\\"Январь\\\",\\\"Febuary\\\":\\\"Февраль\\\",\\\"March\\\":\\\"Март\\\",\\\"April\\\":\\\"Апрель\\\",\\\"June\\\":\\\"Июнь\\\",\\\"July\\\":\\\"Июль\\\",\\\"August\\\":\\\"Август\\\",\\\"September\\\":\\\"Сентябрь\\\",\\\"October\\\":\\\"Октября\\\",\\\"November\\\":\\\"Ноябрь\\\",\\\"December\\\":\\\"Декабрь\\\"},\\\"Today\\\":\\\"Сегодня\\\"},\\\"sk\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Slnko\\\",\\\"Mon\\\":\\\"Po\\\",\\\"Tue\\\":\\\"Ut\\\",\\\"Wed\\\":\\\"Str\\\",\\\"Thu\\\":\\\"Št\\\",\\\"Fri\\\":\\\"Pi\\\",\\\"Sat\\\":\\\"So\\\",\\\"Sunday\\\":\\\"Nedeľa\\\",\\\"Monday\\\":\\\"Pondelok\\\",\\\"Tuesday\\\":\\\"Utorok\\\",\\\"Wednesday\\\":\\\"Streda\\\",\\\"Thursday\\\":\\\"Štvrtok\\\",\\\"Friday\\\":\\\"Piatok\\\",\\\"Saturday\\\":\\\"Sobota\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apríl\\\",\\\"May\\\":\\\"Máj\\\",\\\"Jun\\\":\\\"Jún\\\",\\\"Jul\\\":\\\"Júl\\\",\\\"Aug\\\":\\\"August\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Január\\\",\\\"Febuary\\\":\\\"Febuár\\\",\\\"March\\\":\\\"Marec\\\",\\\"April\\\":\\\"Apríl\\\",\\\"June\\\":\\\"Jún\\\",\\\"July\\\":\\\"Júl\\\",\\\"August\\\":\\\"August\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Október\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"Dnes\\\"},\\\"sl\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sonce\\\",\\\"Mon\\\":\\\"Naslednji\\\",\\\"Tue\\\":\\\"Tor\\\",\\\"Wed\\\":\\\"Sre\\\",\\\"Thu\\\":\\\"Čet\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sob\\\",\\\"Sunday\\\":\\\"Nedelja\\\",\\\"Monday\\\":\\\"Ponedeljek\\\",\\\"Tuesday\\\":\\\"Torek\\\",\\\"Wednesday\\\":\\\"Sreda\\\",\\\"Thursday\\\":\\\"Četrtek\\\",\\\"Friday\\\":\\\"Petek\\\",\\\"Saturday\\\":\\\"Sobota\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Maj\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Avg\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januar\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Marec\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Junij\\\",\\\"July\\\":\\\"Julij\\\",\\\"August\\\":\\\"Avgust\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"Danes\\\"},\\\"sq\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Dielli\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Mer\\\",\\\"Thu\\\":\\\"Tsu\\\",\\\"Fri\\\":\\\"Pre\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"E\\\",\\\"Monday\\\":\\\"E\\\",\\\"Tuesday\\\":\\\"E\\\",\\\"Wednesday\\\":\\\"E\\\",\\\"Thursday\\\":\\\"E\\\",\\\"Friday\\\":\\\"E\\\",\\\"Saturday\\\":\\\"E\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Fb\\\",\\\"Mar\\\":\\\"Meri\\\",\\\"Apr\\\":\\\"Për\\\",\\\"May\\\":\\\"Maj\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Tetor\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dhjetor\\\",\\\"January\\\":\\\"Janar\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Mars\\\",\\\"April\\\":\\\"Prill\\\",\\\"June\\\":\\\"Qershor\\\",\\\"July\\\":\\\"Korrik\\\",\\\"August\\\":\\\"Gusht\\\",\\\"September\\\":\\\"Shtator\\\",\\\"October\\\":\\\"Tetor\\\",\\\"November\\\":\\\"Nëntor\\\",\\\"December\\\":\\\"Dhjetor\\\"},\\\"Today\\\":\\\"Sot\\\"},\\\"sv\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Sol\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sattar\\\",\\\"Sunday\\\":\\\"Söndag\\\",\\\"Monday\\\":\\\"Måndag\\\",\\\"Tuesday\\\":\\\"Tisdag\\\",\\\"Wednesday\\\":\\\"Onsdag\\\",\\\"Thursday\\\":\\\"Torsdag\\\",\\\"Friday\\\":\\\"Fredag\\\",\\\"Saturday\\\":\\\"Lördag\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Feb\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Maj\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Jul\\\",\\\"Aug\\\":\\\"Aug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Okt\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Dec\\\",\\\"January\\\":\\\"Januari\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Mars\\\",\\\"April\\\":\\\"April\\\",\\\"June\\\":\\\"Juni\\\",\\\"July\\\":\\\"Juli\\\",\\\"August\\\":\\\"Augusti\\\",\\\"September\\\":\\\"September\\\",\\\"October\\\":\\\"Oktober\\\",\\\"November\\\":\\\"November\\\",\\\"December\\\":\\\"December\\\"},\\\"Today\\\":\\\"Idag\\\"},\\\"th\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"อาทิตย์\\\",\\\"Mon\\\":\\\"นิ้ว\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"เว็บ\\\",\\\"Thu\\\":\\\"ทู\\\",\\\"Fri\\\":\\\"เนื้อ\\\",\\\"Sat\\\":\\\"ที่นั่ง\\\",\\\"Sunday\\\":\\\"อาทิตย์\\\",\\\"Monday\\\":\\\"จันทร์\\\",\\\"Tuesday\\\":\\\"อังคาร\\\",\\\"Wednesday\\\":\\\"วันพุธ\\\",\\\"Thursday\\\":\\\"พฤหัสบดี\\\",\\\"Friday\\\":\\\"ศุกร์\\\",\\\"Saturday\\\":\\\"เสาร์\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"ไม่นะ\\\",\\\"Feb\\\":\\\"ก.\\\",\\\"Mar\\\":\\\"ขนาด\\\",\\\"Apr\\\":\\\"ขนาด\\\",\\\"May\\\":\\\"พฤษภาคม\\\",\\\"Jun\\\":\\\"จุน\\\",\\\"Jul\\\":\\\"ก.\\\",\\\"Aug\\\":\\\"อัก\\\",\\\"Sep\\\":\\\"เซพ\\\",\\\"Oct\\\":\\\"ตลับหมึก\\\",\\\"Nov\\\":\\\"นอฟ\\\",\\\"Dec\\\":\\\"ธ.\\\",\\\"January\\\":\\\"มกราคม\\\",\\\"Febuary\\\":\\\"อภิสิทธิ์\\\",\\\"March\\\":\\\"มีนาคม\\\",\\\"April\\\":\\\"เมษายน\\\",\\\"June\\\":\\\"มิถุนายน\\\",\\\"July\\\":\\\"กรกฎาคม\\\",\\\"August\\\":\\\"สิงหาคม\\\",\\\"September\\\":\\\"กันยายน\\\",\\\"October\\\":\\\"ตุลาคม\\\",\\\"November\\\":\\\"พฤศจิกายน\\\",\\\"December\\\":\\\"ธันวาคม\\\"},\\\"Today\\\":\\\"วันนี้\\\"},\\\"tl\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Araw\\\",\\\"Mon\\\":\\\"Buwan\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Damo\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Kaibigan\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Linggo\\\",\\\"Monday\\\":\\\"Lunes\\\",\\\"Tuesday\\\":\\\"Martes\\\",\\\"Wednesday\\\":\\\"Miyerkules\\\",\\\"Thursday\\\":\\\"Huwebes\\\",\\\"Friday\\\":\\\"Biyernes\\\",\\\"Saturday\\\":\\\"Sabado\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Sanggol\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mayo\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Juul\\\",\\\"Aug\\\":\\\"Ug\\\",\\\"Sep\\\":\\\"Sep\\\",\\\"Oct\\\":\\\"Oct\\\",\\\"Nov\\\":\\\"Nov\\\",\\\"Dec\\\":\\\"Pagpapasiya\\\",\\\"January\\\":\\\"Enero\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Marso\\\",\\\"April\\\":\\\"Abril\\\",\\\"June\\\":\\\"Hunyo\\\",\\\"July\\\":\\\"Hulyo\\\",\\\"August\\\":\\\"Agosto\\\",\\\"September\\\":\\\"Setyembre\\\",\\\"October\\\":\\\"Oktubre\\\",\\\"November\\\":\\\"Nobyembre\\\",\\\"December\\\":\\\"Disyembre\\\"},\\\"Today\\\":\\\"Ngayon\\\"},\\\"tr\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Güneş\\\",\\\"Mon\\\":\\\"Mon\\\",\\\"Tue\\\":\\\"Tue\\\",\\\"Wed\\\":\\\"Wed\\\",\\\"Thu\\\":\\\"Thu\\\",\\\"Fri\\\":\\\"Fri\\\",\\\"Sat\\\":\\\"Sat\\\",\\\"Sunday\\\":\\\"Pazar\\\",\\\"Monday\\\":\\\"Pazartesi\\\",\\\"Tuesday\\\":\\\"Salı\\\",\\\"Wednesday\\\":\\\"Çarşamba\\\",\\\"Thursday\\\":\\\"Perşembe\\\",\\\"Friday\\\":\\\"Cuma\\\",\\\"Saturday\\\":\\\"Cumartesi\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Jan\\\",\\\"Feb\\\":\\\"Şubat\\\",\\\"Mar\\\":\\\"Mar\\\",\\\"Apr\\\":\\\"Apr\\\",\\\"May\\\":\\\"Mayıs\\\",\\\"Jun\\\":\\\"Jun\\\",\\\"Jul\\\":\\\"Temmuz\\\",\\\"Aug\\\":\\\"Ağu\\\",\\\"Sep\\\":\\\"Eylül\\\",\\\"Oct\\\":\\\"Ekim\\\",\\\"Nov\\\":\\\"Kasım\\\",\\\"Dec\\\":\\\"Aralık\\\",\\\"January\\\":\\\"Ocak\\\",\\\"Febuary\\\":\\\"Febuary\\\",\\\"March\\\":\\\"Mart\\\",\\\"April\\\":\\\"Nisan\\\",\\\"June\\\":\\\"Haziran\\\",\\\"July\\\":\\\"Temmuz\\\",\\\"August\\\":\\\"Ağustos\\\",\\\"September\\\":\\\"Eylül\\\",\\\"October\\\":\\\"Ekim\\\",\\\"November\\\":\\\"Kasım\\\",\\\"December\\\":\\\"Aralık\\\"},\\\"Today\\\":\\\"Bugün\\\"},\\\"uk\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"Сонце\\\",\\\"Mon\\\":\\\"Навігація\\\",\\\"Tue\\\":\\\"Твитнуть\\\",\\\"Wed\\\":\\\"Про\\\",\\\"Thu\\\":\\\"Чорти\\\",\\\"Fri\\\":\\\"П'ятниця\\\",\\\"Sat\\\":\\\"Сонце\\\",\\\"Sunday\\\":\\\"Неділя\\\",\\\"Monday\\\":\\\"Понеділок\\\",\\\"Tuesday\\\":\\\"П'ятниця\\\",\\\"Wednesday\\\":\\\"Середа\\\",\\\"Thursday\\\":\\\"Четвер\\\",\\\"Friday\\\":\\\"П'ятниця\\\",\\\"Saturday\\\":\\\"Субота\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"Мар\\\",\\\"Feb\\\":\\\"Мар\\\",\\\"Mar\\\":\\\"Мар\\\",\\\"Apr\\\":\\\"Мар\\\",\\\"May\\\":\\\"Травень\\\",\\\"Jun\\\":\\\"Мар\\\",\\\"Jul\\\":\\\"Мар\\\",\\\"Aug\\\":\\\"Мар\\\",\\\"Sep\\\":\\\"Мар\\\",\\\"Oct\\\":\\\"Мар\\\",\\\"Nov\\\":\\\"Мар\\\",\\\"Dec\\\":\\\"Мар\\\",\\\"January\\\":\\\"Січень\\\",\\\"Febuary\\\":\\\"Маргарита\\\",\\\"March\\\":\\\"Березень\\\",\\\"April\\\":\\\"Квітень\\\",\\\"June\\\":\\\"Червень\\\",\\\"July\\\":\\\"Липень\\\",\\\"August\\\":\\\"Серпень\\\",\\\"September\\\":\\\"Вересень\\\",\\\"October\\\":\\\"Жовтень\\\",\\\"November\\\":\\\"Листопад\\\",\\\"December\\\":\\\"Грудень\\\"},\\\"Today\\\":\\\"Сьогодні\\\"},\\\"ur\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"سورج\\\",\\\"Mon\\\":\\\"مون\\\",\\\"Tue\\\":\\\"ٹو\\\",\\\"Wed\\\":\\\"وے\\\",\\\"Thu\\\":\\\"چو\\\",\\\"Fri\\\":\\\"فری\\\",\\\"Sat\\\":\\\"شطرنج\\\",\\\"Sunday\\\":\\\"اتوار\\\",\\\"Monday\\\":\\\"منگل\\\",\\\"Tuesday\\\":\\\"منگل\\\",\\\"Wednesday\\\":\\\"بدھ\\\",\\\"Thursday\\\":\\\"جمعرات\\\",\\\"Friday\\\":\\\"جمعہ\\\",\\\"Saturday\\\":\\\"سبت\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"یان\\\",\\\"Feb\\\":\\\"فیب\\\",\\\"Mar\\\":\\\"مار\\\",\\\"Apr\\\":\\\"پرنٹ\\\",\\\"May\\\":\\\"مئی\\\",\\\"Jun\\\":\\\"جون\\\",\\\"Jul\\\":\\\"یول\\\",\\\"Aug\\\":\\\"آغ\\\",\\\"Sep\\\":\\\"سیپ\\\",\\\"Oct\\\":\\\"پرنٹ\\\",\\\"Nov\\\":\\\"ن\\\",\\\"Dec\\\":\\\"سوال\\\",\\\"January\\\":\\\"جنوری\\\",\\\"Febuary\\\":\\\"افریقہ\\\",\\\"March\\\":\\\"مارچ\\\",\\\"April\\\":\\\"اپریل\\\",\\\"June\\\":\\\"جون\\\",\\\"July\\\":\\\"جولائی\\\",\\\"August\\\":\\\"اگست\\\",\\\"September\\\":\\\"ستمبر\\\",\\\"October\\\":\\\"اکتوبر\\\",\\\"November\\\":\\\"نومبر\\\",\\\"December\\\":\\\"دسمبر\\\"},\\\"Today\\\":\\\"آج\\\"},\\\"zh\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"太阳\\\",\\\"Mon\\\":\\\"月号\\\",\\\"Tue\\\":\\\"图\\\",\\\"Wed\\\":\\\"结婚\\\",\\\"Thu\\\":\\\"图\\\",\\\"Fri\\\":\\\"弗里语Name\\\",\\\"Sat\\\":\\\"座位\\\",\\\"Sunday\\\":\\\"礼拜\\\",\\\"Monday\\\":\\\"星期一\\\",\\\"Tuesday\\\":\\\"星期二\\\",\\\"Wednesday\\\":\\\"星期三\\\",\\\"Thursday\\\":\\\"星期四\\\",\\\"Friday\\\":\\\"星期五\\\",\\\"Saturday\\\":\\\"星期六(上午)\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"扬\\\",\\\"Feb\\\":\\\"二月\\\",\\\"Mar\\\":\\\"马来\\\",\\\"Apr\\\":\\\"农历四月\\\",\\\"May\\\":\\\"5月\\\",\\\"Jun\\\":\\\"军\\\",\\\"Jul\\\":\\\"朱尔\\\",\\\"Aug\\\":\\\"奥格\\\",\\\"Sep\\\":\\\"九月\\\",\\\"Oct\\\":\\\"十月(简体)\\\",\\\"Nov\\\":\\\"页:1\\\",\\\"Dec\\\":\\\"12月(中文)\\\",\\\"January\\\":\\\"页:1\\\",\\\"Febuary\\\":\\\"二级\\\",\\\"March\\\":\\\"3月(半天会议)\\\",\\\"April\\\":\\\"4月(半天会议)\\\",\\\"June\\\":\\\"6月份\\\",\\\"July\\\":\\\"7月(半天会议)\\\",\\\"August\\\":\\\"8月(半天)\\\",\\\"September\\\":\\\"9月(半天会议)\\\",\\\"October\\\":\\\"10月(半天会议)\\\",\\\"November\\\":\\\"11月(半天会议)\\\",\\\"December\\\":\\\"12月(半天)\\\"},\\\"Today\\\":\\\"现在\\\"},\\\"zt\\\":{\\\"Weekdays\\\":{\\\"Sun\\\":\\\"太阳\\\",\\\"Mon\\\":\\\"月\\\",\\\"Tue\\\":\\\"二等分\\\",\\\"Wed\\\":\\\"有婚\\\",\\\"Thu\\\":\\\"三月\\\",\\\"Fri\\\":\\\"弗里\\\",\\\"Sat\\\":\\\"有\\\",\\\"Sunday\\\":\\\"星期天\\\",\\\"Monday\\\":\\\"星期一\\\",\\\"Tuesday\\\":\\\"星期二\\\",\\\"Wednesday\\\":\\\"星期三\\\",\\\"Thursday\\\":\\\"星期四\\\",\\\"Friday\\\":\\\"星期五\\\",\\\"Saturday\\\":\\\"星期六\\\"},\\\"Months\\\":{\\\"Jan\\\":\\\"1月\\\",\\\"Feb\\\":\\\"二月\\\",\\\"Mar\\\":\\\"三月\\\",\\\"Apr\\\":\\\"四月\\\",\\\"May\\\":\\\"五月\\\",\\\"Jun\\\":\\\"三月\\\",\\\"Jul\\\":\\\"二月\\\",\\\"Aug\\\":\\\"8月\\\",\\\"Sep\\\":\\\"九月\\\",\\\"Oct\\\":\\\"十月\\\",\\\"Nov\\\":\\\"11月\\\",\\\"Dec\\\":\\\"二月\\\",\\\"January\\\":\\\"1月\\\",\\\"Febuary\\\":\\\"二月\\\",\\\"March\\\":\\\"三月\\\",\\\"April\\\":\\\"4月\\\",\\\"June\\\":\\\"6月\\\",\\\"July\\\":\\\"7月\\\",\\\"August\\\":\\\"8月\\\",\\\"September\\\":\\\"9月\\\",\\\"October\\\":\\\"10月\\\",\\\"November\\\":\\\"11月\\\",\\\"December\\\":\\\"12月\\\"},\\\"Today\\\":\\\"今天\\\"}}\"","export default \"{\\\"en\\\":{\\\"Error\\\":\\\"Error\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"No Results\\\"}},\\\"ar\\\":{\\\"Error\\\":\\\"الرعب\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"لا نتائج\\\"}},\\\"az\\\":{\\\"Error\\\":\\\"Qeyd\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Qeydlər\\\"}},\\\"bg\\\":{\\\"Error\\\":\\\"Грешка\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Няма резултати\\\"}},\\\"bn\\\":{\\\"Error\\\":\\\"ত্রুটি\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"কোনো ফলাফল পাওয়া যায়নি\\\"}},\\\"ca\\\":{\\\"Error\\\":\\\"Error\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Sense resultats\\\"}},\\\"cs\\\":{\\\"Error\\\":\\\"Chyba\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Žádné výsledky\\\"}},\\\"da\\\":{\\\"Error\\\":\\\"Fejl\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Ingen resultater\\\"}},\\\"de\\\":{\\\"Error\\\":\\\"Fehler\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Keine Ergebnisse\\\"}},\\\"el\\\":{\\\"Error\\\":\\\"Σφάλμα\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Χωρίς αποτελέσματα\\\"}},\\\"eo\\\":{\\\"Error\\\":\\\"Eraro\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Neniuj rezultoj\\\"}},\\\"es\\\":{\\\"Error\\\":\\\"Error\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"No hay resultados\\\"}},\\\"et\\\":{\\\"Error\\\":\\\"Viga\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Tulemused puuduvad\\\"}},\\\"eu\\\":{\\\"Error\\\":\\\"Errorea\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Emaitzarik ez\\\"}},\\\"fa\\\":{\\\"Error\\\":\\\"خطای\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"نتایج\\\"}},\\\"fi\\\":{\\\"Error\\\":\\\"Virhe\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Ei tuloksia\\\"}},\\\"fr\\\":{\\\"Error\\\":\\\"Erreur\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Aucun résultat\\\"}},\\\"ga\\\":{\\\"Error\\\":\\\"Amharc\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Gan a bheith ráite\\\"}},\\\"gl\\\":{\\\"Error\\\":\\\"Erro\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Sen resultados\\\"}},\\\"he\\\":{\\\"Error\\\":\\\"טעות\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"לא תוצאות\\\"}},\\\"hi\\\":{\\\"Error\\\":\\\"त्रुटि\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"परिणाम\\\"}},\\\"hu\\\":{\\\"Error\\\":\\\"Hiba\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Nincs eredmény\\\"}},\\\"id\\\":{\\\"Error\\\":\\\"Galat\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Tidak ada hasil\\\"}},\\\"it\\\":{\\\"Error\\\":\\\"Errore\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Nessun risultato\\\"}},\\\"ja\\\":{\\\"Error\\\":\\\"エラー\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"結果なし\\\"}},\\\"ko\\\":{\\\"Error\\\":\\\"계정\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"결과 없음\\\"}},\\\"lt\\\":{\\\"Error\\\":\\\"Klaida\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Nr rezultatai\\\"}},\\\"lv\\\":{\\\"Error\\\":\\\"Kļūda\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Nav rezultātu\\\"}},\\\"ms\\\":{\\\"Error\\\":\\\"Error\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Hasil No\\\"}},\\\"nb\\\":{\\\"Error\\\":\\\"Feil\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Ingen resultater\\\"}},\\\"nl\\\":{\\\"Error\\\":\\\"Fout\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Geen resultaten\\\"}},\\\"pl\\\":{\\\"Error\\\":\\\"Błąd\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Brak wyników\\\"}},\\\"pt\\\":{\\\"Error\\\":\\\"Erro\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Sem resultados\\\"}},\\\"ro\\\":{\\\"Error\\\":\\\"Eroare\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Niciun rezultat\\\"}},\\\"ru\\\":{\\\"Error\\\":\\\"Ошибка\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Нет результатов\\\"}},\\\"sk\\\":{\\\"Error\\\":\\\"Chyba\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Žiadne výsledky\\\"}},\\\"sl\\\":{\\\"Error\\\":\\\"Napaka\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Brez rezultatov\\\"}},\\\"sq\\\":{\\\"Error\\\":\\\"Gabim\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Asnjë rezultat\\\"}},\\\"sv\\\":{\\\"Error\\\":\\\"Fel\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Inga resultat\\\"}},\\\"th\\\":{\\\"Error\\\":\\\"ผิดพลาด\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"ไม่มีผลลัพธ์\\\"}},\\\"tl\\\":{\\\"Error\\\":\\\"Pagkakamali\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Walang Resulta\\\"}},\\\"tr\\\":{\\\"Error\\\":\\\"Hata\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Sonuçlar yok\\\"}},\\\"uk\\\":{\\\"Error\\\":\\\"Помилка\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"Немає результатів\\\"}},\\\"ur\\\":{\\\"Error\\\":\\\"خامی\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"کوئی نتیجہ\\\"}},\\\"zh\\\":{\\\"Error\\\":\\\"错误\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"无结果\\\"}},\\\"zt\\\":{\\\"Error\\\":\\\"錯誤\\\",\\\"AutoComplete\\\":{\\\"NoResults\\\":\\\"沒有結果\\\"}}}\"","export default \"{\\\"en\\\":{\\\"Done\\\":\\\"Done\\\"},\\\"ar\\\":{\\\"Done\\\":\\\"تم\\\"},\\\"az\\\":{\\\"Done\\\":\\\" Don\\\"},\\\"bg\\\":{\\\"Done\\\":\\\"Готово\\\"},\\\"ca\\\":{\\\"Done\\\":\\\"Fet\\\"},\\\"cs\\\":{\\\"Done\\\":\\\"Hotovo\\\"},\\\"da\\\":{\\\"Done\\\":\\\"Færdig\\\"},\\\"de\\\":{\\\"Done\\\":\\\"Fertig\\\"},\\\"el\\\":{\\\"Done\\\":\\\"Έγινε\\\"},\\\"eo\\\":{\\\"Done\\\":\\\"Done\\\"},\\\"es\\\":{\\\"Done\\\":\\\"Hecho\\\"},\\\"et\\\":{\\\"Done\\\":\\\"Tehtud\\\"},\\\"eu\\\":{\\\"Done\\\":\\\"Eginda\\\"},\\\"fa\\\":{\\\"Done\\\":\\\"انجام\\\"},\\\"fi\\\":{\\\"Done\\\":\\\"Tehty\\\"},\\\"fr\\\":{\\\"Done\\\":\\\"Fait\\\"},\\\"ga\\\":{\\\"Done\\\":\\\"Arna\\\"},\\\"gl\\\":{\\\"Done\\\":\\\"Feito\\\"},\\\"he\\\":{\\\"Done\\\":\\\"נעשה\\\"},\\\"hi\\\":{\\\"Done\\\":\\\"दान\\\"},\\\"hu\\\":{\\\"Done\\\":\\\"Kész\\\"},\\\"id\\\":{\\\"Done\\\":\\\"Selesai\\\"},\\\"it\\\":{\\\"Done\\\":\\\"Fatto\\\"},\\\"ja\\\":{\\\"Done\\\":\\\"ログイン\\\"},\\\"ko\\\":{\\\"Done\\\":\\\"한국어\\\"},\\\"lt\\\":{\\\"Done\\\":\\\"@\\\"},\\\"lv\\\":{\\\"Done\\\":\\\"Pabeigts\\\"},\\\"ms\\\":{\\\"Done\\\":\\\"Selesai\\\"},\\\"nb\\\":{\\\"Done\\\":\\\"Ferdig\\\"},\\\"nl\\\":{\\\"Done\\\":\\\"Klaar\\\"},\\\"pl\\\":{\\\"Done\\\":\\\"Gotowe\\\"},\\\"pt\\\":{\\\"Done\\\":\\\"Feito\\\"},\\\"ro\\\":{\\\"Done\\\":\\\"Gata\\\"},\\\"ru\\\":{\\\"Done\\\":\\\"Сделано\\\"},\\\"sk\\\":{\\\"Done\\\":\\\"Hotovo\\\"},\\\"sl\\\":{\\\"Done\\\":\\\"Končano\\\"},\\\"sq\\\":{\\\"Done\\\":\\\"U\\\"},\\\"sv\\\":{\\\"Done\\\":\\\"Done\\\"},\\\"th\\\":{\\\"Done\\\":\\\"เสร็จแล้ว\\\"},\\\"tl\\\":{\\\"Done\\\":\\\"Tapos\\\"},\\\"tr\\\":{\\\"Done\\\":\\\"Done\\\"},\\\"uk\\\":{\\\"Done\\\":\\\"Сонце\\\"},\\\"ur\\\":{\\\"Done\\\":\\\"بند\\\"},\\\"zh\\\":{\\\"Done\\\":\\\"完成\\\"},\\\"zt\\\":{\\\"Done\\\":\\\"完成\\\"}}\"","import button from './button/messages.json?raw';\r\nimport filter from './filter/messages.json?raw';\r\nimport pagination from './pagination/messages.json?raw';\r\nimport date from './date/messages.json?raw';\r\nimport form from './form/messages.json?raw';\r\nimport wizard from './wizard/messages.json?raw';\r\nimport { ComputedRef } from 'vue';\r\n\r\nconst messages = {\r\n    Button:JSON.parse(button),\r\n    Filter:JSON.parse(filter),\r\n    Pagination:JSON.parse(pagination),\r\n    Date:JSON.parse(date),\r\n    Form:JSON.parse(form),\r\n    Wizard:JSON.parse(wizard)\r\n};\r\n\r\nexport default (message:string,language?:ComputedRef<string>|null):string=>{\r\n    let split = message.split('.');\r\n    let obj = messages[split[0]];\r\n    const lang:any = (language==undefined || language==null ? null : language.value)??'en';\r\n    if (obj!==undefined){\r\n        if (obj[lang]===undefined){\r\n            obj = obj['en'];\r\n        }else{\r\n            obj=obj[lang];\r\n        }\r\n        let idx = 1;\r\n        while(obj!==undefined && idx<split.length){\r\n            obj = obj[split[idx]];\r\n            idx++;\r\n        }\r\n    }\r\n    if (obj===undefined){\r\n        throw `unable to locate message ${message}`;\r\n    }\r\n    return obj;\r\n};","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\nimport { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around an add call\r\n     * Uses plus icon, primary color and Add for text\r\n     * @displayName ButtonAdd\r\n     */\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Add',Language),\r\n            icon:'plus',\r\n            type:ColorTypes.primary,\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\n    import { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a cancel call\r\n     * Uses window-close icon, danger color and Cancel for text\r\n     * @displayName ButtonCancel\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Cancel',Language),\r\n            icon:'window-close',\r\n            type:ColorTypes.danger,\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties, IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a delete call\r\n     * Uses trash-alt icon, danger color and Cancel for text\r\n     * @displayName ButtonDelete\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Delete',Language),\r\n            icon:'trash-alt',\r\n            type:ColorTypes.danger\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties, IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a disable call\r\n     * Uses times-circle icon, danger color and Disable for text\r\n     * @displayName ButtonDisable\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Disable',Language),\r\n            icon:'times-circle',\r\n            type:ColorTypes.danger\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties, IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a download call\r\n     * Uses download icon, primary color and Download for text\r\n     * @displayName ButtonDownload\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Download',Language),\r\n            icon:'download',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties, IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around an edit call\r\n     * Uses edit icon, primary color and Edit for text\r\n     * @displayName ButtonEdit\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Edit',Language),\r\n            icon:'edit',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around an enable call\r\n     * Uses check icon, primary color and Enable for text\r\n     * @displayName ButtonEnable\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Enable',Language),\r\n            icon:'check',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around an okay call\r\n     * Uses check icon, primary color and Okay for text\r\n     * @displayName ButtonOkay\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Okay',Language),\r\n            icon:'check',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a print call\r\n     * Uses print icon, primary color and Print for text\r\n     * @displayName ButtonPrint\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Print',Language),\r\n            icon:'print',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a refresh call\r\n     * Uses sync icon, primary color and Refresh for text\r\n     * @displayName ButtonRefresh\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Refresh',Language),\r\n            icon:'sync',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a save call\r\n     * Uses save icon, primary color and Save for text\r\n     * \r\n     * @displayName ButtonSave\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Save',Language),\r\n            icon:'save',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes} from '../../../enums';\r\n    import { useLanguage } from '../../shared';\r\nimport { IButtonBasicProperties,IButtonProperties } from '../typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    /**\r\n     * This is a specifically built version of the default button that is designed around a upload call\r\n     * Uses upload icon, primary color and Upload for text\r\n     * \r\n     * @displayName ButtonUpload\r\n     */\r\n     const emit = defineEmits<{\r\n        /**\r\n         * Emit a click even when the button is clicked\r\n         */\r\n        click: []\r\n    }>();\r\n    const props = defineProps<IButtonBasicProperties>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed<IButtonProperties>(()=>{\r\n        return {\r\n            title:translate('Button.Upload',Language),\r\n            icon:'upload',\r\n            type:ColorTypes.primary\r\n        }||props;\r\n    });\r\n</script>","<template>\r\n    <div :class=\"['buttons',(props.size?`are-${props.size}`:''),(props.alignment?`is-${props.alignment}`:'')]\">\r\n        <!--\r\n            @slot The buttons that are being collected together\r\n        -->\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to collect a set of buttons together and align/style them approriately\r\n * @displayName ButtonsContainer\r\n */\r\n    import {Sizes,ButtonAlignments} from '../../enums';\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The size to set for the buttons (if there is desire to override)\r\n         */\r\n        size?:Sizes,\r\n        /**\r\n         * The alignment to use for the buttons within the group\r\n         */\r\n        alignment?:ButtonAlignments\r\n    }>();\r\n</script>","<template>\r\n    <Icon :icon=\"`square-${(props.checked ? 'check' : 'xmark')}`\" :size=\"props.size\"/>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * used to display a basic check mark on the screen\r\n * @displayName CheckMark\r\n */\r\n    import Icon from \"./icon.vue\";\r\n    import { IconSizes } from \"../../enums\";\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * Indicates if the icon should be be checked (check) or (xmark)\r\n         */\r\n        checked?:boolean,\r\n        /**\r\n         * Sets the size of the icon to use\r\n         */\r\n        size?:IconSizes\r\n    }>(),{\r\n        checked:true,\r\n        size:IconSizes.normal\r\n    });\r\n</script>","<template>\r\n    <div :class=\"Classes\">\r\n        <div class=\"dropdown-trigger\">\r\n            <button class=\"button\" aria-haspopup=\"true\" :aria-controls=\"menuID\" @click=\"isActive=!isActive\">\r\n                <span>{{props.title}}</span>\r\n                <span class=\"icon is-small\">\r\n                    <Icon icon=\"angle-down\" aria-hidden=\"true\"/>\r\n                </span>\r\n            </button>\r\n        </div>\r\n        <div class=\"dropdown-menu\" :id=\"menuID\" role=\"menu\">\r\n            <div class=\"dropdown-content\" v-for=\"block,index in Blocks\">\r\n                <hr class=\"dropdown-divider\" v-if=\"index>0\"/>\r\n                <template v-for=\"entry in block.children\">\r\n                    <component :is=\"(typeof entry === 'string' ? 'div' : 'a')\"\r\n                        :class=\"GetItemClasses(entry)\"\r\n                        :href=\"GetItemURL(entry)\"\r\n                        @click=\"ProcessItemClick(entry)\">\r\n                        <p v-if=\"typeof entry === 'string'\">{{entry}}</p>\r\n                        {{(typeof entry === 'string' ? null : (entry as DropDownItem).title)}}\r\n                    </component>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n/**\r\n * This is used to create a drop down element\r\n * @displayName DropDown\r\n * @link https://bulma.io/documentation/components/dropdown/\r\n */\r\n    import { MaybeRef,computed,toValue,ref} from 'vue';\r\n    import { DropDownBlock, DropDownItem } from './typeDefinitions';\r\n    import { generateUUID } from '../utilities';\r\n    import Icon from './icon.vue';\r\n\r\n    const menuID:string = generateUUID();\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The title of the drop down\r\n         */\r\n        title:MaybeRef<string>,\r\n        /**\r\n         * The dropdown menu items to use\r\n         */\r\n        items:MaybeRef<DropDownBlock[]|DropDownBlock|(| string| DropDownItem)[]|(| string| DropDownItem)[][]>,\r\n        /**\r\n         * Indicates if it should display from hovering\r\n         */\r\n        is_hoverable?:boolean,\r\n        /**\r\n         * Inidicates if the menu should display right aligned\r\n         */\r\n        is_right_align?:boolean,\r\n        /**\r\n         * Indicates if the menu should display up instead of down\r\n         */\r\n        drops_up?:boolean\r\n    }>();\r\n\r\n    const isActive=ref(false);\r\n\r\n    const Classes = computed<string[]>(()=>{\r\n        let results:string[] = ['dropdown'];\r\n        if (props.is_hoverable){results.push('is-hoverable');}\r\n        if (props.is_right_align){results.push('is-right');}\r\n        if (props.drops_up){results.push('is-up');}\r\n        if (isActive.value){results.push('is-active');}\r\n        return results;\r\n    });\r\n    const Blocks = computed<DropDownBlock[]>(()=>{\r\n        let result = toValue<DropDownBlock[]|DropDownBlock|(| string| DropDownItem)[]|(| string| DropDownItem)[][]>(props.items);\r\n        if (Array.isArray(result)){\r\n            result = result.map<DropDownBlock>(item=>(Array.isArray(item) ? {children:item} : {children:[item]}) as DropDownBlock);\r\n        }\r\n        return (Array.isArray(result) ? result : [result]) as DropDownBlock[];\r\n    });\r\n\r\n    const GetItemClasses = (entry:string|DropDownItem):string[]=>{\r\n        let result:string[] = ['dropdown-item'];\r\n        if (typeof entry !== 'string'){\r\n            let item = entry as DropDownItem;\r\n            if (item.active){result.push('is-active');}\r\n        }\r\n        return result;\r\n    }\r\n    const GetItemURL = (entry:string|DropDownItem):string|undefined=>{\r\n        if (typeof entry !== 'string'){\r\n            let item = entry as DropDownItem;\r\n            return item.href;\r\n        }\r\n        return undefined;\r\n    }\r\n    const ProcessItemClick = (entry:string|DropDownItem):void=>{\r\n        if (typeof entry !=='string'){\r\n            isActive.value=false;\r\n            let item = entry as DropDownItem;\r\n            if (item.onClick){item.onClick();}\r\n        }\r\n    }\r\n</script>","<template>\r\n    <component v-for=\"comp in components\" :is=\"comp\" v-bind=\"props.props\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,watch,computed,onMounted,ComputedRef } from 'vue';\r\n\r\n    const reload = async (url:string,sortMethod?:(a:string,b:string)=>number,filterReg?:ComputedRef<RegExp|null>) : Promise<any[]> => {\r\n        let imps = await import(url);\r\n        const names = Object.keys(imps);\r\n        if (sortMethod) {\r\n            names.sort(sortMethod);\r\n        }\r\n        return names\r\n            .filter(n=>filterReg===undefined||filterReg.value===null||filterReg.value.test(n))\r\n            .map(n=>{\r\n                return imps[n];\r\n            });\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to dynamically load multiple components as a set of dynamic items\r\n * @displayName DynamicSlot\r\n */\r\n    const components = ref<any[]|null>(null);\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The props to pass to all the loaded child components\r\n         */\r\n        props?:any,\r\n        /**\r\n         * The url to load the components from\r\n         */\r\n        url:string,\r\n        /**\r\n         * Used to filter out some of the loaded components by name\r\n         */\r\n        filter?:string,\r\n        /**\r\n         * The method used to sort the components\r\n         * @param a the name of the first component\r\n         * @param b the name of the next component\r\n         */\r\n        sortMethod:(a:string,b:string)=>number\r\n    }>();\r\n\r\n    const FilterReg = computed<RegExp|null>(() => {\r\n        return (props.filter == null || props.filter == undefined ? null : new RegExp('^' + props.filter.replaceAll('.', '\\\\.').replaceAll('*', '.+') + '$'));\r\n    });\r\n\r\n    watch(()=>[props.url,props.filter], async () => {\r\n        components.value = await reload(props.url, props.sortMethod, FilterReg);\r\n    });\r\n\r\n    onMounted(async () => {\r\n        components.value = await reload(props.url, props.sortMethod, FilterReg);\r\n    });\r\n</script>","<template>\r\n    <div class=\"control has-icons-left\">\r\n        <input role=\"searchbox\" type=\"text\" class=\"input is-expanded is-rounded\" :placeholder=\"Filter\" v-model=\"filter\" @keypress=\"FilterKeyPress\">\r\n        <span class=\"is-left\">\r\n            <Icon icon=\"filter\" :size=\"IconSizes.small\"/>   \r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { onMounted, ref, watch, computed,inject } from 'vue';\r\n    import Icon from './icon.vue';\r\n    import translate from '../../messages/messages.js';\r\n    import { useLanguage } from '../shared';\r\n    import { IconSizes } from '../../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is a built form style component used to create a basic filter input\r\n * @displayName Filter\r\n * @link https://bulma.io/documentation/form/input/\r\n * @link_title Based Off Bulma Component\r\n */\r\n    const props = defineProps<{\r\n        /**\r\n         * The default value to set the filter to when it is cleared\r\n         */\r\n        default_value?:string\r\n    }>();\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * When a filter is triggered this event will emit supplying the value or null\r\n         */\r\n        filter:[value:string|null]\r\n    }>();\r\n\r\n    const Language = useLanguage(inject);\r\n    const Filter = computed<string>(()=>translate('Filter.Filter',Language));\r\n\r\n    const filter = ref<string|null>(null);\r\n\r\n    watch([filter], (val) => {\r\n        if (val[0] === '') {\r\n            if (props.default_value) {\r\n                filter.value = props.default_value;\r\n                emit('filter', (filter.value == '' ? null : filter.value));\r\n            }\r\n        }\r\n    });\r\n\r\n    const FilterKeyPress = (event:any) => {\r\n        if (event.keyCode == 13) {\r\n            emit('filter', (filter.value == '' ? null : filter.value));\r\n        }\r\n    };\r\n\r\n    onMounted(()=>{\r\n        if (props.default_value) {\r\n            filter.value = props.default_value;\r\n        }\r\n    });\r\n</script>\r\n","<template>\r\n    <article :class=\"['message',Size,Type]\">\r\n        <div class=\"message-header\" v-if=\"props.title\">\r\n            <p>{{props.title}}</p>\r\n            <button class=\"delete\" aria-label=\"delete\" v-if=\"props.has_delete\" @click=\"emit('close')\"></button>\r\n        </div>\r\n        <div class=\"message-body\">\r\n            <!--\r\n                @slot Content of the message if the message property is not enough\r\n            -->\r\n            <slot>\r\n                {{props.message}}\r\n            </slot>\r\n        </div>\r\n    </article>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to display a Message component on the screen\r\n * \r\n * @displayName Message\r\n * @link https://bulma.io/documentation/components/message/\r\n */\r\n    import { ColorTypes,Sizes } from '../../enums';\r\n    import {computed} from 'vue';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The color type of the message\r\n         */\r\n            type?: ColorTypes|null,\r\n            /**\r\n             * The message content\r\n             */\r\n            message?:string|null,\r\n            /**\r\n             * Indicates if it has a delete button\r\n             */\r\n            has_delete?:boolean,\r\n            /**\r\n             * The title for the message container\r\n             */\r\n            title?:string|null,\r\n            /**\r\n             * The size of the message container\r\n             */\r\n            size?:Sizes|null\r\n        }>(),{\r\n            type:ColorTypes.primary,\r\n            message:null,\r\n            has_delete:false,\r\n            title:null,\r\n            size:Sizes.normal\r\n        });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the delete (close) button is clicked\r\n         */\r\n        close: []\r\n    }>();\r\n\r\n    const Size = computed(()=>{\r\n        if (props.size===Sizes.normal){return null;}\r\n        else{return `is-${props.size}`;}\r\n    });\r\n    const Type = computed(()=>`is-${props.type}`);\r\n</script>","<template>\r\n    <div :class=\"['notification','is-'+props.type,(props.light ? 'is-light' : '')]\">\r\n        <!--\r\n            @slot Content of the notification if the message property is not enough\r\n        -->\r\n        <slot>\r\n            {{props.message}}\r\n        </slot>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a notification component\r\n * \r\n * @displayName Notification\r\n * @link https://bulma.io/documentation/elements/notification/\r\n */\r\nimport { MaybeRef } from 'vue';\r\nimport {NoticeTypes} from '../../enums';\r\n\r\nconst props = withDefaults(defineProps<{\r\n    /**\r\n     * The color type to use\r\n     */\r\n    type?: NoticeTypes|null,\r\n    /**\r\n     * The content of the notifcation\r\n     */\r\n    message?:MaybeRef<string>|string|null,\r\n    /**\r\n     * Inidicates to use the light version of the given color\r\n     */\r\n    light?:boolean\r\n    }>(),{\r\n        type:NoticeTypes.info,\r\n        message:null,\r\n        light:false\r\n    });\r\n</script>","<template>\r\n    <div :class=\"{'modal':props.block_user&&props.visible,'is-active':props.block_user&&props.visible}\">\r\n        <div v-if=\"props.block_user&&props.visible\" class=\"modal-background\"></div>\r\n        <Animation :incoming=\"AnimationTypes.fadeIn\" :outgoing=\"AnimationTypes.fadeOut\" :speed=\"AnimationSpeeds.slower\">\r\n            <div v-if=\"props.visible\" :class=\"clazz\" role=\"dialog\" :aria-label=\"props.header??'Page Notification'\">\r\n                <Icon :icon=\"iconType\" :size=\"IconSizes.xxlarge\" />\r\n                <h1 v-if=\"props.header!==null && props.header!==undefined\" class=\"title\">{{ props.header }}</h1>\r\n                <div class=\"block\">\r\n                    {{ props.message }}\r\n                </div>\r\n                <Icon v-if=\"props.has_close\" icon=\"circle-xmark\" @click=\"emit('close')\" :size=\"IconSizes.large\" role=\"button\" aria-label=\"close\" />\r\n            </div>\r\n        </Animation>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\n    import Icon from './icon.vue';\r\n    import Animation from './animation.vue';\r\n    import {NoticeTypes,AnimationTypes,AnimationSpeeds,IconSizes} from '../../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a page level notification that will appear on top of everything\r\n * \r\n * @displayName PageNotification\r\n * @link https://bulma.io/documentation/elements/notification/\r\n * @link_title Based On This Bulma Component\r\n */\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * Inidicates whether or not to show\r\n         */\r\n        visible?:boolean,\r\n        /**\r\n         * Set the color of the notification\r\n         */\r\n        type?:NoticeTypes,\r\n        /**\r\n         * The message content of the notification\r\n         */\r\n        message?:string,\r\n        /**\r\n         * The title for the notification\r\n         */\r\n        header?:string,\r\n        /**\r\n         * Indicates if the user needs to be blocked from doing anything while fvisible\r\n         */\r\n        block_user?:boolean,\r\n        /**\r\n         * Inidicates if there is a close button\r\n         */\r\n        has_close?:boolean,\r\n        /**\r\n         * Indicates the use of the light version of the color specified\r\n         */\r\n        is_light?:boolean\r\n    }>(),{\r\n        visible:false,\r\n        type:NoticeTypes.info\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the close button is clicked\r\n         */\r\n        close:[]\r\n    }>();\r\n    const iconType = computed<string>(()=>{\r\n        switch(props.type){\r\n            case NoticeTypes.info:\r\n                return 'circle-info';\r\n            case NoticeTypes.success:\r\n                return 'circle-check';\r\n            case NoticeTypes.danger:\r\n                return 'bug';\r\n            case NoticeTypes.warning:\r\n                return 'circle-exclamation';\r\n        }            \r\n    });\r\n    const clazz = computed<string[]>(() => {\r\n        var result = ['is-page-notification-container',`is-${props.type}`];\r\n        if (props.is_light)\r\n            result.push('is-light-mode');\r\n        if (!(props.has_close === undefined || props.has_close === null ? true : props.has_close))\r\n            result.push('has-no-close');\r\n        return result;\r\n    });\r\n</script>","<template>\r\n    <nav :class=\"['pagination','is-centered',ButtonClass,`is-${props.size}`,(props.rounded?'is-rounded':'')]\" role=\"navigation\" aria-label=\"pagination\" v-show=\"HasPrevious||HasNext\">\r\n        <a :class=\"['pagination-previous',ButtonClass]\"\r\n           :title=\"Previous\" @click=\"moveBack\" :disabled=\"(HasPrevious?null:'disabled')\">\r\n           <Icon icon=\"backward\" class=\"mr-1\" :size=\"IconSizes.small\"/>\r\n            {{Previous}}\r\n        </a>\r\n        <a :class=\"['pagination-next',ButtonClass]\"\r\n           :title=\"Next\" @click=\"moveForward\" :disabled=\"(HasNext?null:'disabled')\">\r\n            {{Next}}\r\n            <Icon icon=\"forward\" class=\"ml-1\" :size=\"IconSizes.small\"/>\r\n        </a>\r\n        <template v-if=\"props.total_pages!==undefined\">\r\n            <ul class=\"pagination-list\">\r\n                <li v-for=\"page in Pages\">\r\n                    <span v-if=\"page===-1\" class=\"pagination-ellipsis\">&hellip;</span>\r\n                    <a v-else :class=\"['pagination-link',(page===currentPage ? 'is-current' : '')]\"\r\n                        :aria-label=\"`${GoToPage} ${page}`\"\r\n                        @onclick=\"goToPage(page)\">{{page}}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </template>\r\n    </nav>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, inject,toValue } from 'vue';\r\n    import translate from '../../messages/messages.js';\r\n    import Icon from './icon.vue';\r\n    import { Sizes,IconSizes } from '../../enums';\r\n    import { useLanguage } from '../shared';\r\n    import { IPaginationProperties } from './typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a pagination control\r\n * \r\n * @displayName Pagination\r\n * @link https://bulma.io/documentation/components/pagination/\r\n */\r\n    const props = withDefaults(defineProps<IPaginationProperties>(),{\r\n        use_next:true,\r\n        size:Sizes.small,\r\n        rounded:false ,\r\n        has_previous:undefined,\r\n        has_more:undefined,\r\n        zero_page_index:true\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the Move Forward button is clicked\r\n         */\r\n        moveForward:[],\r\n        /**\r\n         * Emitted when the Move Back button is clicked\r\n         */\r\n        moveBack:[],\r\n        /**\r\n         * Emitted when a given page number is clicked\r\n         */\r\n        goToPage:[page:number]\r\n    }>();\r\n\r\n    const Language = useLanguage(inject);\r\n\r\n    const Previous = computed<string>(()=>translate((props.use_next ? 'Pagination.Previous' : 'Pagination.Older'),Language));\r\n    const Next = computed<string>(()=>translate((props.use_next ? 'Pagination.Next' : 'Pagination.Newer'),Language));\r\n    const ButtonClass = computed<string>(()=>props.button_type ? `has-background-${props.button_type}` : '');\r\n    const GoToPage = computed<string>(()=>translate('Pagination.GoToPage',Language));\r\n\r\n    const currentPage = computed<number>(()=>{\r\n        if (props.current_page===undefined){\r\n            return 0;\r\n        }\r\n        return toValue<number>(props.current_page) + (props.zero_page_index? 1 : 0);\r\n    });\r\n\r\n    const HasPrevious = computed<boolean>(() => (props.has_previous??false) \r\n        || (currentPage.value>0));\r\n    const HasNext = computed<boolean>(() => (props.has_more??false) \r\n        || (currentPage.value<((props.total_pages===undefined?0:toValue<number>(props.total_pages)))));\r\n\r\n    const Pages = computed<number[]>(()=>{\r\n        if (props.total_pages===undefined||props.current_page===undefined){\r\n            return [];\r\n        }else if(toValue<number>(props.total_pages)>5){\r\n            let center:number = Math.max((props.current_page===undefined ? Math.floor(toValue<number>(props.total_pages)/2) : currentPage.value),3);\r\n            if ((toValue<number>(props.total_pages)-currentPage.value)===0){\r\n                center-=2;\r\n            }\r\n            else if ((toValue<number>(props.total_pages)-currentPage.value)===1){\r\n                center--;\r\n            }\r\n            return [\r\n                1,\r\n                -1,\r\n                center-1,\r\n                center,\r\n                center+1,\r\n                -1,\r\n                toValue<number>(props.total_pages)\r\n            ];\r\n        }else{\r\n            let result:number[] = [];\r\n            for(let x=1;x<=toValue<number>(props.total_pages);x++){\r\n                result.push(x);\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n\r\n    const moveBack = function () {\r\n        if (HasPrevious){\r\n            if (props.current_page!==undefined && props.current_page!==null){\r\n                emit('goToPage',toValue<number>(props.current_page)-1);\r\n            }else{\r\n                emit('moveBack');\r\n            }\r\n        }\r\n    };\r\n    const moveForward = function () {\r\n        if (HasNext){\r\n            if (props.current_page!==undefined && props.current_page!==null){\r\n                emit('goToPage',toValue<number>(props.current_page)+1);\r\n            }else{\r\n                emit('moveForward');\r\n            }\r\n        }\r\n    };\r\n    const goToPage = function(page:number){\r\n        emit('goToPage',(props.zero_page_index?page-1:page));\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .pagination a {\r\n        text-decoration: none !important;\r\n    }\r\n</style>","<template>\r\n  <!--\r\n    @slot used to display something while promise is Pending, defaults to a small progress bar\r\n  -->\r\n  <slot name=\"pending\" v-if=\"isPending\">\r\n    <Progress :size=\"Sizes.small\"/>\r\n  </slot>\r\n  <!--\r\n    @slot used to display something when a promise is Rejected, defaults to a Notification with the error\r\n  -->\r\n  <slot name=\"rejected\" v-if=\"isRejected\" v-bind=\"error\">\r\n    <Notification :message=\"ErrorMessage\" :type=\"NoticeTypes.danger\"/>  \r\n  </slot>\r\n  <!--\r\n    @slot used to display whatever content should be rendered through a resolved promise, passing the data in from the promise\r\n  -->\r\n  <slot v-if=\"isResolved\" :response=\"data\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n  import {computed,inject,ref,watch,onMounted,MaybeRef,unref} from 'vue';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a Promise component that expects a Promise to be supplied and will render accordingly\r\n * \r\n * @displayName Promised\r\n */\r\n  import { Progress,Notification } from '.';\r\n  import { NoticeTypes, Sizes } from '../../enums';\r\n  import { useLanguage } from '../shared';\r\n  import translate from '../../messages/messages.js';\r\n\r\n  const props = defineProps<{\r\n    /**\r\n     * The Promise that this component is build around\r\n     */\r\n    promise?:MaybeRef<Promise<unknown|null>|unknown|null>\r\n  }>();\r\n\r\n  const error = ref<Error | null | unknown>(null);\r\n\r\n  const Language = useLanguage(inject);\r\n  const ErrorMessage = computed<string>(()=>`${translate('Form.Error',Language)}: ${error.value.message??error.value.toString()}`);\r\n\r\n  const isRejected = ref(false);\r\n  const isResolved = ref(false);\r\n\r\n  const isPending = computed(()=>!isRejected.value && !isResolved.value);\r\n  const data = ref<unknown | null>(null);\r\n\r\n  async function watchPromise(promise : MaybeRef<Promise<unknown|null>|unknown|null>|undefined) : Promise<void> {\r\n    isRejected.value = false\r\n    isResolved.value = false\r\n    error.value = null\r\n    if (promise===null || promise===undefined){\r\n      data.value = null;\r\n    }else{\r\n      let tmp : Promise<unknown|null>|unknown = unref(promise);\r\n      if (Object.prototype.toString.call(tmp) !== \"[object Promise]\"){\r\n        tmp = Promise.resolve(tmp);\r\n      }\r\n      try{\r\n        data.value = await tmp;\r\n        isResolved.value = true;\r\n      }catch(err){\r\n        error.value = err;\r\n        isRejected.value = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  watch(\r\n    () => props.promise,\r\n    ()=>{watchPromise(props.promise);}\r\n  );\r\n\r\n  onMounted(()=>{watchPromise(props.promise);});\r\n</script>","<template>\r\n    <progress :class=\"`progress is-${props.size} is-${props.type}`\" :value=\"props.value\" :max=\"props.maximum\">{{percentage ? `${percentage.toFixed(2)}%` : null}}</progress>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a progress bar control\r\n * \r\n * @displayName Progress\r\n * @link https://bulma.io/documentation/elements/progress/\r\n */\r\nimport { computed } from 'vue';\r\nimport { ColorTypes, Sizes } from '../../enums';\r\n\r\n    const props = withDefaults(defineProps<{\r\n       /**\r\n        * The color to use for the progress bar\r\n        */ \r\n       type?:ColorTypes,\r\n       /**\r\n        * The size to use\r\n        */\r\n       size?:Sizes,\r\n       /**\r\n        * A number value if desired to display a number\r\n        */\r\n       value?:number,\r\n       /**\r\n        * The maximum value if desired to use a value\r\n        */\r\n       maximum?:number\r\n    }>(),{\r\n        type:ColorTypes.primary,\r\n        size:Sizes.normal\r\n    });\r\n\r\n    const percentage = computed<number|null>(()=>{\r\n        return props.maximum===undefined ? null : ((props.value??0)/props.maximum)*100;\r\n    });\r\n</script>","<template>\r\n    <component :is=\"(props.childItems!==undefined ? 'div' : 'a')\" :class=\"['navbar-item',(props.active?'is-active':''),(props.childItems!==undefined?'has-dropdown is-hoverable':'')]\" :href=\"props.href\" @click=\"processClick\">\r\n        <template v-if=\"props.childItems!==undefined\" class=\"navbar-link\">\r\n            <a class=\"navbar-link\">\r\n                <span v-if=\"props.icon!==undefined && props.icon!==null\" class=\"icon-text\">\r\n                    <span class=\"icon\">\r\n                        <Icon :icon=\"props.icon\"/>\r\n                    </span>\r\n                    <span>{{ props.title }}</span>\r\n                </span>\r\n                <span v-else>{{ props.title }}</span>\r\n            </a>\r\n        </template>\r\n        <template v-else>\r\n            <span v-if=\"props.icon!==undefined && props.icon!==null\" class=\"icon-text\">\r\n                <span class=\"icon\">\r\n                    <Icon :icon=\"props.icon\"/>\r\n                </span>\r\n                <span>{{ props.title }}</span>\r\n            </span>\r\n            <span v-else>{{ props.title }}</span>\r\n        </template>\r\n        <div class=\"navbar-dropdown\" v-if=\"props.childItems!==undefined\">\r\n            <navbar-item v-for=\"child in props.childItems\" v-bind=\"child\" @itemClicked=\"emit('itemClicked')\"/>\r\n        </div>\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ParentMenuItem } from './typeDefinitions';\r\n    import Icon from './icon.vue';\r\n\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * @ignore\r\n * Internal class used to handle Nav Bar Entries for the NavBar component\r\n * \r\n * @displayName NavBarItem\r\n *\r\n */\r\n    const props = withDefaults(defineProps<ParentMenuItem>(),{\r\n        active:false\r\n    });\r\n\r\n    const processClick = ():void=>{\r\n        emit('itemClicked');\r\n        if (props.onClick!==undefined){\r\n            props.onClick();\r\n        }\r\n    };\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * emitted when a particular NavBarItem is clicked\r\n         */\r\n        itemClicked:[]\r\n    }>();\r\n</script>","<template>\r\n    <nav :class=\"['navbar',props.fixed_position,(props.color!==undefined&&props.color!==null ? `is-${props.color}` : '')]\" role=\"navigation\" :aria-label=\"props.ariaLabel\">\r\n        <div class=\"navbar-brand\">\r\n            <!--\r\n                @slot houses a brand identifier if desired\r\n            -->\r\n            <slot name=\"brand\"/>\r\n            <a role=\"button\" :class=\"['navbar-burger',(isActive?'is-active':'')]\" aria-label=\"menu\" :aria-expanded=\"(isActive?'true':'false')\" @click=\"isActive=!isActive\">\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n            </a>\r\n        </div>\r\n        <div :class=\"['navbar-menu',(isActive?'is-active':'')]\">\r\n            <div class=\"navbar-start\" v-if=\"props.start_items!==undefined\">\r\n                <Promised :promise=\"props.start_items\">\r\n                    <template v-slot=\"{response}\">\r\n                        <NavBarMenuItem v-for=\"item in (response as ParentMenuItem[])\"\r\n                            v-bind=\"item\"\r\n                            @itemClicked=\"isActive=false\"/>\r\n                    </template>\r\n                    <template #pending>\r\n                        <div style=\"width:100px;\">\r\n                            <Progress :size=\"Sizes.small\"/>\r\n                        </div>\r\n                    </template>\r\n                </Promised>\r\n            </div>\r\n            <div class=\"navbar-end\" v-if=\"props.end_items!==undefined\">\r\n                <Promised :promise=\"props.end_items\">\r\n                    <template v-slot=\"{response}\">\r\n                        <NavBarMenuItem v-for=\"item in (response as ParentMenuItem[])\"\r\n                            v-bind=\"item\"\r\n                            @itemClicked=\"isActive=false\"/>\r\n                    </template>\r\n                    <template #pending>\r\n                        <div style=\"width:100px;\">\r\n                            <Progress :size=\"Sizes.small\"/>\r\n                        </div>\r\n                    </template>\r\n                </Promised>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {onMounted, ref} from 'vue';\r\n    import { FixedNavBarPositions,Sizes,ColorTypes } from '../../enums';\r\n    import type { ParentMenuItem } from './typeDefinitions';\r\n    import Promised from './Promised.vue';\r\n    import NavBarMenuItem from './navbar-item.vue'\r\n    import Progress from './progress.vue';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a Nav Bar component ment for menu navigation\r\n * \r\n * @displayName NavBar\r\n * @link https://bulma.io/documentation/components/navbar/\r\n */\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The menu items to appear at the start of the nav bar (left)\r\n         */\r\n        start_items?:Promise<ParentMenuItem[]>|ParentMenuItem[],\r\n        /**\r\n         * The menu items to appear at the end of the nav bar (right)\r\n         */\r\n        end_items?:Promise<ParentMenuItem[]>|ParentMenuItem[],\r\n        /**\r\n         * If desired to affix the menu to a given position on the screen\r\n         */\r\n        fixed_position?:FixedNavBarPositions|null,\r\n        /**\r\n         * The aria label to use for the nav bar\r\n         */\r\n        ariaLabel?:string,\r\n        /**\r\n         * The color to use for the nav bar\r\n         */\r\n        color?:ColorTypes\r\n    }>(),{\r\n        fixed_position:null,\r\n        ariaLabel:'navigation'\r\n    });\r\n\r\n    const isActive = ref<boolean>(false);\r\n\r\n    const processClick = (onClick?:()=>void) : void =>{\r\n        isActive.value=false;\r\n        if (onClick!==undefined){\r\n            onClick();\r\n        }\r\n    };\r\n\r\n    onMounted(()=>{\r\n        if (props.fixed_position){\r\n            let classCheck = '';\r\n            switch(props.fixed_position){\r\n                case FixedNavBarPositions.top:\r\n                    classCheck='has-navbar-fixed-top';\r\n                    break;\r\n                case FixedNavBarPositions.bottom:\r\n                    classCheck = 'has-navbar-fixed-bottom';\r\n                    break;\r\n            }\r\n            if (classCheck!==''){\r\n                if (!document.body.classList.contains(classCheck)) {\r\n                    document.body.classList.add(classCheck);\r\n                }\r\n            }\r\n        }\r\n    });\r\n</script>","<template>\r\n    <aside :class=\"['menu',(props.fixedPosition!==undefined ? `is-fixed-menu is-fixed-menu-${props.fixedPosition}`:'')]\">\r\n        <slot/>\r\n    </aside>\r\n</template>\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to supply a side menu to your screen\r\n * \r\n * @displayName Menu\r\n * @link https://bulma.io/documentation/components/menu/\r\n */\r\nimport { FixedMenuPositions } from '../../../enums';\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * Defines both if the menu is fixed and what position it is fixed in\r\n         */\r\n        fixedPosition?:FixedMenuPositions\r\n    }>();\r\n</script>","<template>\r\n    <p class=\"menu-label\">\r\n        {{ props.message }}\r\n        <!--\r\n            @slot Content of the menu label if something beyond a string is desired\r\n        -->\r\n        <slot/>\r\n    </p>\r\n</template>\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to supply a menu label entry into the Menu component\r\n * \r\n * @displayName MenuLabel\r\n * @link https://bulma.io/documentation/components/menu/\r\n */\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The content of the Menu Label\r\n         */\r\n        message?:string\r\n    }>(),{\r\n        message:''\r\n    });\r\n</script>","<template>\r\n    <li>\r\n        <a :href=\"props.href\" @click=\"processClick()\" :class=\"(props.active?'is-active':'')\">\r\n            <span v-if=\"props.icon!==undefined && props.icon!==null\" class=\"icon-text\">\r\n                <span class=\"icon\">\r\n                    <Icon :icon=\"props.icon\"/>\r\n                </span>\r\n                <span>\r\n                    {{ props.title }}\r\n                </span>\r\n            </span>\r\n            <span v-else>\r\n                {{ props.title }}\r\n            </span>\r\n            <!--\r\n                @slot Content of the menu entry if something beyond a title and icon is desired\r\n            -->\r\n            <slot/>\r\n        </a>\r\n        <!--\r\n            @slot Used to contain all child menu entries, if desired\r\n        -->\r\n        <slot name=\"children\"/>\r\n    </li>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to supply menu entries into the Menu component\r\n * \r\n * @displayName MenuEntry\r\n * @link https://bulma.io/documentation/components/menu/\r\n */\r\n    import Icon from '../icon.vue';\r\n    import { MenuItem } from '../typeDefinitions';\r\n\r\n    const props = defineProps<MenuItem>();\r\n    \r\n    const processClick = ():void=>{\r\n        if (props.onClick!==undefined){\r\n            props.onClick();\r\n        }\r\n    }\r\n</script>","<template>\r\n    <ul class=\"menu-list\">\r\n        <Promised :promise=\"props.items\" v-if=\"props.items!==null\">\r\n            <template v-slot=\"{response}\">\r\n                <li v-for=\"item in (response as ParentMenuItem[])\">\r\n                    <MenuEntry v-bind=\"item\"/>\r\n                    <menu-list v-if=\"item.childItems!==undefined\" :items=\"item.childItems\"/>\r\n                </li>\r\n            </template>\r\n            <template #pending>\r\n                <li>\r\n                    <Progress :size=\"Sizes.small\"/>\r\n                </li>\r\n            </template>\r\n        </Promised>\r\n        <!--\r\n            @slot Used to add custom content to a MenuList\r\n        -->\r\n        <slot/>\r\n    </ul>\r\n</template>\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is used to supply a list of Menu Items to a Menu\r\n * \r\n * @displayName MenuList\r\n * @link https://bulma.io/documentation/components/menu/\r\n */\r\n    import { ParentMenuItem } from '../typeDefinitions';\r\n    import { Sizes } from '../../../enums';\r\n    import Progress from '../progress.vue';\r\n    import Promised from '../Promised.vue';\r\n    import MenuEntry from './menu-entry.vue';\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The Menu items for this list of menu entries\r\n         */\r\n        items:Promise<ParentMenuItem[]>|ParentMenuItem[]|null\r\n    }>();\r\n\r\n    const processClick = (item:ParentMenuItem):void=>{\r\n        if (item.onClick!==undefined){\r\n            item.onClick();\r\n        }\r\n    }\r\n</script>","<template>\r\n    <span :class=\"['badge',`is-${props.position}`,(props.type===undefined?'':`is-${props.type}`)]\">\r\n        {{ props.text }}\r\n        <!--\r\n            @slot Content of the badge if something beyond a text string is desired\r\n        -->\r\n        <slot/>\r\n    </span>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * @displayName Badge\r\n * @link https://github.com/CreativeBulma/bulma-badge\r\n */\r\n    import { BadgePositions,ColorTypes } from '../../enums';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n       * The position of the badge relative to it's parent.\r\n       */\r\n        position?:BadgePositions,\r\n        /**\r\n       * The text contained within the bade\r\n       */\r\n        text?:string,\r\n        /**\r\n       * The ColorType the badge should be\r\n       */\r\n        type?:ColorTypes\r\n    }>(),{\r\n        position:BadgePositions.topRight\r\n    });\r\n</script>","<template>\r\n    <component :is=\"props.is\" \r\n        :class=\"[\r\n            (props.has_arrow?'has-tooltop-arrow':''),\r\n            (props.position?`has-tooltip-${props.position}`:''),\r\n            (props.multiline?'has-tooltip-multiline':''),\r\n            (props.type?`has-tooltip-${props.type}`:''),\r\n            (props.text_align?`has-tooltip-text-${props.text_align}`:''),\r\n            (props.always_active?'has-tooltip-active':'')\r\n        ]\"\r\n        :data-tooltip=\"text\">\r\n        <!--\r\n            @slot the content to hold within the tool tipped item\r\n        -->\r\n        <slot/>\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to allow for a mouse over tooltip to appear on a given object\r\n * \r\n * @displayName Tooltip\r\n * @link https://github.com/CreativeBulma/bulma-tooltip/\r\n */\r\n    import {MaybeRef} from 'vue';\r\n    import { NoticeTypes, ToolTipPositions, ToolTipTextAlignments } from '../../enums';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The content of the tool tip\r\n         */\r\n        text:MaybeRef<string>,\r\n        /**\r\n         * The element that this component is (div,a...etc)\r\n         */\r\n        is:any,\r\n        /**\r\n         * Indicates if the tool tip will have an arrow\r\n         */\r\n        has_arrow?:boolean,\r\n        /**\r\n         * Specifies the position that the tool tip will appear\r\n         */\r\n        position?:ToolTipPositions,\r\n        /**\r\n         * Indicates if the content of the tooltip has multiple lines\r\n         */\r\n        multiline?:boolean,\r\n        /**\r\n         * Set the color type of the tool tip\r\n         */\r\n        type?:NoticeTypes,\r\n        /**\r\n         * Inidicates if the tool tip should always display\r\n         */\r\n        always_active?:boolean,\r\n        /**\r\n         * Set the alignment of the text in the tool tip\r\n         */\r\n        text_align?:ToolTipTextAlignments\r\n    }>(),{\r\n        has_arrow:false,\r\n        position:ToolTipPositions.left,\r\n        multiline:false,\r\n        always_active:false,\r\n        text_align:ToolTipTextAlignments.left\r\n    });\r\n</script>","<template>\r\n    <span :class=\"Classes\">\r\n        <!--\r\n            @slot used when something more than text is desired\r\n        -->\r\n        <slot>\r\n            {{ props.text }}\r\n        </slot>\r\n    </span>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a tag component\r\n * \r\n * @displayName Tag\r\n * @link https://bulma.io/documentation/elements/tag/\r\n */\r\n    import { ColorTypes,Sizes } from '../../enums';\r\n    import {computed} from 'vue';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The color of the tag\r\n         */\r\n        type?:ColorTypes,\r\n        /**\r\n         * Inidicates to use the light version of the specified color\r\n         */\r\n        light?:boolean,\r\n        /**\r\n         * Inidicates if the tag should be rounded\r\n         */\r\n        rounded?:boolean,\r\n        /**\r\n         * The size of the tag to use\r\n         */\r\n        size?:Sizes,\r\n        /**\r\n         * Inidicates if this tag is a delete tag\r\n         */\r\n        is_delete?:boolean,\r\n        /**\r\n         * The string content of the tag\r\n         */\r\n        text?:string\r\n    }>(),{\r\n        type:ColorTypes.primary,\r\n        light:false,\r\n        rounded:false,\r\n        size:Sizes.normal,\r\n        is_delete:false\r\n    });\r\n    \r\n    const Classes = computed<string[]>(()=>{\r\n        let result = ['tag',`is-${props.type}`,`is-${props.size}`];\r\n        if (props.light){result.push('is-light');}\r\n        if(props.rounded){result.push('is-rounded');}\r\n        if (props.is_delete){result.push('is-delete');}\r\n        return result;\r\n    });\r\n</script>","<template>\r\n    <span :class=\"['tags',(props.size===null?'':'are-'+props.size),(props.addons?'has-addons':'')]\">\r\n        <!--\r\n            @slot Houses the tags to contain within the tags collection\r\n        -->\r\n        <slot />\r\n    </span>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a Tags control to house multiple tags\r\n * \r\n * @displayName Tags\r\n * @link https://bulma.io/documentation/elements/tag/\r\n */\r\n    import { Sizes } from '../../enums';\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The size to override for all the tags\r\n         */\r\n        size?:Sizes,\r\n        /**\r\n         * Used to set the has-addons class\r\n         */\r\n        addons?:boolean\r\n    }>();\r\n</script>","<template>\r\n    <component ref=\"handle\" :is=\"props.tag\" :draggable=\"true\" @dragstart=\"Start\" @dragend=\"Stop\" :class=\"Classes\">\r\n        <!--\r\n            @slot The content of the draggable item\r\n        -->\r\n        <slot/>\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,computed,onMounted } from 'vue';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create a draggable item that can be used with a drop zone for drag and drop interfaces\r\n * \r\n * @displayName DraggableItem\r\n */\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the dragging of this item has started\r\n         */\r\n        started:[],\r\n        /**\r\n         * Emitted when the dragging of this item has stopped\r\n         */\r\n        stopped:[]\r\n    }>();\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The data transfer when this item is dragged\r\n         */\r\n        copy_data?:any|null,\r\n        /**\r\n         * Indicates if dragging is currently disabled\r\n         */\r\n        disabled?:boolean,\r\n        /**\r\n         * The tag to use for wrapping this dragging item\r\n         */\r\n        tag?:string,\r\n        /**\r\n         * A querySelector search specify the dragging handle\r\n         */\r\n        handle_search:string|null\r\n    }>(),{\r\n        copy_data:null,\r\n        disabled:false,\r\n        tag:'div'\r\n    });\r\n\r\n    const isDragging = ref<boolean>(false);\r\n    const handleDisabled = ref<boolean>(false);\r\n    const handle = ref<any|null>(null);\r\n\r\n    const Disabled = computed<boolean>(() => (props.disabled??false) || (handleDisabled.value && props.handle_search!==null));\r\n    const Classes = computed<string[]>(()=>{\r\n        let result = [];\r\n        if (!Disabled){result.push('has-cursor');}\r\n        if (isDragging.value){result.push('is-move');}\r\n        else{result.push('is-grab');}\r\n        return result;\r\n    })\r\n\r\n    const Start = (event:any) : boolean => {\r\n        if (Disabled.value) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData('value', JSON.stringify(props.copy_data));\r\n        isDragging.value = true;\r\n        emit('started');\r\n        return true;\r\n    }\r\n\r\n    const Stop = () :void => {\r\n        isDragging.value = false;\r\n        handleDisabled.value = true;\r\n        emit('stopped');\r\n    };\r\n\r\n    onMounted(() => {\r\n        if (props.handle_search) {\r\n            let clickHandle = (handle.value as HTMLElement).querySelector(props.handle_search);\r\n            if (clickHandle!==null) {\r\n                handleDisabled.value = true;\r\n                (clickHandle as HTMLElement).addEventListener('mousedown',() => handleDisabled.value = false);\r\n                (clickHandle as HTMLElement).addEventListener('mouseup',() => handleDisabled.value = true);\r\n            }\r\n        }\r\n    });\r\n</script>","<template>\r\n    <component ref=\"handle\" :is=\"props.tag\" :class=\"{'is-bordered':isOver}\" @dragenter=\"Enter\" @dragleave=\"Leave\" @drop=\"Drop\" @dragover=\"Moved\">\r\n        <!--\r\n            @slot The area contained within the drop zone to be used however is seen fit\r\n        -->\r\n        <slot />\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,computed } from 'vue';\r\n    import {DropZoneQuadrants} from '../../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a Drop Zone for a draggable item to be dropped within\r\n * \r\n * @displayName Dropzone\r\n */\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * A callback designed to indicate of a particular item being dragged into this drop zone can be dropped here\r\n         * \r\n         * @param data the data supplied as copy_data from the DraggableItem\r\n         */\r\n        is_valid_child?:(data:any)=>boolean,\r\n        /**\r\n         * The html tag to render this drop zone as\r\n         */\r\n        tag?:string\r\n    }>(),{\r\n        tag:'div',\r\n        is_valid_child:(data:any)=>true\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when a valid item is dropped into this zone.  \r\n         * Supplies both the copy_data as well as a position to indicate the quadrant it was dropped in.\r\n         */\r\n        itemAdded:[data:any,position:DropZoneQuadrants],\r\n        /**\r\n         * Emitted when a valid item enters into this zone.  \r\n         * Supplies a position to indicate the quadrant it entered in.\r\n         */\r\n        itemEntered:[quadrant:DropZoneQuadrants],\r\n        /**\r\n         * Emitted when a valid item exits from this zone.  \r\n         * Supplies a position to indicate the quadrant it exited from.\r\n         */\r\n        itemExited:[quadrant:DropZoneQuadrants],\r\n        /**\r\n         * Emitted when a valid item moves within the zone\r\n         * Supplies a position to indicate the quadrant it moved into.\r\n         */\r\n        itemMoved:[quadrant:DropZoneQuadrants]\r\n    }>();\r\n\r\n    const isOver = ref<boolean>(false);\r\n    const lastQuadrant = ref<DropZoneQuadrants|null>(null);\r\n    const handle = ref<any>(null);\r\n\r\n    const Tag = computed(() => props.tag ?? 'div');\r\n\r\n    const getQuadrant = (event:any):DropZoneQuadrants=> {\r\n        const bounds = handle.value.getBoundingClientRect();\r\n        const mid = {\r\n            x: bounds.x + (bounds.width / 2),\r\n            y: bounds.y + (bounds.height / 2)\r\n        };\r\n        let ret = DropZoneQuadrants.center;\r\n        if (event.x < mid.x) {\r\n            if (event.y < mid.y)\r\n                ret = DropZoneQuadrants.topLeft;\r\n            else\r\n                ret = DropZoneQuadrants.bottomLeft;\r\n        } else {\r\n            if (event.y < mid.y)\r\n                ret = DropZoneQuadrants.topRight;\r\n            else\r\n                ret = DropZoneQuadrants.bottomRight;\r\n        }\r\n        lastQuadrant.value = ret;\r\n        return lastQuadrant.value;\r\n    };\r\n\r\n    const Enter = (event:any) => {\r\n        event.preventDefault();\r\n        isOver.value = true;\r\n        emit('itemEntered', getQuadrant(event));\r\n    };\r\n\r\n    const Leave = (event:any)=> {\r\n        isOver.value = true;\r\n        emit('itemExited', getQuadrant(event));\r\n    };\r\n\r\n    const Moved = (event:any)=> {\r\n        event.preventDefault();\r\n        emit('itemMoved', getQuadrant(event));\r\n    };\r\n\r\n    const Drop = (event:any)=> {\r\n        if (props.is_valid_child) {\r\n            if (!props.is_valid_child(JSON.parse(event.dataTransfer.getData('value'))))\r\n                return false;\r\n        }\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        emit('itemAdded', JSON.parse(event.dataTransfer.getData('value')), lastQuadrant.value);\r\n        isOver.value = false;\r\n    };\r\n</script>","<template>\r\n    <component :is=\"(numbered==null||numbered==undefined||!numbered ? 'ul' : 'ol')\" :class=\"Classes\">\r\n        <slot v-if=\"Items===null\"/>\r\n        <template v-else>\r\n            <template v-for=\"item in Items\">\r\n                <li :class=\"item.classes\" v-if=\"slots[item.name]!==undefined||slots[item.name]!==null||item.icon!==undefined\" @click=\"invokeClick(item)\">\r\n                    <span class=\"icon\" v-if=\"item.icon\">\r\n                        <Icon :icon=\"item.icon\"/>\r\n                    </span>\r\n                    <!--\r\n                        @slot A slot for each list item defined.  The name is either the name supplied of item-{index}\r\n                    -->\r\n                    <slot :name=\"item.name\"/>\r\n                </li>\r\n            </template>\r\n        </template>\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, useSlots } from 'vue';\r\n    import { IListProperties } from './interfaces';\r\n    import {ListItem} from './typeDefinitions';\r\n    import Icon from '../common/icon.vue';\r\n\r\n    type definedListItem = {\r\n        name:string,\r\n        classes:string[],\r\n        icon?:string,\r\n        onClick?:()=>void\r\n    }\r\n\r\n    interface IFullListProperties extends IListProperties{\r\n        /**\r\n         * Indicates if the list should be numbered\r\n         */\r\n        numbered?:boolean,\r\n        /**\r\n         * The items to contain within the list.  If not supplied use li elements within.\r\n         */\r\n        items?:ListItem[]\r\n    }\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A stylized list\r\n * \r\n * @displayName List\r\n * @link https://github.com/chrisrhymes/bulma-block-list\r\n */\r\n    const props = defineProps<IFullListProperties>();\r\n\r\n    const slots = useSlots();\r\n\r\n    const Classes = computed<string[]>(() => {\r\n        var ret = ['block-list', 'has-radius', `is-${props.type??'primary'}`];\r\n        if (props.compact) {\r\n            ret.push('is-small');\r\n        }\r\n        if (props.outlined) {\r\n            ret.push('is-outlined');\r\n        }\r\n        if (props.highlighted) {\r\n            ret.push('is-highlighted');\r\n        }\r\n        return ret;\r\n    });\r\n    const Items = computed<definedListItem[]|null>(()=>{\r\n        if (props.items){\r\n            return props.items.map((li,index)=>{\r\n                return {\r\n                    name:li.name??`item-${index}`,\r\n                    classes:[\r\n                        (li.type?`is-${li.type}`:''),\r\n                        (li.outlined?'is-outlined':''),\r\n                        (li.highlighted?'is-highlighted':''),\r\n                        (li.icon?'has-icon':''),\r\n                        (li.onClick?'is-clickable':'')\r\n                    ],\r\n                    onClick:li.onClick,\r\n                    icon:li.icon\r\n                };\r\n            });\r\n        }\r\n        return null;\r\n    });\r\n    const invokeClick = (item:definedListItem):void => {\r\n        if (item.onClick){item.onClick();}\r\n    };\r\n</script>","<template>\r\n    <List :type=\"type\" :compact=\"compact\" :outlined=\"outlined\" :highlighted=\"highlighted\" @drop=\"itemDropped\">\r\n        <template v-for=\"item,index in sorted\">\r\n            <li v-show=\"currentIndex===index&&selectedIndex!==index&&currentQuadrant===DropZoneQuadrants.top\">\r\n                <Notification :light=\"true\">&nbsp;</Notification>\r\n            </li>\r\n            <li draggable=\"true\" @dragstart=\"dragStart(index,$event)\" @dragend=\"selectedIndex=null\" @dragover=\"itemEntered(index,$event)\" :class=\"{'has-cursor':true,'is-move':(currentIndex==index),'is-grab':(currentIndex!=index)}\">\r\n                <!--\r\n                    @slot Used to render a given item in the sort list\r\n                -->\r\n                <slot name=\"item\" :item=\"item\" :index=\"index\" />\r\n            </li>\r\n            <li v-show=\"currentIndex===index&&selectedIndex!==index&&currentQuadrant===DropZoneQuadrants.bottom\">\r\n                <Notification :light=\"true\">&nbsp;</Notification>\r\n            </li>\r\n        </template>\r\n    </List>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import List from '../layout/list.vue';\r\n    import Notification from '../common/notification.vue';\r\n    import { ref, watch,onMounted } from 'vue';\r\n    import { ColorTypes, DropZoneQuadrants } from '../../enums';\r\nimport { IListProperties } from '../layout/interfaces';\r\n\r\n    interface ISortableProperties extends IListProperties{\r\n        /**\r\n         * The items that are contained within the sortable list\r\n         */\r\n        items:any[]\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply a Sortable list that can be dragged and dropped to change the order\r\n * \r\n * @displayName Sortable\r\n */\r\n    const props = withDefaults(defineProps<ISortableProperties>(),{\r\n        type:ColorTypes.primary,\r\n        compact:false,\r\n        outlined:false,\r\n        highlighted:false\r\n    });\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the sorting changes.  Supplies the items based on their current sort.\r\n         */\r\n        sorted:[items:any[]]\r\n    }>();\r\n\r\n    const sorted = ref<any[]>([]);\r\n    const selectedIndex = ref<number>(-1);\r\n    const currentIndex = ref<number>(-1);\r\n    const currentQuadrant = ref<DropZoneQuadrants|null>(null);\r\n\r\n    watch(props.items, (oldValue,newValue) => {\r\n        sorted.value = [...newValue];\r\n    });\r\n\r\n    onMounted(() => {\r\n        if (props.items !== null) {\r\n            sorted.value = [...props.items];\r\n        }\r\n    });\r\n\r\n    const getQuadrant = (event:any):DropZoneQuadrants => {\r\n        var bounds = event.target.getBoundingClientRect();\r\n        var mid = {\r\n            x: bounds.x + (bounds.width / 2),\r\n            y: bounds.y + (bounds.height / 2)\r\n        };\r\n        let ret : DropZoneQuadrants = DropZoneQuadrants.center;\r\n        if (event.y < mid.y)\r\n            ret = DropZoneQuadrants.top;\r\n        else\r\n            ret = DropZoneQuadrants.bottom;\r\n        return ret;\r\n    };\r\n\r\n    const dragStart = (index:number, event:any) => {\r\n        event.stopPropagation();\r\n        selectedIndex.value = index;\r\n        event.dataTransfer.setData('value', null);\r\n    };\r\n\r\n    const itemEntered = (index:number, event:any)=> {\r\n        if (selectedIndex.value) {\r\n            event.stopPropagation();\r\n            if (index != selectedIndex.value) {\r\n                currentIndex.value = index;\r\n                currentQuadrant.value = getQuadrant(event);\r\n            } else {\r\n                currentIndex.value = -1;\r\n                currentQuadrant.value = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    const itemMoved = (index:number, event:any) => {\r\n        if (selectedIndex.value) {\r\n            event.stopPropagation();\r\n            if (index != selectedIndex.value) {\r\n                currentIndex.value = index;\r\n                currentQuadrant.value = getQuadrant(event);\r\n            } else {\r\n                currentIndex.value = -1;\r\n                currentQuadrant.value = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    const itemDropped = (event:any)=> {\r\n        if (selectedIndex.value) {\r\n            event.stopPropagation();\r\n            var index = currentIndex.value + (currentQuadrant.value == DropZoneQuadrants.top ? 0 : 1);\r\n            var elem = sorted.value.splice(index, 1)[0];\r\n            if (index >= selectedIndex.value)\r\n                index--;\r\n            sorted.value.splice(index, 0, elem);\r\n            currentIndex.value = -1;\r\n            currentQuadrant.value = null;\r\n            selectedIndex.value = -1;\r\n            emit('sorted', sorted.value);\r\n        }\r\n    };\r\n</script>","import { ComputedRef, Ref, computed, readonly, ref } from \"vue\";\r\nimport { TranslateMethod } from \"./typeDefinitions\";\r\n\r\nexport const HIDDEN_FIELDS_PROPERTY = \"HiddenFields\";\r\nexport const DISABLED_FIELDS_PROPERTY = \"DisabledFields\";\r\n\r\nexport interface translateFieldProps{\r\n    /**\r\n     * The translate call method used to translate a given value (field title, element name, etc) into a desired language\r\n     */\r\n    translate?:TranslateMethod;\r\n}\r\n\r\nexport interface coreFieldProps{\r\n    /**\r\n     * The name of the form element\r\n     */\r\n    name:string;\r\n    /**\r\n     * Indicates if it is currently disabled\r\n     */\r\n    disabled:boolean;\r\n};\r\n\r\nexport interface commonFieldProps extends coreFieldProps,translateFieldProps{};\r\n\r\nconst defaultTranslate : TranslateMethod = (value:string)=>value;\r\n\r\nexport const useTranslator= (props:translateFieldProps,inject: (<T>(string,T?)=> T | undefined)) : ComputedRef<TranslateMethod> => {\r\n    const Translate = inject<TranslateMethod>(\"Translate\",defaultTranslate);\r\n    const Translator = computed<TranslateMethod>(()=>props.translate??Translate);\r\n  \r\n    return Translator;\r\n};\r\n\r\nexport function useValuesList(name:string,inject: (<T>(string,T?)=> T | undefined)){\r\n    const iHiddenValues = inject<Readonly<Ref<readonly string[]>>>(HIDDEN_FIELDS_PROPERTY,readonly(ref([])));\r\n    const iDisabledValues = inject<Readonly<Ref<readonly string[]>>>(DISABLED_FIELDS_PROPERTY,readonly(ref([])));\r\n\r\n    const hiddenValues = computed<string[]>(()=>iHiddenValues.value.filter(h=>h.indexOf(`${name}.`)===0).map(h=>h.split('.')[1]));\r\n    const disabledValues = computed<string[]>(()=>iDisabledValues.value.filter(h=>h.indexOf(`${name}.`)===0).map(h=>h.split('.')[1]));\r\n\r\n    return {hiddenValues,disabledValues};\r\n}\r\n\r\nexport async function resolveListItems<T>(values: (T[]|Promise<T[]>|(()=>T[])|(()=>Promise<T[]>))) : Promise<T[]> {\r\n    let p : Promise<any>|null = null;\r\n    let tmp:any = values;\r\n    if (values instanceof Function){\r\n        tmp = (values as Function)();\r\n    }\r\n    if (tmp instanceof Promise){\r\n        p=tmp;\r\n    }else{\r\n        p=Promise.resolve(tmp);\r\n    }\r\n    let tmpResult:any  = await p as any;\r\n    let result:T[] = [];\r\n    if (tmpResult.value!==undefined){\r\n        result = tmpResult.value as T[];\r\n    }else{\r\n        result = tmpResult as T[];\r\n    }\r\n    return result;\r\n}","<template>\r\n    <div class=\"control autocomplete\" @blur=\"clear\" @click=\"focusInput\">\r\n        <div :class=\"['tagsfield','field','input','is-grouped','is-grouped-multiline',(props.disabled ? 'is-disabled' : '')]\">\r\n            <div class=\"control\" v-for=\"(value,index) in selected\" :key=\"index\">\r\n                <div class=\"tags has-addons\">\r\n                    <a class=\"tag is-link\">{{Translator(value.name)}}</a>\r\n                    <a class=\"tag is-delete\" v-if=\"!value.readonly && !props.disabled\" @click=\"removeSelected(index)\"></a>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"!props.disabled\">\r\n                <span ref=\"contentSpan\" :placeholder=\"Translator(props.title??'')\" contenteditable v-show=\"props.limit===undefined || props.limit===null || selected.length<props.limit\" :class=\"classes\" @focus=\"classes='is-focused';\" @blur=\"classes=null;\" @keydown=\"keyPress\" @paste=\"paste\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"dropdown\" v-if=\"!props.disabled\" :class=\"{'is-active':results!=null&&searchString!=null&&searchString!=''}\">\r\n            <div class=\"dropdown-menu\">\r\n                <div class=\"dropdown-content\">\r\n                    <template v-if=\"results!=null && results.length>0\">\r\n                        <a class=\"dropdown-item\" v-for=\"value in results\" @click=\"addSelected(value)\">{{Translator(value.name)}}</a>\r\n                    </template>\r\n                    <template v-else>\r\n                        <a class=\"dropdown-item\">{{NoResults}}</a>\r\n                    </template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch, ref, inject, computed} from 'vue';\r\n    import { commonFieldProps,useTranslator } from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n    import { useLanguage } from '../shared';\r\n    import translate from '../../messages/messages.js';\r\n\r\n    type AutoCompleteItem = {\r\n        /**\r\n         * A unique id for the entry\r\n         */\r\n        id:string,\r\n        /**\r\n         * The display name\r\n         */\r\n        name:string,\r\n        /**\r\n         * Indicates if it is readonly or not (can be removed)\r\n         */\r\n        readonly?:boolean\r\n    };\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        /**\r\n         * The title for the autocomplete box\r\n         */\r\n        title:string,\r\n        /**\r\n         * Indicates the maximum number of items that can be selected\r\n         */\r\n        limit?:number|null,\r\n        /**\r\n         * A url for making a query callback to when a character is entered to obtain a list of possible answers\r\n         */\r\n        callbackurl?:string,\r\n        /**\r\n         * A list of values that can be selected from \r\n         */\r\n        values?:AutoCompleteItem[],\r\n        /**\r\n         * If a custom fetch method is used, supply it here to be called instead of the standard fetch\r\n         * \r\n         * @param url the url to fetch\r\n         * @param init the fetch request\r\n         */\r\n        fetch?:(url:string,init?: RequestInit) => Promise<Response>\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * This is an autocomplete style form input that can allow for 1 or more items using either a callback or a list of data to filter through.\r\n * Only supply a callbackurl or values do not supply both\r\n * \r\n * @displayName Autocomplete\r\n * @link https://github.com/crabvk/bulma-tagsfield\r\n * @link_title Tags Field \r\n */\r\n    const Language = useLanguage(inject);\r\n\r\n    const NoResults = computed<string>(()=>translate('Form.AutoComplete.NoResults',Language));\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when a new item is selected or an item is removed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n        valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const selected = ref<AutoCompleteItem[]>([]);\r\n    const searchString = ref<string|null>(null);\r\n    const results = ref<AutoCompleteItem[]|null>(null);\r\n    const classes = ref<string|null>(null);\r\n\r\n    const contentSpan = ref(null);\r\n\r\n    watch(searchString, async (val) => {\r\n        if (val != null) {\r\n            if (val.length >= 2) {\r\n                if (props.values != undefined && props.values != null) {\r\n                    let data = [];\r\n                    for (let x = 0; x < props.values.length; x++) {\r\n                        if (props.values[x].name.toUpperCase().indexOf(val.toUpperCase()) >= 0\r\n                            || props.values[x].id.toUpperCase().indexOf(val.toUpperCase()) >= 0) {\r\n                            data.push(props.values[x]);\r\n                        }\r\n                        if (data.length == 10) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    results.value = data;\r\n                } else {\r\n                    const response = await (props.fetch??fetch)(`${props.callbackurl}?q=${encodeURIComponent(val)}`);\r\n                    let data = await response.json();\r\n                    if (data.length > 10) {\r\n                        data.splice(10, data.length - 10);\r\n                    }\r\n                    results.value = data;\r\n                }\r\n            }\r\n        } else {\r\n            results.value = null;\r\n            contentSpan.value.innerHTML = '';\r\n        }\r\n    });\r\n\r\n    const getValue = () : any|any[]|null => {\r\n        if (selected.value.length == 0)\r\n            return null;\r\n        const result = selected.value.slice();\r\n        if (props.limit != undefined && props.limit == 1) {\r\n            if (result.length > 0) {\r\n                return result[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    const setValue = async (value: AutoCompleteItem|AutoCompleteItem[]|string[]|null|string) : Promise<void> => {\r\n        if (value == null) {\r\n            if (selected.value.length > 0) {\r\n                selected.value.splice(0, selected.value.length);\r\n            }\r\n            searchString.value = null;\r\n        } else {\r\n            const vals: (AutoCompleteItem|null)[] = await Promise.all(\r\n                (Array.isArray(value) ? value : [value]).map<Promise<AutoCompleteItem>>(async (val:any)=>{\r\n                    if (val.id!==undefined && val.name!==undefined){\r\n                        return val as AutoCompleteItem;\r\n                    }else{\r\n                        if (props.values != undefined && props.values != null) {\r\n                            if (val.id!==undefined)\r\n                                return props.values.find(v=>v.id===val.id);\r\n                            else\r\n                                return props.values.find(v=>v.name.toUpperCase()===val.toUpperCase()||v.id.toUpperCase()===val);\r\n                        }else{\r\n                            const response = await (props.fetch??fetch)(`${props.callbackurl}?${(val.id === undefined ? 'q='+encodeURIComponent(val) : 'id='+encodeURIComponent(val.id))}`);\r\n                            let data = await response.json();\r\n                            if (data.length > 0) {\r\n                                if (props.disabled) {\r\n                                    data[0].readonly = true;\r\n                                }\r\n                                return data[0] as AutoCompleteItem;\r\n                            }else{\r\n                                return null;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n            selected.value = vals.filter(v=>v!==null);\r\n            if (props.limit!==undefined && props.limit!==null && selected.value.length>props.limit){\r\n                selected.value.splice(props.limit);\r\n            }\r\n            emit('valueChanged',{name:props.name,value:getValue()});\r\n        }\r\n    };\r\n    const paste = (event:any):void => {\r\n        event.preventDefault();\r\n        searchString.value = event.clipboardData.getData('text/plain');\r\n    };\r\n    const keyPress = (event:any):void => {\r\n        switch (event.key) {\r\n            case 'Backspace':\r\n                if (searchString.value != null && searchString.value.length > 0) {\r\n                    searchString.value = searchString.value.substring(0, searchString.value.length - 1);\r\n                }\r\n                break;\r\n            case 'Enter':\r\n            case 'Shift':\r\n                break;\r\n            default:\r\n                if (event.key.length == 1) {\r\n                    searchString.value = (searchString.value == null ? '' : searchString.value) + event.key;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    const clear = ():void => {\r\n        searchString.value = null;\r\n    };\r\n    const focusInput = ():void=> {\r\n        contentSpan.value.focus();\r\n    };\r\n    const addSelected = (val:AutoCompleteItem):void  => {\r\n        selected.value.push(val);\r\n        clear();\r\n        emit('valueChanged', { name: props.name, value: getValue() });\r\n    };\r\n    const removeSelected = (index:number):void => {\r\n        selected.value.splice(index, 1);\r\n        focusInput();\r\n        emit('valueChanged', { name: props.name, value: getValue() });\r\n    };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value AutoCompleteItem|AutoCompleteItem[]|string[]|null\r\n         * @returns Promise<void>\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <Button :type=\"props.sstyle\" :icon=\"props.icon\" :title=\"Translator(props.label??'')\" @click=\"emit('buttonClicked',props.name)\" :disabled=\"props.disabled\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { inject } from 'vue';\r\n    import Button from '../common/buttons/button.vue';\r\n    import { ColorTypes } from '../../enums';\r\n    import { commonFieldProps,useTranslator } from './common';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        /**\r\n         * The label for the button\r\n         */\r\n        label?:string;\r\n        /**\r\n         * The color style to use\r\n         */\r\n        sstyle?:ColorTypes;\r\n        /**\r\n         * An icon if one is desired\r\n         */\r\n        icon?:string;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A generic form button\r\n * \r\n * @displayName Button\r\n * @link https://bulma.io/documentation/elements/button/\r\n */\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the button is clicked\r\n         * \r\n         * @param name string\r\n         */\r\n         buttonClicked:[name:string]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n</script>","<template>\r\n    <div>\r\n        <Promised :promise=\"Values\">\r\n            <template v-slot=\"{response}\">\r\n                <template v-for=\"value in (response as ListItemValue[])\" v-if=\"response!==null\">\r\n                    <label class=\"checkbox is-block\" v-show=\"!hiddenValues.some(v=>v===value.value.toString())\">\r\n                        <input type=\"checkbox\" class=\"checkbox\" :value=\"value.value\" v-model=\"checks\" :disabled=\"props.disabled||disabledValues.some(v=>v===value.value.toString())\" />\r\n                        {{Translator(value.label)}}\r\n                    </label>\r\n                </template>\r\n            </template>\r\n            <template #rejected>\r\n                <Notification :type=\"NoticeTypes.danger\" :message=\"Error\"/>\r\n            </template>\r\n        </Promised>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, computed, watch, inject } from 'vue';\r\n    import Promised from '../common/Promised.vue';\r\n    import {ListItemValue, ValueChangedEvent } from './typeDefinitions';\r\n    import { commonFieldProps,resolveListItems,useTranslator, useValuesList } from './common';\r\n    import { Notification} from '../common/';\r\n    import {NoticeTypes} from '../../enums';\r\n    import { useLanguage } from '../shared';\r\n    import translate from '../../messages/messages.js';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        /**\r\n         * The available values to create the list of checkboxes from\r\n         */\r\n        values:ListItemValue[]|Promise<ListItemValue[]>|(()=>ListItemValue[])|(()=>Promise<ListItemValue[]>)|null;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A list of checkboxes that are related in some way and therefore grouped together\r\n * \r\n * @displayName CheckboxGroup\r\n * @link https://bulma.io/documentation/form/checkbox/\r\n */\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Language = useLanguage(inject);\r\n    const Error = computed<string>(()=>translate('Form.Error',Language));\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when a checkbox is either checked or unchecked\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n        valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const checks = ref<any[]>([]);\r\n    const locked = ref<boolean>(false);\r\n    \r\n    const Values = computed<Promise<ListItemValue[]>>(async () => {\r\n        if (props.values === null) {\r\n            return [];\r\n        } else {\r\n            let result:ListItemValue[] = await resolveListItems<ListItemValue>(props.values);\r\n            let tchecks:any[] = result.filter((item)=>item.selected).map((item):any=>item.value);\r\n            if (checks.value === null || checks.value.length == 0) {\r\n                checks.value = (tchecks.length>0 ? [...tchecks] : []);\r\n            } else {\r\n                tchecks = checks.value;\r\n                result = result.map((item:ListItemValue):ListItemValue=>{\r\n                    return {\r\n                        label:item.label,\r\n                        value:item.value,\r\n                        selected:tchecks.some((check)=>check===item.value)\r\n                    };\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n\r\n    watch(checks, (val) => {\r\n        emit('valueChanged', { name: props.name, value: getValue() });\r\n    });\r\n\r\n    const getValue = ():any[]|null => {\r\n        return (checks.value.length == 0 ? null : checks.value);\r\n    };\r\n    const setValue = (value:any[]|null):void => {\r\n        locked.value = true;\r\n        checks.value.splice(0);\r\n        if (value !== null) {\r\n            checks.value = [...value];\r\n        }\r\n        locked.value = false;\r\n        emit('valueChanged', { name: props.name, value: getValue() });\r\n    };\r\n    \r\n    const {hiddenValues,disabledValues} = useValuesList(props.name,inject);\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value any[]|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <label class=\"checkbox\">\r\n        <input type=\"checkbox\" class=\"checkbox\" :name=\"props.name\" :disabled=\"props.disabled\" v-model=\"value\"/>\r\n        {{Label}}\r\n        <span class=\"help is-danger\" v-if=\"props.required\">*</span>\r\n    </label>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch,computed, inject} from 'vue';\r\n    import { commonFieldProps,useTranslator} from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        /**\r\n         * The label for the checkbox\r\n         */\r\n        label:string;\r\n        /**\r\n         * Indicates if the checkbox is required\r\n         */\r\n        required?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A checkbox used in a form\r\n * \r\n * @displayName Checkbox\r\n * @link https://bulma.io/documentation/form/checkbox/\r\n */\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        required:false,\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the checkbox is either checked or unchecked\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const Label = computed<string>(() => Translator.value(props.label));\r\n\r\n    const value = ref<boolean>(false);\r\n\r\n    watch(value, (val) => emit('valueChanged', { name: props.name, value: val }));\r\n\r\n    const getValue = () => { return value.value; };\r\n    const setValue = (val:boolean)=> { value.value = val; };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value boolean\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>.ts","import { ComputedRef } from 'vue';\r\nimport translate from '../../messages/messages.js';\r\n\r\nexport const addDays = (date:Date,days:number) : Date => {\r\n    let result = new Date(date);\r\n    result.setDate(date.getDate() + days);\r\n    return result;\r\n};\r\nexport const addHours = (date:Date,hours:number):Date => {\r\n    let result = new Date(date);\r\n    result.setHours(result.getHours() + hours, result.getMinutes(), result.getSeconds(), result.getMilliseconds());\r\n    return result;\r\n};\r\nexport const daysBetween = (start:Date,end:Date):number => {\r\n    var one = new Date(start.getFullYear(), start.getMonth(), start.getDate());\r\n    var two = new Date(end.getFullYear(), end.getMonth(), end.getDate());\r\n    var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n    var millisBetween = two.getTime() - one.getTime();\r\n    var days = millisBetween / millisecondsPerDay;\r\n    return Math.abs(Math.floor(days));\r\n};\r\nexport const canParse = (value:string):boolean => {\r\n    try {\r\n        return !isNaN(Date.parse(value));\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n};\r\nexport const getWeekOfMonth = (date:Date):number => {\r\n    return Math.floor((date.getDate() + new Date(date.getFullYear(), date.getMonth(), 1).getDay()) / 7);\r\n};\r\n\r\nexport const padLeft = (value:string,char:string,length:number):string=>{\r\n    let result=value;\r\n    while(result.length<length)\r\n        result = char+result;\r\n    return result;\r\n};\r\n\r\nconst processFormat = (curCode:string,language:ComputedRef<string>,date:Date):string=>{\r\n    let result:string = '';\r\n    switch (curCode) {\r\n        case 'd':\r\n        case 'dd':\r\n            result += `${padLeft(date.getDate().toString(),'0',curCode.length)}`;\r\n            break;\r\n        case 'ddd':\r\n        case 'dddd':\r\n            let name:string ='';\r\n            switch (date.getDay()) {\r\n                case 0:\r\n                    name = 'Sunday';\r\n                    break;\r\n                case 1:\r\n                    name= 'Monday';\r\n                    break;\r\n                case 2:\r\n                    name='Tuesday';\r\n                    break;\r\n                case 3:\r\n                    name='Wednesday';\r\n                    break;\r\n                case 4:\r\n                    name='Thursday';\r\n                    break;\r\n                case 5:\r\n                    name='Friday';\r\n                    break;\r\n                case 6:\r\n                    name='Saturday';\r\n                    break;\r\n            }\r\n            result+=`${translate('Date.Weekdays.'+(curCode.length > 3 ? name : name.substring(0,3)),language)}`;\r\n            break;\r\n        case 'f':\r\n        case 'ff':\r\n        case 'fff':\r\n            result += `${padLeft(date.getMilliseconds().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'F':\r\n        case 'FF':\r\n        case 'FFF':\r\n            result += `${(date.getMilliseconds() == 0 ? '' : padLeft(date.getMilliseconds().toString(),'0', curCode.length))}`;\r\n            break;\r\n        case 'g':\r\n        case 'gg':\r\n            result += 'A.D.';\r\n            break;\r\n        case 'h':\r\n        case 'hh':\r\n            result += `${padLeft((date.getHours() > 12 ? date.getHours() - 12 : (date.getHours() == 0 ? 12 : date.getHours())).toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'H':\r\n        case 'HH':\r\n            result += `${padLeft(date.getHours().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'K':\r\n        case 'z':\r\n        case 'zz':\r\n        case 'zzz':\r\n            let tzo:number = date.getTimezoneOffset()*-1;\r\n            let hours:number = parseInt((tzo / 60).toFixed(0));\r\n            let minutes:number = tzo - (Math.abs(hours) * 60);\r\n            switch (curCode) {\r\n                case 'K':\r\n                case 'zzz':\r\n                    result += `${(hours < 0 ? '-' : '+')}${padLeft(Math.abs(hours).toString(),'0', 2) + ':' + padLeft(Math.abs(minutes).toString(),'0', 2)}`;\r\n                    break;\r\n                case 'z':\r\n                case 'zz':\r\n                    result += `${(hours < 0 ? '-' : '+')}${padLeft(Math.abs(hours).toString(),'0', curCode.length)}`;\r\n                    break;\r\n            }\r\n            break;\r\n        case 'm':\r\n        case 'mm':\r\n            result += `${padLeft(date.getMinutes().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'M':\r\n        case 'MM':\r\n            result += `${padLeft((date.getMonth() + 1).toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'MMM':\r\n        case 'MMMM':\r\n            let monthName:string = '';\r\n            switch (date.getMonth()) {\r\n                case 0:\r\n                    monthName = 'January';\r\n                    break;\r\n                case 1:\r\n                    monthName = 'February';\r\n                    break;\r\n                case 2:\r\n                    monthName = 'March';\r\n                    break;\r\n                case 3:\r\n                    monthName = 'April';\r\n                    break;\r\n                case 4:\r\n                    monthName = 'May';\r\n                    break;\r\n                case 5:\r\n                    monthName = 'June';\r\n                    break;\r\n                case 6:\r\n                    monthName = 'July';\r\n                    break;\r\n                case 7:\r\n                    monthName = 'August';\r\n                    break;\r\n                case 8:\r\n                    monthName = 'September';\r\n                    break;\r\n                case 9:\r\n                    monthName = 'October';\r\n                    break;\r\n                case 10:\r\n                    monthName = 'November';\r\n                    break;\r\n                case 11:\r\n                    monthName = 'December';\r\n                    break;\r\n            }\r\n            result+=`${translate('Date.Months.'+(curCode.length>3 ? monthName : monthName.substring(0,3)),language)}`;\r\n            break;\r\n        case 's':\r\n        case 'ss':\r\n            result += `${padLeft(date.getSeconds().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 't':\r\n        case 'tt':\r\n            if (date.getHours() >= 12)\r\n                result += `${(curCode.length == 1 ? 'P' : 'PM')}`;\r\n            else\r\n                result += `${(curCode.length == 1 ? 'A' : 'AM')}`;\r\n            break;\r\n        case 'y':\r\n        case 'yy':\r\n            var years = date.getFullYear().toString();\r\n            while (years.length > 2) {\r\n                years = years.substring(1);\r\n            }\r\n            result += `${padLeft(years.toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'yyy':\r\n        case 'yyyy':\r\n        case 'yyyyy':\r\n            result += `${padLeft(date.getFullYear().toString(),'0', curCode.length)}`;\r\n            break;\r\n        default:\r\n            result += `[UNKOWN FORMAT ${curCode}]`;\r\n            break;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const format = (date:Date,language:ComputedRef<string>,format?:string):string=> {\r\n    format = format??'ddd MMM dd yyyy HH:mm:ss G\\\\MTzz00';\r\n    let result:string = '';\r\n    let curCode:string = '';\r\n    for (var x = 0; x < format.length; x++) {\r\n        switch (format.charAt(x)) {\r\n            case '\\\\':\r\n                if (curCode != '') {\r\n                    result += processFormat(curCode,language, date);\r\n                    curCode = '';\r\n                }\r\n                result += format.charAt(x + 1);\r\n                x++;\r\n                break;\r\n            case 'd':\r\n            case 'f':\r\n            case 'F':\r\n            case 'g':\r\n            case 'h':\r\n            case 'H':\r\n            case 'K':\r\n            case 'm':\r\n            case 'M':\r\n            case 's':\r\n            case 't':\r\n            case 'y':\r\n            case 'z':\r\n                if (curCode != '') {\r\n                    if (curCode.charAt(0) != format.charAt(x)) {\r\n                        result += processFormat(curCode,language, date);\r\n                        curCode = '';\r\n                    } else {\r\n                        curCode += format.charAt(x);\r\n                    }\r\n                } else {\r\n                    curCode += format.charAt(x);\r\n                }\r\n                break;\r\n            default:\r\n                if (curCode != '') {\r\n                    result += processFormat(curCode,language, date);\r\n                    curCode = '';\r\n                }\r\n                result += format.charAt(x);\r\n                break;\r\n        }\r\n    }\r\n    if (curCode != '') {\r\n        result += processFormat(curCode,language, date);\r\n        curCode = '';\r\n    }\r\n    return result;\r\n};","<template>\r\n    <div class=\"control\">\r\n        <input class=\"input is-time\" :name=\"props.name\" :id=\"props.name\" type=\"time\" v-model=\"value\" :disabled=\"props.disabled\" :style=\"styles\">\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch, computed } from 'vue';\r\n    import { coreFieldProps } from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n\r\n    const regTime = RegExp('^(\\\\d{2}):(\\\\d{2}) (AM|PM)$');\r\n    const reg24Time = RegExp('^(\\\\d{2}):(\\\\d{2}):\\\\d{2}$');\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A time input for the form\r\n * \r\n * @displayName Time\r\n */\r\n    const props = defineProps<coreFieldProps>();\r\n        const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    const styles = computed(() => {\r\n        if (value.value == null || value.value == '') {\r\n            return null;\r\n        } else {\r\n            var minute = Number(value.value.substring(3, 5));\r\n            var hour = Number(value.value.substring(0, 2)) % 12 + (minute / 60);\r\n            return {\r\n                backgroundImage: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><circle cx='20' cy='20' r='18.5' fill='none' stroke='%23222' stroke-width='3' /><path d='M20,4 20,8 M4,20 8,20 M36,20 32,20 M20,36 20,32' stroke='%23bbb' stroke-width='1' /><circle cx='20' cy='20' r='2' fill='%23222' stroke='%23222' stroke-width='2' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,4 20.5,4 21.5,24.5 Z' fill='%23222' style='transform:rotate(${360 * minute / 60}deg); transform-origin: 50% 50%;' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,8.5 20.5,8.5 21.5,24.5 Z' style='transform:rotate(${360 * hour / 12}deg); transform-origin: 50% 50%;' /></svg>\")`\r\n            };\r\n        }\r\n    });\r\n\r\n    watch(value, (val) => { emit('valueChanged', { name: props.name, value: val }) });\r\n\r\n    const getValue = ():string|null=> { return value.value; };\r\n    const setValue = (val:string|null):void=> {\r\n        if (val != null) {\r\n            if (regTime.test(val)) {\r\n                var tmp = regTime.exec(val);\r\n                val = (tmp[3] == \"AM\" ? tmp[1] : (parseInt(tmp[1]) + 12).toFixed(0)) + ':' + tmp[2] + ':00';\r\n            }\r\n        }\r\n        value.value = val;\r\n    };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value string|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>\r\n\r\n<style>\r\n.input.is-time {\r\n    background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><circle cx='20' cy='20' r='18.5' fill='none' stroke='%23222' stroke-width='3' /><path d='M20,4 20,8 M4,20 8,20 M36,20 32,20 M20,36 20,32' stroke='%23bbb' stroke-width='1' /><circle cx='20' cy='20' r='2' fill='%23222' stroke='%23222' stroke-width='2' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,4 20.5,4 21.5,24.5 Z' fill='%23222' style='transform:rotate(120deg); transform-origin: 50% 50%;' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,8.5 20.5,8.5 21.5,24.5 Z' style='transform:rotate(20deg); transform-origin: 50% 50%;' /></svg>\");\r\n    background-position: 1px 1px;\r\n    background-repeat: no-repeat;\r\n    background-size: 32px 32px;\r\n    color: #222;\r\n    transition: backgroundImage 0.25s;\r\n    padding-left: 40px;\r\n    width: 140px;\r\n}\r\n</style>./typeDefinitions","<template>\r\n    <div>\r\n        <div class=\"control has-icons-left has-icons-right\">\r\n            <input class=\"input is-expanded\" :name=\"props.name\" :id=\"props.name\" type=\"text\" v-model=\"value\" :placeholder=\"'DD-MM-YYYY'+(props.includeTime ? ' HH:mm' : '')\" :disabled=\"props.disabled\">\r\n            <span class=\"icon is-small is-left is-clickable\" @click=\"calendarClicked\">\r\n                <Icon icon=\"calendar-alt\"/>\r\n            </span>\r\n            <span class=\"icon is-small is-right is-clickable\" @click=\"cancelClicked\">\r\n                <Icon icon=\"window-close\"/>\r\n            </span>\r\n        </div>\r\n        <div class=\"modal\" :class=\"{'is-active':showInterface}\">\r\n            <div class=\"modal-background\"></div>\r\n            <div class=\"modal-content\">\r\n                <div class=\"panel is-primary is-dateselect\">\r\n                    <div class=\"panel-heading\">\r\n                        <div class=\"columns card-header-title\">\r\n                            <div class=\"column\"><icon icon=\"arrow-circle-left\" @click=\"MoveMonth(-1)\"/></div>\r\n                            <div class=\"column has-text-centered\">{{MonthName}} {{calendar.Year}}</div>\r\n                            <div class=\"column has-text-right\"><icon icon=\"arrow-circle-right\" @click=\"MoveMonth(1)\"/></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"panel-block\">\r\n                        <table class=\"table is-striped has-text-centered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{Messages.Sun}}</th>\r\n                                    <th>{{Messages.Mon}}</th>\r\n                                    <th>{{Messages.Tue}}</th>\r\n                                    <th>{{Messages.Wed}}</th>\r\n                                    <th>{{Messages.Thu}}</th>\r\n                                    <th>{{Messages.Fri}}</th>\r\n                                    <th>{{Messages.Sat}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"week in Weeks\">\r\n                                    <td v-for=\"day in week\" :class=\"['is-unselectable',(day.Disabled ? 'has-text-primary-dark has-background-primary-light' : 'is-clickable'),(day.isToday ? 'has-background-primary-dark' : ''),(day.isSelected ? 'has-background-success-dark' : '')]\" @click=\"selectDate(day)\">\r\n                                        {{day.Number}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot v-if=\"props.includeTime\">\r\n                                <tr>\r\n                                    <td colspan=\"100%\" class=\"has-text-centered\">\r\n                                        <Time :ref=\"time\" :name=\"`${props.name}-time`\" :disabled=\"props.disabled\" @valueChanged=\"processTimeChange\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"panel-block\">\r\n                        <ButtonOkay addonclass=\"card-footer-item\" :disabled=\"!isValid\" @click=\"showInterface=false\"/>\r\n                        <ButtonCancel addonclass=\"card-footer-item\" @click=\"cancel\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {addDays,format,padLeft} from './dates';\r\n    import { ref, reactive, watch, readonly,computed,inject } from 'vue';\r\n    import { Icon, ButtonOkay, ButtonCancel } from '../common/';\r\n    import Time from './time.vue';\r\n    import translate from '../../messages/messages.js';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n    import { coreFieldProps } from './common';\r\n    import { useLanguage } from '../shared';\r\n\r\n    const regDate = RegExp('^(\\\\d{2})-(\\\\d{2})-(\\\\d{4})$');\r\n    const regDateTime = RegExp('^(\\\\d{2})-(\\\\d{2})-(\\\\d{4}) (\\\\d{2}):(\\\\d{2})$');\r\n\r\n    type CalendarDay = {\r\n        Number:number,\r\n        Disabled: boolean,\r\n        isToday: boolean,\r\n        isSelected:boolean\r\n    };\r\n\r\n    interface fieldProps extends coreFieldProps {\r\n        /**\r\n         * Label to use\r\n         */\r\n        label:string;\r\n        /**\r\n         * Indicates if this is for a date and time or just a date\r\n         */\r\n        includeTime?:boolean;\r\n    }\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A date input used in a form\r\n * \r\n * @displayName Date\r\n */\r\n    const time = ref(null);\r\n\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value has changed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const showInterface = ref<boolean>(false);\r\n    const value = ref<string|null>(null);\r\n    const preValue = ref<string|null>(null);\r\n    const calendar = reactive({\r\n        Month: new Date().getMonth(),\r\n        Year: new Date().getFullYear(),\r\n        Today: new Date().getDay()\r\n    });\r\n\r\n    const Language = useLanguage(inject);\r\n\r\n    const Messages = readonly({\r\n        Sun: computed(()=>(translate('Date.Weekdays.Sun',Language))),\r\n        Mon: computed(()=>(translate('Date.Weekdays.Mon',Language))),\r\n        Tue: computed(()=>(translate('Date.Weekdays.Tue',Language))),\r\n        Wed: computed(()=>(translate('Date.Weekdays.Wed',Language))),\r\n        Thu: computed(()=>(translate('Date.Weekdays.Thu',Language))),\r\n        Fri: computed(()=>(translate('Date.Weekdays.Fri',Language))),\r\n        Sat: computed(()=>(translate('Date.Weekdays.Sat',Language))),\r\n    });\r\n\r\n    const isValid = computed<boolean>(() => {\r\n        return value.value!==null \r\n            && (props.includeTime ? regDateTime : regDate).test(value.value);\r\n    });\r\n\r\n    const getValue= ():Date|null=> {\r\n        if (value.value == null || value.value == '') {\r\n            return null;\r\n        } else {\r\n            if (!regDateTime.test(value.value) && props.includeTime) {\r\n                return null;\r\n            } else if (!props.includeTime && !regDate.test(value.value)) {\r\n                return null;\r\n            } else if (regDate.test(value.value) && props.includeTime) {\r\n                return null;\r\n            }\r\n            let tmp = (props.includeTime ? regDateTime.exec(value.value) : regDate.exec(value.value));\r\n            return new Date(parseInt(tmp[3]), parseInt(tmp[2]) - 1, parseInt(tmp[1]),\r\n                (props.includeTime ? parseInt(tmp[4]) : 0),\r\n                (props.includeTime ? parseInt(tmp[5]) : 0), 0, 0);\r\n        }\r\n    };\r\n\r\n    watch(value, (val) => {\r\n        if (val == null) {\r\n            emit('valueChanged', { name: props.name, value: null });\r\n            calendar.Month = new Date().getMonth();\r\n            calendar.Year = new Date().getFullYear();\r\n        } else {\r\n            if (!regDate.test(val) && !regDateTime.test(val)) {\r\n                val = val.replaceAll(/[^0-9]/g, '');\r\n                var tmp = [];\r\n                for (var x = 0; x < val.length; x += 2) {\r\n                    if (x == 4) {\r\n                        tmp.push(val.substring(x, Math.min(val.length - x, 4) + x));\r\n                        x += 2;\r\n                    } else {\r\n                        tmp.push(val.substring(x, Math.min(val.length - x, 2) + x));\r\n                    }\r\n                }\r\n                if (tmp.length > 0) {\r\n                    if (!/^([0-1]|(0[1-9])|(1[0-2]))$/.test(tmp[0]))\r\n                        tmp.splice(0);\r\n                    if (tmp.length > 1) {\r\n                        if (!/^[0-3]/.test(tmp[1])) {\r\n                            tmp.splice(1);\r\n                        } else {\r\n                            if (/^(01|03|05|07|08|10|12)$/.test(tmp[0])) {\r\n                                if (!/^([0-3]|(0[1-9])|([1-2][0-9])|(3[0-1]))$/.test(tmp[1])) {\r\n                                    tmp.splice(1);\r\n                                }\r\n                            } else if (/^(02|04|06|09|11)$/.test(tmp[0])) {\r\n                                if (!/^([0-3]|(0[1-9])|([1-2][0-9])|(30))$/.test(tmp[1])) {\r\n                                    tmp.splice(1);\r\n                                }\r\n                            } else if (!/^([0-2]|(0[1-9])|([1-2][0-9]))$/.test(tmp[1])) {\r\n                                tmp.splice(1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (tmp.length > 3) {\r\n                        if (!/^([0-2]|([0-1][0-9])|(2[0-3]))$/.test(tmp[3])) {\r\n                            tmp.splice(3);\r\n                        }\r\n                    }\r\n                    if (tmp.length > 4) {\r\n                        if (!/^[0-5][0-9]?$/.test(tmp[4])) {\r\n                            tmp.splice(4);\r\n                        }\r\n                    }\r\n                }\r\n                val = tmp.join('');\r\n                if (!props.includeTime && val.length > 8) {\r\n                    val = val.substring(0, 8);\r\n                }\r\n                if (val.length >= 2) {\r\n                    val = val.substring(0, 2) + '-' + (val.length > 2 ? val.substring(2) : '');\r\n                }\r\n                if (val.length >= 5) {\r\n                    val = val.substring(0, 5) + '-' + (val.length > 5 ? val.substring(5) : '');\r\n                }\r\n                if (val.length >= 9 && props.includeTime) {\r\n                    val = val.substring(0, 9) + ' ' + (val.length > 9 ? val.substring(9) : '');\r\n                }\r\n                if (val.length >= 11) {\r\n                    val = val.substring(0, 11) + ':' + (val.length > 11 ? val.substring(11) : '');\r\n                }\r\n                value.value = val;\r\n            } else {\r\n                var d = getValue();\r\n                if (isValid) {\r\n                    emit('valueChanged', { name: props.name, value: d });\r\n                }\r\n                calendar.Month = d.getMonth();\r\n                calendar.Year = d.getFullYear();\r\n            }\r\n        }\r\n    });\r\n\r\n    const MonthName = computed<string>(() => format(new Date(calendar.Year, calendar.Month, 1),Language,\"MMMM\"));\r\n    const Weeks = computed<CalendarDay[][]>(() => {\r\n        var ret:CalendarDay[][] = [];\r\n        var date = new Date(calendar.Year, calendar.Month, 1);\r\n        date = addDays(date,date.getDay() * -1);\r\n        var curVal = getValue();\r\n        var stopMonth = addDays(new Date(calendar.Year, calendar.Month, 1),32).getMonth();\r\n        while (date.getMonth() != stopMonth) {\r\n            var week = [];\r\n            for (var x = 0; x < 7; x++) {\r\n                week.push({\r\n                    Number: date.getDate(),\r\n                    Disabled: date.getMonth() != calendar.Month,\r\n                    isToday: format(date,Language,'yyyy-MM-dd') == format(new Date(),Language,'yyyy-MM-dd'),\r\n                    isSelected: (curVal != null && format(date,Language,'yyyy-MM-dd') == format(curVal,Language,'yyyy-MM-dd'))\r\n                });\r\n                date = addDays(date,1);\r\n            }\r\n            ret.push(week);\r\n        }\r\n        return ret;\r\n    });\r\n\r\n    const setValue = function (val:Date|null) {\r\n        if (val == null) {\r\n            value.value = null;\r\n        } else {\r\n            value.value = format(val,Language,'dd-MM-yyyy' + (props.includeTime ? ' HH:mm' : ''));\r\n        }\r\n    };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value Date|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n\r\n    const processTimeChange = (event:ValueChangedEvent):void=> {\r\n        if (event.value == null) {\r\n            if (value.value != null) {\r\n                value.value = value.value.split(' ')[0];\r\n            }\r\n        } else {\r\n            if (value.value != null) {\r\n                value.value = value.value.split(' ')[0] + ' ' + event.value;\r\n            } else {\r\n                value.value = \r\n                    `${padLeft((calendar.Month == new Date().getMonth() ? new Date().getDate() : 1).toString(),'0',2)}-${padLeft((calendar.Month + 1).toString(),'0',2)}-${calendar.Year} ${event.value}`;\r\n            }\r\n        }\r\n    };\r\n    const selectDate = (day:CalendarDay):void=>{\r\n        if (!day.Disabled && !day.isSelected) {\r\n            if (value.value === null) {\r\n                value.value = `${padLeft(day.Number.toString(),'0',2)}-${padLeft((calendar.Month+1).toString(),'0',2)}-${calendar.Year}`\r\n                    + (props.includeTime ? (time.value.getValue() == null ? '' : ' ' + time.value.getValue()) : '');\r\n            } else {\r\n                var tmp = value.value.split(' ');\r\n                tmp[0] = `${padLeft(day.Number.toString(),'0',2)}-${padLeft((calendar.Month+1).toString(),'0',2)}-${calendar.Year}`\r\n                value.value = `${tmp[0]}${(tmp.length > 1 ? ' ' + tmp[1] : '')}`;\r\n            }\r\n        }\r\n    };\r\n    const cancel = ():void=>{\r\n        value.value = preValue.value;\r\n        showInterface.value = false;\r\n    };\r\n    const calendarClicked = ():void=>{\r\n        if (!props.disabled){\r\n            preValue.value=value.value;\r\n            showInterface.value=true;\r\n        }\r\n    };\r\n    const cancelClicked = ():void=> {\r\n        if (!props.disabled) {\r\n            value.value=null;\r\n        }\r\n    };\r\n    const MoveMonth = (direction:number):void=>{\r\n        if (calendar.Month + direction == -1) {\r\n            calendar.Year = calendar.Year - 1;\r\n            calendar.Month = 11;\r\n        } else if (calendar.Month + direction == 12) {\r\n            calendar.Year = calendar.Year + 1;\r\n            calendar.Month = 0;\r\n        } else {\r\n            calendar.Month += direction;\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n.is-dateselect{\r\n    width: 355px;\r\n    margin-left: 130px;\r\n}\r\n\r\n.is-dateselect>.panel-block,\r\n.is-dateselect>.panel-heading{\r\n    padding:0;\r\n}\r\n</style>","<template>\r\n    <div class=\"summernote\" ref=\"snote\"/>    \r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch, onMounted, onUnmounted, ref,inject } from 'vue';\r\n    import { css } from '../utilities';\r\n    import {coreFieldProps} from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n    import { useSummerNote } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A full editor style of form input (uses SummerNote)\r\n * \r\n * @displayName FullEditor\r\n * @link https://summernote.org/\r\n * @link_title SummerNote\r\n */\r\n    const cdnBase = useSummerNote(inject);\r\n\r\n    css([`${cdnBase}summernote-lite.min.css`]);\r\n    await import(`${cdnBase}summernote`);\r\n    const snote = ref(null);\r\n\r\n    const props = defineProps<coreFieldProps>();\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value has changed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n        valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    watch(()=>props.disabled,(val)=>{\r\n        if (snote.value!=null)\r\n            $(snote.value).summernote(val ? 'disable' : 'enable');\r\n    });\r\n\r\n    const getValue = ():string=>{\r\n        return $(snote.value).summernote('code');\r\n    };\r\n    const setValue = (value:string|null):void=>{\r\n        $(snote.value).summernote('code',value);\r\n    }\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value string|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n\r\n    onMounted(()=>{\r\n        $(snote.value).summernote({\r\n            height:400,\r\n            callbacks: {\r\n                onChange: function(contents) {\r\n                    emit('valueChanged',{name:props.name,value:contents});\r\n                }\r\n            }\r\n        });\r\n        if (props.disabled??false){\r\n            $(snote.value).summernote('disable');\r\n        }\r\n    });\r\n\r\n    onUnmounted(()=>{\r\n        $(snote.value).summernote('destroy');\r\n    });\r\n</script>","<template>\r\n    <component :is=\"props.subtype\">{{Translator(props.label??'')}}</component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { useTranslator,translateFieldProps } from './common';\r\n    import { inject } from 'vue';\r\n\r\n    interface fieldProps extends translateFieldProps {\r\n        /**\r\n         * Content of the header\r\n         */\r\n        label?:string,\r\n        /**\r\n         * The subtype to use, ie h1,h2...\r\n         */\r\n        subtype?:string,\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A html header\r\n * \r\n * @displayName Header\r\n */\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        subtype:'h1'\r\n    });\r\n\r\n    const Translator = useTranslator(props,inject);\r\n</script>","<template>\r\n    <input type=\"hidden\" :name=\"props.name\" v-model=\"value\">\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch } from 'vue';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A hidden input\r\n * \r\n * @displayName Hidden\r\n */\r\n    const props = defineProps<{\r\n        /**\r\n         * The name of the input\r\n         */\r\n        name:string\r\n    }>();\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value has changed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    watch(value, (val) => emit('valueChanged', { name: props.name, value: val }));\r\n\r\n    const getValue = ():string => { return value.value; };\r\n    const setValue = (val:string|null):void=> { value.value = val; };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value string|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <input type=\"number\" class=\"input\" :id=\"props.name\" :name=\"props.name\" v-model=\"value\" :disabled=\"props.disabled\" :min=\"props.min\" :max=\"props.max\" :step=\"props.step\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch } from 'vue';\r\n    import { coreFieldProps } from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n\r\n    interface fieldProps extends coreFieldProps {\r\n        /**\r\n         * The minimum value\r\n         */\r\n        min?:number;\r\n        /**\r\n         * The maximum value\r\n         */\r\n        max?:number;\r\n        /**\r\n         * The step value\r\n         */\r\n        step?:number;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A number input\r\n * \r\n * @displayName Number\r\n * @link https://bulma.io/documentation/form/input/\r\n */\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        disabled:false\r\n    });\r\n    \r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value has changed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    const getValue = ():number|null => {\r\n        if (value.value === '' ||  value.value === null)\r\n            return null;\r\n        let result:number = parseInt(value.value);\r\n        if (props.min !== undefined) {\r\n            if (result < props.min * 1)\r\n                return null;\r\n        }\r\n        if (props.max !== undefined) {\r\n            if (result > props.max * 1)\r\n                return null;\r\n        }\r\n        return result;\r\n    };\r\n    const setValue = (val:number|string|null) => { value.value = (val===null?'':val.toString()); }\r\n\r\n    watch([value], (val) => emit('valueChanged', { name: props.name, value: getValue() }));\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value number|string|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <p :id=\"props.name\">{{Translator(props.label??'')}}</p>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { useTranslator,translateFieldProps } from './common';\r\n    import { inject } from 'vue';\r\n\r\n    interface fieldProps extends translateFieldProps {\r\n        /**\r\n         * The content of the paragraph\r\n         */\r\n        label?:string,\r\n        /**\r\n         * The name of the field\r\n         */\r\n        name?:string\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A paragraph\r\n * \r\n * @displayName Paragraph\r\n */\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n</script>","<template>\r\n    <div>\r\n        <Promised :promise=\"Values\">\r\n            <template v-slot=\"{response}\">\r\n                <template v-for=\"val in (response as ListItemValue[])\" v-if=\"values!=null\">\r\n                    <label class=\"radio\" v-show=\"!hiddenValues.some(v=>v===val.value.toString())\">\r\n                        <input type=\"radio\" :name=\"props.name\" :value=\"val.value\" class=\"radio\" :disabled=\"props.disabled||disabledValues.some(v=>v===val.value.toString())\"/>\r\n                        {{Translator(val.label)}}\r\n                    </label>\r\n                    <br />\r\n                </template>\r\n            </template>\r\n            <template #pending>\r\n                <Progress/> \r\n            </template>\r\n            <template #rejected>\r\n                <Notification :type=\"NoticeTypes.danger\" :message=\"Error\"/>\r\n            </template>\r\n        </Promised>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, computed, watch, inject } from 'vue';\r\n    import Promised from '../common/Promised.vue';\r\n    import {ListItemValue, ValueChangedEvent } from './typeDefinitions';\r\n    import { commonFieldProps,resolveListItems,useTranslator, useValuesList } from './common';\r\n    import {Progress,Notification} from '../common/';\r\n    import {NoticeTypes} from '../../enums';\r\n    import { useLanguage } from '../shared';\r\n    import translate from '../../messages/messages.js';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        /**\r\n         * The values to build the radio group from\r\n         */\r\n        values:ListItemValue[]|Promise<ListItemValue[]>|(()=>ListItemValue[])|(()=>Promise<ListItemValue[]>);\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A radio group\r\n * \r\n * @displayName RadioGroup\r\n * #link https://bulma.io/documentation/form/radio/\r\n */\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Language = useLanguage(inject);\r\n    const Error = computed<string>(()=>translate('Form.Error',Language));\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value has changed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const val = ref<any|null>(null);\r\n\r\n    const getValue = function () { return val.value; }\r\n\r\n    watch(val, (val) => {\r\n        emit('valueChanged', { name: props.name, value: getValue() });\r\n    });\r\n\r\n    const Values = computed<Promise<ListItemValue[]>>(async () => {\r\n        if (props.values == null) {\r\n            return [];\r\n        } else {\r\n            let result:ListItemValue[] = await resolveListItems<ListItemValue>(props.values);\r\n            if (val.value===null && result.some(r=>r.selected)){\r\n                val.value = result.find(r=>r.selected).value;\r\n            }\r\n            return result.map((item:ListItemValue):ListItemValue=>{\r\n                return {\r\n                    label:item.label,\r\n                    value:item.value,\r\n                    selected:val.value===item.value\r\n                };\r\n            });\r\n        }\r\n    });\r\n    const setValue = (value:any|null):void => {\r\n        val.value = value;\r\n    };\r\n    \r\n    const {hiddenValues,disabledValues} = useValuesList(props.name,inject);\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value any|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <div class=\"select\">\r\n        <Promised v-if=\"Values!=null\" :promise=\"Values\">\r\n            <template v-slot=\"{response}\">\r\n                <select :id=\"props.name\" :name=\"props.name\" :multiple=\"props.multiple\" :class=\"[props.multiple ? 'is-multiple' : '']\" v-model=\"vals\" :disabled=\"props.disabled\">\r\n                    <template  v-if=\"response!=null\" v-for=\"val in (response as SelectListItemValue[])\">\r\n                        <option v-if=\"val.values==undefined\" :value=\"val.value\" :selected=\"val.selected\" v-show=\"!hiddenValues.some(h=>h===val.value.toString())\" :disabled=\"disabledValues.some(d=>d===val.value.toString())\">{{Translator(val.label)}}</option>\r\n                        <optgroup v-if=\"val.values!=undefined\" :label=\"Translator(val.label)\">\r\n                            <option v-for=\"v in val.values\" :value=\"v.value\" :selected=\"v.selected\" v-show=\"!hiddenValues.some(h=>h===v.value.toString())\" :disabled=\"disabledValues.some(d=>d===v.value.toString())\">\r\n                                {{Translator(v.label)}}\r\n                            </option>\r\n                        </optgroup>\r\n                    </template>\r\n                </select>\r\n            </template>\r\n            <template #pending>\r\n                <Progress/> \r\n            </template>\r\n            <template #rejected>\r\n                <Notification :type=\"NoticeTypes.danger\" :message=\"Error\"/>\r\n            </template>\r\n        </Promised>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n/**\r\n * A select input\r\n * \r\n * @displayName Select\r\n * @link https://bulma.io/documentation/form/select/\r\n */\r\n    import { ref, watch, inject,computed, toRaw } from 'vue';\r\n    import Promised from '../common/Promised.vue';\r\n    import { SelectListItemValue, ValueChangedEvent} from './typeDefinitions';\r\n    import { commonFieldProps,resolveListItems,useTranslator, useValuesList } from './common';\r\n    import {Progress,Notification} from '../common/';\r\n    import {NoticeTypes} from '../../enums';\r\n    import translate from '../../messages/messages.js';\r\n    import { useLanguage } from '../shared';\r\n\r\n    const mergeValueGroups = (parent:string|null, value:SelectListItemValue, dest:SelectListItemValue[]):SelectListItemValue[]=> {\r\n        let base:any = {\r\n            label: (parent === null ? value.label : `${parent}->${value.label}`),\r\n            values: []\r\n        };\r\n        let idx = dest.length;\r\n        dest.push(base);\r\n        value.values.forEach(val=>{\r\n            if (val.values===undefined){\r\n                base.values.push(val);\r\n            }else{\r\n                dest = mergeValueGroups(base.label,val,dest);\r\n            }\r\n        });\r\n        if (dest[idx].values.length == 0) {\r\n            dest.splice(idx, 1);\r\n        }\r\n        return dest;\r\n    };\r\n\r\n    interface fieldProps extends commonFieldProps{\r\n        /**\r\n         * The values to supply for the select box\r\n         */\r\n        values:SelectListItemValue[]|Promise<SelectListItemValue[]>|(()=>SelectListItemValue[])|(()=>Promise<SelectListItemValue[]>);\r\n        /**\r\n         * Indicates if this is multiple select\r\n         */\r\n        multiple?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<fieldProps>(),\r\n    {\r\n        multiple:false\r\n    });\r\n\r\n    const Language = useLanguage(inject);\r\n    const Error = computed<string>(()=>translate('Form.Error',Language));\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value has changed\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const vals = ref<any[]|null>(null);\r\n    const locked = ref<boolean>(false);\r\n    \r\n    const Values = computed<Promise<SelectListItemValue[]>>(async () => {\r\n        if (props.values == null) {\r\n            return [];\r\n        } else {\r\n            let result:SelectListItemValue[] = await resolveListItems<SelectListItemValue>(props.values);\r\n            let tvalues:any[] = result.filter(s=>s.selected).map(s=>s.value);\r\n            if (result.some(s=>s.values!==undefined)){\r\n                result.filter(s=>s.values!==undefined)\r\n                .forEach(s=>{\r\n                    tvalues = tvalues.concat(\r\n                        s.values.filter(v=>v.selected).map(v=>v.value)\r\n                    );\r\n                });\r\n            }\r\n            if (vals.value === null || vals.value.length === 0) {\r\n                vals.value = null;\r\n            } else {\r\n                result = result.map(r=>{\r\n                    let t = r;\r\n                    if (t.values!==undefined){\r\n                        t.values = t.values.map(sv=>{\r\n                            sv.selected=vals.value.some(v=>v===sv.value);\r\n                            return sv;\r\n                        });\r\n                    }\r\n                    return t;\r\n                });\r\n                vals.value.forEach(v=>{\r\n                    if (!result.some(r=>(r.value!==undefined && r.value===v)\r\n                    || (r.values!==undefined && r.values.some(sr=>sr.value===v)))){\r\n                        result.push({\r\n                            label:v,\r\n                            value:v\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            let dest:SelectListItemValue[] = [];\r\n            result.forEach(r=>{\r\n                if (r.values===undefined){\r\n                    dest.push(r);\r\n                }else{\r\n                    dest=mergeValueGroups(r.label,r,dest);\r\n                }\r\n            });\r\n            return dest;\r\n        }\r\n    });\r\n\r\n    const getValue = ():any[]|any=> { \r\n        return (vals.value == null ? null : (vals.value.length == 0 ? null : (props.multiple ? vals.value.slice() : (Array.isArray(vals.value) ? vals.value[0] : vals.value)))); \r\n    };\r\n\r\n    watch(vals, () => {\r\n        if (!locked.value)\r\n            emit('valueChanged', { name: props.name, value: getValue() });\r\n    });\r\n    watch(locked, (val) => {\r\n        if (!val)\r\n            emit('valueChanged', { name: props.name, value: getValue() });\r\n    });\r\n\r\n    const setValue = (val:any[]|any|null):void=> {\r\n        locked.value = true;\r\n        if (val !== null && val !== undefined) {\r\n            if (props.multiple) {\r\n                vals.value = (Array.isArray(val) ? val : [val]);\r\n            } else {\r\n                vals.value = val;\r\n            }\r\n        } else {\r\n            if (props.multiple){\r\n                vals.value=[];\r\n            }else{\r\n                vals.value=null;\r\n            }\r\n        }\r\n        locked.value = false;\r\n    };\r\n    \r\n    const {hiddenValues,disabledValues} = useValuesList(props.name,inject);\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value any|any[]|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n\r\n</script>","<template>\r\n    <div class=\"field\">\r\n        <input type=\"checkbox\" class=\"switch is-rounded\" :id=\"props.name\" :name=\"props.name\" v-model=\"isChecked\" :disabled=\"props.disabled\"/>\r\n        <label :for=\"name\">\r\n            {{Translator(props.label)}}\r\n            <span class=\"help is-danger\" v-if=\"props.required\">*</span>\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { inject, ref, watch } from 'vue';\r\n    import {commonFieldProps, useTranslator} from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n\r\n    interface fieldProps extends commonFieldProps{\r\n        /**\r\n         * The label for the switch\r\n         */\r\n        label:string;\r\n        /**\r\n         * Indicates if this is required\r\n         */\r\n        required?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A checkbox used in a form but styled as a switch\r\n * \r\n * @displayName Switch\r\n * @link https://wikiki.github.io/form/switch/\r\n */\r\n    const props = defineProps<fieldProps>();\r\n    \r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the switch is either checked or unchecked\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const isChecked = ref(false);\r\n\r\n    watch(isChecked, (val) => emit('valueChanged', { name: props.name, value: val }));\r\n\r\n    const getValue =  ():boolean=> { return isChecked.value; };\r\n    const setValue = (val:boolean):void=> { isChecked.value = val; };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value boolean\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <input :type=\"subtype\" class=\"input\" :name=\"name\" :disabled=\"disabled\" :maxlength=\"props.maxlength\" v-model=\"value\">\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch } from 'vue';\r\n    import { coreFieldProps } from './common';\r\n    import { ValueChangedEvent } from './typeDefinitions';\r\n\r\n    interface fieldProps extends coreFieldProps{\r\n        /**\r\n         * The subtype to use for a text input, such as password, text, etc.\r\n         */\r\n        subtype:string,\r\n        /**\r\n         * The maxLength to apply to the text box\r\n         */\r\n        maxlength?:number\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A text input for the form\r\n * \r\n * @displayName Text\r\n * @link https://bulma.io/documentation/form/input/\r\n */\r\n    const props = defineProps<fieldProps>();\r\n        const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value of the text box changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n    const value = ref(null);\r\n\r\n    watch(value, (val) => emit('valueChanged', { name: props.name, value: val }));\r\n\r\n    const getValue = ():any=> { return value.value; }\r\n    const setValue = (val:any|null):void=> { value.value = val; }\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value any|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n</script>","<template>\r\n    <textarea class=\"textarea\" :id=\"props.name\" :name=\"props.name\" :rows=\"props.rows\" :cols=\"props.cols\" :maxlength=\"props.maxlength\" :disabled=\"props.disabled\" @keydown=\"keyPressed\" v-model=\"value\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch,ref } from 'vue';\r\n    import { coreFieldProps } from './common';\r\nimport { ValueChangedEvent } from './typeDefinitions';\r\n\r\n    const tabKeyCode = 9;\r\n    const tab = String.fromCharCode(tabKeyCode);\r\n    const newLine = String.fromCharCode(10);\r\n\r\n    interface fieldProps extends coreFieldProps{\r\n        maxlength?:number,\r\n        rows?:number,\r\n        cols?:number,\r\n        supportsTab?:boolean\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A text area input for the form\r\n * \r\n * @displayName Textarea\r\n * @link https://bulma.io/documentation/form/textarea/\r\n */\r\n    const props = defineProps<fieldProps>();\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value of the textarea changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    watch(value, (val) => { emit('valueChanged', { name: props.name, value: val }); });\r\n\r\n    const getValue = ():string=> { return value.value; };\r\n    const setValue = (val:string|null):void=> { value.value = val; };\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value string|null\r\n         * @returns void\r\n         */\r\n        setValue \r\n    });\r\n\r\n    const keyPressed = (event:any):boolean=> {\r\n        if (props.supportsTab) {\r\n            let val = getValue();\r\n            switch (event.keyCode) {\r\n                case tabKeyCode:\r\n                    let selectionStart = event.target.selectionStart;\r\n                    let selectionEnd = event.target.selectionEnd;\r\n                    let start = val.substring(0, selectionStart);\r\n                    let end = (val.length > selectionEnd ? val.substring(selectionEnd) : '');\r\n                    let chunk = (selectionStart == selectionEnd ? '' : val.substring(selectionStart, selectionEnd));\r\n                    if (chunk.indexOf(String.fromCharCode(10))<0) {\r\n                        if (event.shiftKey) {\r\n                            if (chunk.startsWith(tab)) {\r\n                                chunk = chunk.substring(1);\r\n                                selectionStart--;\r\n                            } else if (start.endsWith(tab)) {\r\n                                start = start.substring(0, start.length - 1);\r\n                                selectionStart--;\r\n                            }\r\n                        } else {\r\n                            chunk = tab + chunk;\r\n                        }\r\n                    } else {\r\n                        let addnewLine = false;\r\n                        if (chunk.endsWith(newLine)) {\r\n                            addnewLine = true;\r\n                            chunk = chunk.substring(0, chunk.length - 1);\r\n                        }\r\n                        let chunks = chunk.split(newLine);\r\n                        chunk = '';\r\n                        if (event.shiftKey && start.endsWith(tab)) {\r\n                            start = start.substring(0, start.length - 1);\r\n                            selectionStart--;\r\n                        }\r\n                        chunks.forEach((c,index)=>{\r\n                            if (event.shiftKey && c.startsWith(tab)) {\r\n                                c = c.substring(1);\r\n                            } else if (!event.shiftKey) {\r\n                                c = tab + c;\r\n                            }\r\n                            chunk += c + (index === chunks.length - 1 ? '' : newLine);\r\n                        });\r\n                        if (addnewLine) {\r\n                            chunk += newLine;\r\n                        }\r\n                    }\r\n                    val = start + chunk + end;\r\n                    selectionStart += (chunk.length == 1 ? 1 : 0);\r\n                    selectionEnd = selectionStart + (chunk.length == 1 ? 0 : chunk.length);\r\n                    setValue(val);\r\n                    event.target.selectionStart = selectionStart;\r\n                    event.target.selectionEnd = selectionEnd;\r\n                    event.target.focus();\r\n                    if (event.preventDefault != undefined)\r\n                        event.preventDefault();\r\n                    return false;\r\n                default:\r\n                    return true;\r\n                    break;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n</script>","<template>\r\n    <div :class=\"Classes\">\r\n        <template v-for=\"col in Columns\">\r\n            <div :class=\"col.class\" v-if=\"slots[col.name]\">\r\n                <!--\r\n                    @slot the slot for the content of the given column whose name is either the name property or col-{index}\r\n                -->\r\n                <slot :name=\"col.name\"/>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\ntype definedColumn = {\r\n    name:string,\r\n    class:string[]\r\n};\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Column Container component to use to build a set of columns\r\n * \r\n * @displayName ColumnContainer\r\n * @link https://bulma.io/documentation/columns/\r\n */\r\n    import { ColumnContainerModifiers,BorderTypes } from '../../enums';\r\n    import { Column } from './typeDefinitions';\r\n    import {computed,useSlots} from 'vue';\r\n\r\n    const slots : any = useSlots();\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * Any modifiers to apply to the given columns\r\n         */\r\n        modifiers?:ColumnContainerModifiers[],\r\n        /**\r\n         * The columns to be defined inside this container\r\n         */\r\n        columns:Column[]\r\n    }>();\r\n\r\n    const Classes = computed<string[]>(()=>{\r\n        let result = ['columns'];\r\n        if (props.modifiers!==undefined && props.modifiers!==null){\r\n            result = result.concat(props.modifiers.map(mod=>`is-${mod}`));\r\n        }\r\n        return result;\r\n    });\r\n    const Columns = computed<definedColumn[]>(()=>{\r\n        return props.columns.map((c,index)=>{\r\n            let classData:string[] = [\r\n                'column',\r\n                c.class??'',\r\n                (c.size ? `is-${c.size}` : ''),\r\n                (c.offset ? `is-offset-${c.offset}` : '')\r\n            ];\r\n            if (c.border){\r\n                if (c.border.some(b=>b===BorderTypes.all)){\r\n                    classData.push('is-bordered');\r\n                }else{\r\n                    c.border.forEach(b=>classData.push(`is-bordered-${b}`));\r\n                }\r\n            }\r\n            return {\r\n                name:c.name??`col-${index}`,\r\n                class:classData\r\n            };\r\n        });\r\n    });\r\n</script>","<template>\r\n    <section>\r\n        <ColumnContainer :modifiers=\"[ColumnContainerModifiers.gapless]\" v-for=\"row in Rows\" :columns=\"row.map(r=>convertInputToColumn(r))\">\r\n            <template v-for=\"inp in row.map<FilteredRowItem>((value,index)=>{return {input:value,index:index};})\r\n        .filter(val=>!hiddenInputs!.some(f=>f===val.input.name))\" \r\n                #[`col-${inp.index}`]>\r\n                <FormComponent \r\n                    :ref=\"(el) => (refs[inp.input.refIndex].value = el)\" \r\n                    :input=\"inp.input\" \r\n                    @valueChanged=\"emit('valueChanged',$event)\" \r\n                    @buttonClicked=\"emit('buttonClicked',$event)\" \r\n                    :disabled=\"(props.disabled??false) || disabledFields!.some(f=>f===inp.input.name)\"/>\r\n            </template>\r\n        </ColumnContainer>\r\n    </section>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { inject, ref,computed, Ref} from 'vue';\r\n    import ColumnContainer from '../layout/column-container.vue';\r\n    import FormComponent from './form-component.vue';\r\n    import { FormInputType, ValueChangedEvent } from './typeDefinitions';\r\n    import {Column} from '../layout/typeDefinitions';\r\n    import { DISABLED_FIELDS_PROPERTY, HIDDEN_FIELDS_PROPERTY } from './common';\r\n    import {ColumnSizes,ColumnContainerModifiers} from '../../enums';\r\n\r\n    const getColumnSize = (form_columns?:number) : ColumnSizes =>{\r\n        let size:ColumnSizes = ColumnSizes.twelve;\r\n        if (form_columns!==undefined){\r\n            switch(form_columns!){\r\n                case 1: size=ColumnSizes.one; break;\r\n                case 2: size=ColumnSizes.two; break;\r\n                case 3: size=ColumnSizes.three; break;\r\n                case 4: size=ColumnSizes.four; break;\r\n                case 5: size=ColumnSizes.five; break;\r\n                case 6: size=ColumnSizes.six; break;\r\n                case 7: size=ColumnSizes.seven; break;\r\n                case 8: size=ColumnSizes.eight; break;\r\n                case 9: size=ColumnSizes.nine; break;\r\n                case 10: size=ColumnSizes.ten; break;\r\n                case 11: size=ColumnSizes.eleven; break;\r\n                default: size=ColumnSizes.twelve; break;\r\n            }\r\n        }\r\n        return size;\r\n    }\r\n\r\n    type MappedFormInputType = FormInputType & {\r\n        refIndex:number\r\n    }\r\n\r\n    type FilteredRowItem = {\r\n        input:MappedFormInputType,\r\n        index:number\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * @ignore\r\n */\r\n    const convertInputToColumn = (input:FormInputType) : Column =>{\r\n        return {\r\n            size:getColumnSize(input.form_columns),\r\n            class:'field'\r\n        };\r\n    }\r\n    \r\n    const props = defineProps<{\r\n        /**\r\n         * The inputs contains within the input collection\r\n         */\r\n        fields:FormInputType[],\r\n        /**\r\n         * Indicates if the input collection is disabled\r\n         */\r\n         disabled?:boolean;\r\n    }>();\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value of a component in this row changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n        valueChanged:[data:ValueChangedEvent],\r\n        /**\r\n         * Emitted when a button within this row is clicked\r\n         * \r\n         * @param name string\r\n         */\r\n        buttonClicked:[name:string]\r\n    }>();\r\n\r\n    let refs : Ref<any>[] = [];\r\n\r\n    const Rows = computed<MappedFormInputType[][]>(()=>{\r\n        let result:MappedFormInputType[][] = [];\r\n        let row:MappedFormInputType[] = [];\r\n        let curLen = 0;\r\n        refs = props.fields.map((inp,index)=>ref(null));\r\n        props.fields.forEach((field,index)=>{\r\n            let len = (field.form_columns??12);\r\n            if (curLen+len>12){\r\n                result.push(row);\r\n                row=[];\r\n                curLen=0;\r\n            }\r\n            row.push({...field,...{refIndex:index}});\r\n            curLen+=len;\r\n            if (curLen===12){\r\n                result.push(row);\r\n                row=[];\r\n                curLen=0;\r\n            }\r\n        });\r\n        if (row.length > 0) {\r\n            result.push(row);\r\n        }\r\n        return result;\r\n    });\r\n\r\n    const hiddenInputs = inject<string[]>(HIDDEN_FIELDS_PROPERTY);\r\n    const disabledFields = inject<string[]>(DISABLED_FIELDS_PROPERTY);\r\n    \r\n    const setValue = (values:any|null):void=> {\r\n        refs.forEach((input,index) => {\r\n            switch (props.fields[index].type) {\r\n                case 'subform':\r\n                    input.value!.setValue(values);\r\n                    break;\r\n                default:\r\n                    if (input.value!.setValue !== undefined) {\r\n                        if (values === null) {\r\n                            input.value!.setValue(null);\r\n                        } else if (Object.keys(values).some(k=>k===input.value!.fieldName)) {\r\n                            input.value!.setValue(values[input.value!.fieldName]);\r\n                        } else if (Object.keys(values).some(k=>k===input.value!.altFieldName)) {\r\n                            input.value!.setValue(values[input.value!.altFieldName]);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    const getValue = ():any=> {\r\n        var result:any = {};\r\n        refs.forEach(input => {\r\n            if (input.value!.getValue != undefined) {\r\n                switch (input.value!.type) {\r\n                    case 'subform':\r\n                        result = Object.assign(result,input!.value.getValue());\r\n                        break;\r\n                    default:\r\n                        result[input.value!.fieldName] = input.value!.getValue();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    const isValid = ():boolean=> {\r\n        return !refs.some(input=>!(input.value!.isValid===undefined?true:input.value!.isValid()));\r\n    };\r\n    \r\n    defineExpose({ \r\n        /**\r\n         * Called to set the value for a component in the row\r\n         * \r\n         * @param value any\r\n         */\r\n         setValue,  \r\n        /**\r\n         * Called to get the value of the components in this row.\r\n         * Returns an object where the propertyName are the names of the fields in the subform.\r\n         */\r\n         getValue, \r\n        /**\r\n         * Called to see if all the copmonents in this row are valid.\r\n         */\r\n        isValid\r\n    });\r\n</script>","<template>\r\n    <Box :id=\"props.name\" :name=\"props.name\" v-show=\"!isHidden\">\r\n        <InputsCollection :fields=\"props.fields\" \r\n            ref=\"inputs\" \r\n            :disabled=\"props.disabled\"\r\n            @valueChanged=\"emit('valueChanged',$event)\" \r\n            @buttonClicked=\"emit('buttonClicked',$event)\"\r\n            />\r\n    </Box>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, computed,inject, readonly, Ref } from 'vue';\r\n    import { FormInputType, ValueChangedEvent } from './typeDefinitions';\r\n    import { HIDDEN_FIELDS_PROPERTY, coreFieldProps} from './common';\r\n    import InputsCollection from './inputs-collection.vue';\r\n    import Box from '../layout/box.vue';\r\n\r\n    interface fieldProps extends coreFieldProps {\r\n        /**\r\n         * The form components for this subform\r\n         */\r\n        fields:FormInputType[];\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create form within a form (a way of collecting child inputs that maybe have a specific use)\r\n * \r\n * @displayName Subform\r\n */\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        disabled:false\r\n    });\r\n    \r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value of a form element changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n         valueChanged:[data:ValueChangedEvent],\r\n        /**\r\n         * Emitted when a button within the sub form is clicked\r\n         * \r\n         * @param name string\r\n         */\r\n        buttonClicked:[name:string]\r\n    }>();\r\n\r\n    const inputs = ref<any>(null);\r\n    \r\n    const hiddenInputs = inject<Readonly<Ref<readonly string[]>>>(HIDDEN_FIELDS_PROPERTY,readonly(ref([])));\r\n\r\n    const isHidden = computed<boolean>(()=>{\r\n        return (hiddenInputs ? hiddenInputs.value.some(h=>h===props.name) : false);\r\n    });\r\n\r\n    const isValid = ():boolean=> (inputs.value===null ? false : inputs.value.isValid());\r\n    const setValue = (values:any):void=>{\r\n        if (inputs.value!==null){\r\n            inputs.value.setValue(values);\r\n        }\r\n    }\r\n    const getValue = ():any|null=> (inputs.value===null ? null : inputs.value.getValue());\r\n    \r\n    defineExpose({ \r\n        /**\r\n         * Called to set the value of 1 or more copmonents inside this sub form\r\n         * \r\n         * @param value any\r\n         */\r\n        setValue, \r\n        /**\r\n         * Called to get the value of this of all the components inside this subform.  \r\n         * Returns an object where each propertyName is the name of the field and it's value is the value.\r\n         */\r\n        getValue, \r\n        /**\r\n         * Called to see if this sub form is valid.  It returns the result of true if all the components return true from their isValid calls\r\n         */\r\n        isValid\r\n    });\r\n    \r\n</script>","export enum FormInputTypes{ autocomplete='autocomplete', button='button', checkbox_group='checkbox-group', checkbox='checkbox', date='date',\r\nfull_editor='full-editor',header='header',hidden='hidden',number='number',paragraph='paragraph',radio_group='radio-group',select='select',subform='subform',switch='switch',\r\ntext='text',textarea='textarea',time='time' }","<template>\r\n    <Header v-if=\"props.input.type===FormInputTypes.header\" \r\n        :subtype=\"props.input.subtype\" \r\n        :label=\"props.input.label\" \r\n        ref=\"inp\"/>\r\n    <Paragraph v-else-if=\"props.input.type===FormInputTypes.paragraph\" \r\n        :name=\"props.input.name\" \r\n        :label=\"props.input.label\" \r\n        ref=\"inp\"/>\r\n    <Button v-else-if=\"props.input.type===FormInputTypes.button\"\r\n        v-bind=\"inputProps\" \r\n        :disabled=\"Disabled\" \r\n        @buttonClicked=\"buttonClicked\" \r\n        ref=\"inp\"/>\r\n    <template v-else>\r\n        <label class=\"label\" :for=\"props.input.name\" v-if=\"hasLabel\">\r\n            {{Translator(props.input.label??'')}}\r\n            <span class=\"help is-danger\" v-if=\"props.input.required\">*</span>\r\n        </label>\r\n        <div class=\"control\">\r\n            <component :is=\"inputType\" v-bind=\"inputProps\" @valueChanged=\"valueChanged\" ref=\"inp\"/>\r\n        </div>\r\n    </template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { onMounted, computed, ref,readonly,inject } from 'vue';\r\n    import Autocomplete from './autocomplete.vue';\r\n    import Button from './button.vue';\r\n    import CheckboxGroup from './checkbox-group.vue';\r\n    import Checkbox from './checkbox.vue';\r\n    import Date from './date.vue';\r\n    import FullEditor from './full-editor.vue';\r\n    import Header from './header.vue';\r\n    import Hidden from './hidden.vue';\r\n    import Number from './number.vue';\r\n    import Paragraph from './paragraph.vue';\r\n    import RadioGroup from './radio-group.vue';\r\n    import Select from './select.vue';\r\n    import Switch from './switch.vue';\r\n    import Text from './text.vue';\r\n    import Textarea from './textarea.vue';\r\n    import Time from './time.vue';\r\n    import Subform from './subform.vue';\r\n    import { FormInputType, ValueChangedEvent } from './typeDefinitions';\r\n    import {FormInputTypes} from './enums';\r\n    import { translateFieldProps, useTranslator } from './common';\r\n\r\n    const LABELLED_FIELDS : FormInputTypes[] = [FormInputTypes.autocomplete, FormInputTypes.checkbox_group, FormInputTypes.date, FormInputTypes.number, FormInputTypes.radio_group, FormInputTypes.select, FormInputTypes.text, FormInputTypes.textarea, FormInputTypes.time, FormInputTypes.subform];\r\n    const TRANSLATE_FIELDS : FormInputTypes[] = [FormInputTypes.subform,FormInputTypes.switch,FormInputTypes.select,FormInputTypes.radio_group,FormInputTypes.paragraph,FormInputTypes.header,FormInputTypes.checkbox_group,FormInputTypes.checkbox,FormInputTypes.button,FormInputTypes.autocomplete];\r\n\r\n    interface formComponentProps extends translateFieldProps{\r\n        /**\r\n         * The type of input this form component represents\r\n         */\r\n        input:FormInputType,\r\n        /**\r\n         * Indicates if this is disabled\r\n         */\r\n        disabled?:boolean,\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A date input used in a form\r\n * \r\n * @displayName FormComponent\r\n */\r\n    const inp = ref<any>(null);\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value of this form component changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n        valueChanged:[data:ValueChangedEvent],\r\n        /**\r\n         * Emitted when a button within this form component is clicked\r\n         * \r\n         * @param name string\r\n         */\r\n        buttonClicked:[name:string]\r\n    }>();\r\n\r\n    const props = withDefaults(defineProps<formComponentProps>(),{\r\n        disabled:false,\r\n        hidden:false\r\n    });\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const type = readonly(ref(props.input.type));\r\n\r\n    const inputType = computed(() => {\r\n        let result = null;\r\n        switch (props.input.type) {\r\n            case FormInputTypes.autocomplete: result = Autocomplete; break;\r\n            case FormInputTypes.button: result = Button; break;\r\n            case FormInputTypes.checkbox_group: result = CheckboxGroup; break;\r\n            case FormInputTypes.checkbox: result = Checkbox; break;\r\n            case FormInputTypes.date: result = Date; break;\r\n            case FormInputTypes.full_editor: result = FullEditor; break;\r\n            case FormInputTypes.header: result = Header; break;\r\n            case FormInputTypes.hidden: result = Hidden; break;\r\n            case FormInputTypes.number: result = Number; break;\r\n            case FormInputTypes.paragraph: result = Paragraph; break;\r\n            case FormInputTypes.radio_group: result = RadioGroup; break;\r\n            case FormInputTypes.select: result = Select; break;\r\n            case FormInputTypes.switch: result = Switch; break;\r\n            case FormInputTypes.text: result = Text; break;\r\n            case FormInputTypes.textarea: result = Textarea; break;\r\n            case FormInputTypes.time: result = Time; break;\r\n            case FormInputTypes.subform: result = Subform; break;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    const setValue = function (value:any) {\r\n        if (inp.value !== null && inp.value.setValue !== undefined) {\r\n            inp.value.setValue(value);\r\n        }\r\n    };\r\n\r\n    onMounted(() => {\r\n        if (inp.value !== null && props.input.value !== undefined && props.input.value !== null) {\r\n            setValue(props.input.value);\r\n        }\r\n    });\r\n\r\n    const Disabled = computed<boolean>(() => props.input.disabled??props.disabled??false);\r\n    const fieldName = computed(() => props.input.name);\r\n    const altFieldName = computed(() => props.input.name);\r\n    const hasLabel = computed(() =>(LABELLED_FIELDS.some(l=>l===props.input.type) && props.input.label !== undefined && props.input.label !== null));\r\n    const inputProps = computed(() => {\r\n        let result:any = Object.assign({},props.input??{});\r\n        delete result.type;\r\n        if (hasLabel.value){\r\n            delete result.label;\r\n        }\r\n        if (result.className != undefined) {\r\n            delete result.className;\r\n        }\r\n        if (result.form_columns != undefined) {\r\n            delete result.form_columns;\r\n        }\r\n        if (TRANSLATE_FIELDS.some(f=>f===props.input.type)){\r\n            result.translate = props.translate;\r\n        }\r\n        result.disabled = props.disabled;\r\n        if (result.additional!==undefined){\r\n            for(const key in result.additional)\r\n            {\r\n               result[key] = result.additional[key]; \r\n            }\r\n            delete result.additional;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    const valueChanged = (data:ValueChangedEvent) => {\r\n        if (data.value !== undefined && data.value !== null && Array.isArray(data.value)) {\r\n            let tmp = [...data.value];\r\n            data.value = tmp;\r\n        }\r\n        emit('valueChanged', data);\r\n    };\r\n    const buttonClicked = (data:string)=> {\r\n        emit('buttonClicked', data);\r\n    };\r\n    const getValue = ():any|null=> {\r\n        if (inp.value != null) {\r\n            if (inp.value.getValue != undefined) {\r\n                let ret = inp.value.getValue();\r\n                if (ret !== undefined && ret !== null && Array.isArray(ret)) {\r\n                    return [...ret];\r\n                }\r\n                return ret;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    const isValid = ():boolean=> {\r\n        if (props.input.type === 'subform' && inp.value !== null)\r\n            return inp.value.isValid();\r\n        if (props.input.required??false) {\r\n            let val = getValue();\r\n            return val!==undefined && val!==null \r\n                && (Array.isArray(val) ? val.length>0 : true)\r\n                && val.toString()!=='';\r\n        }\r\n        return true;\r\n    };\r\n    const setValues = (values:any|null):void=> {\r\n        if (props.input.type === 'subform' && inp.value !== null)\r\n            inp.value.setValues(values);\r\n        else\r\n            throw 'unable to call set values on any form element except a subform';\r\n    };\r\n    \r\n    defineExpose({ \r\n        /**\r\n         * Called to set the value for this given form component\r\n         * \r\n         * @param value any\r\n         */\r\n        setValue, \r\n        /**\r\n         * Property that returns the name of this given component\r\n         */\r\n        fieldName, \r\n        /**\r\n         * Property that returns the type of form component this is\r\n         */\r\n        type,\r\n        /**\r\n         * Property that returns the alternative field name for this component\r\n         */\r\n        altFieldName, \r\n        /**\r\n         * Called to get the value of this component.\r\n         * If this is a basic component, it returns that value.\r\n         * If this is a subform it will return an object where the propertyName are the names of the fields in the subform.\r\n         */\r\n        getValue, \r\n        /**\r\n         * Called to see if this component is valid.\r\n         * If this is a basic component, it ensures it has a value if required.\r\n         * If this is a subform it returns the result from the subform isValid call.\r\n         */\r\n        isValid, \r\n        /**\r\n         * Called to set the values of a subform component, this will throw an error if this component is not a subform.\r\n         * \r\n         * @param values any|null\r\n         */\r\n        setValues\r\n    });\r\n</script>\r\n\r\n<style>\r\n    label.label > span.help.is-danger{\r\n        display:inline-block;\r\n    }\r\n</style>./typeDefinitions","<template>\r\n    <form onsubmit=\"return false;\" class=\"container is-fullhd\">\r\n        <InputsCollection :fields=\"props.elements\" \r\n            ref=\"inputs\" \r\n            :disabled=\"props.disabled\"\r\n            @valueChanged=\"emit('valueChanged',$event)\" \r\n            @buttonClicked=\"emit('buttonClicked',$event)\"\r\n            />\r\n    </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,provide, inject, readonly } from 'vue';\r\n    import { FormInputType, TranslateMethod, ValueChangedEvent } from './typeDefinitions';\r\n    import { DISABLED_FIELDS_PROPERTY, HIDDEN_FIELDS_PROPERTY, translateFieldProps, useTranslator } from './common';\r\n    import InputsCollection from './inputs-collection.vue';\r\n\r\n    interface formProps extends translateFieldProps{\r\n        /**\r\n         * The elements of the form\r\n         */\r\n        elements:FormInputType[];\r\n        /**\r\n         * Indicates if the form is disabled\r\n         */\r\n        disabled?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create a form with a given set of elements \r\n * \r\n * @displayName ComponentForm\r\n */\r\n    const props = withDefaults(defineProps<formProps>(),{\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the value of a form element changes\r\n         * \r\n         * @param data ValueChangedEvent\r\n         */\r\n        valueChanged:[data:ValueChangedEvent],\r\n        /**\r\n         * Emitted when a button within the form is clicked\r\n         * \r\n         * @param name string\r\n         */\r\n        buttonClicked:[name:string]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    provide<TranslateMethod|null>('Translate',(value:string):string=>{\r\n        return Translator.value(value);\r\n    });\r\n\r\n    const inputs = ref(null);\r\n\r\n    const getValues=():any|null=>(inputs.value!==null ? inputs.value.getValue() : null);\r\n    const setValues = (values:any):void=> {\r\n        if (inputs.value!==null){\r\n            inputs.value.setValue(values);\r\n        }\r\n    };\r\n    const isValid = ():boolean=> (inputs.value!==null ? inputs.value.isValid() : false);\r\n\r\n    const hiddenFields = ref<string[]>([]);\r\n    provide(HIDDEN_FIELDS_PROPERTY,readonly(hiddenFields));\r\n    const hideField = (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            hiddenFields.value = [...hiddenFields.value,...name];\r\n        } else {\r\n            hiddenFields.value.push(name);\r\n        }\r\n    };\r\n    const showField = (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            hiddenFields.value = hiddenFields.value.filter(f=>name.indexOf(f)>=0);\r\n        } else {\r\n            hiddenFields.value = hiddenFields.value.filter(f=>f!==name);\r\n        }\r\n    };\r\n\r\n    const disabledFields = ref<string[]>([]);\r\n    provide(DISABLED_FIELDS_PROPERTY,readonly(disabledFields));\r\n    const disableField = (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            disabledFields.value = [...disabledFields.value,...name];\r\n        } else {\r\n            disabledFields.value.push(name);\r\n        }\r\n    };\r\n    const enableField= (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            disabledFields.value = disabledFields.value.filter(f=>name.indexOf(f)>=0);\r\n        } else {\r\n            disabledFields.value = disabledFields.value.filter(f=>f!==name);\r\n        }\r\n    };\r\n\r\n    defineExpose({\r\n        /**\r\n         * Returns the values of the given form elements as an object where the property name is the name of the form element and the property value is \r\n         * that elements value\r\n         */\r\n        getValues,\r\n        /**\r\n         * Called to set the values on the form elements using an object where the property name is the name of the form element\r\n         * \r\n         * @param values any\r\n         */\r\n        setValues,\r\n        /**\r\n         * Called to see if the form is valid.  Returns a boolean value that is true if all required fields have a value.\r\n         */\r\n        isValid,\r\n        /**\r\n         * Called to hide 1 or more fields in the form\r\n         * \r\n         * @param name string|string[]\r\n         */\r\n        hideField,\r\n        /**\r\n         * Called to show 1 or more hidden fields in the form\r\n         * \r\n         * @param name string|string[]\r\n         */\r\n        showField,\r\n        /**\r\n         * Called to disable 1 or more fields in the form\r\n         * \r\n         * @param name string|string[]\r\n         */\r\n        disableField,\r\n        /**\r\n         * Called to enable 1 or more disabled fields in the form\r\n         * \r\n         * @param name string|string[]\r\n         */\r\n        enableField\r\n    });\r\n</script>","<template>\r\n    <section :class=\"['hero','is-small','has-text-centered',(type==null ? '' : 'is-'+props.type)]\">\r\n        <div class=\"hero-body\">\r\n            <p class=\"title\">{{props.title}}</p>\r\n            <p class=\"subtitle\" v-if=\"props.subtitle\">{{props.subtitle}}</p>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A banner component to use\r\n * \r\n * @displayName Banner\r\n * @link https://bulma.io/documentation/layout/hero/\r\n */\r\n    import { ColorTypes } from '../../enums';\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The color of the banner\r\n         */\r\n        type:ColorTypes,\r\n        /**\r\n         * The title of the banner\r\n         */\r\n        title:string,\r\n        /**\r\n         * The sub title of the banner\r\n         */\r\n        subtitle?:string|null\r\n    }>();\r\n</script>","<template>\r\n    <nav :class=\"Class\" aria-label=\"breadcrumbs\">\r\n        <ul v-if=\"props.breadCrumbs!==null\">\r\n            <li v-for=\"crumb in props.breadCrumbs\" :class=\"{'is-active':crumb.active}\">\r\n                <a @click=\"processClick(crumb.onClick)\">\r\n                    <span :class=\"['icon',(crumb.onClick ? 'is-clickable' : '')]\" v-if=\"crumb.icon\">\r\n                        <Icon :icon=\"crumb.icon\" />\r\n                    </span>\r\n                    {{crumb.title}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Use to define a breadcrumbs component\r\n * \r\n * @displayName Breadcrumbs\r\n * @link https://bulma.io/documentation/components/breadcrumb/\r\n */\r\n    import {computed} from 'vue';\r\n    import {BreadCrumbAlignments,Sizes,BreadCrumbSeperators} from '../../enums';\r\n    import {BreadCrumb} from './interfaces';\r\n    import {Icon} from '../common/';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The breadcrumb entries to display\r\n         */\r\n        breadCrumbs:BreadCrumb[]|null\r\n        /**\r\n         * The alignment to use\r\n         */\r\n        alignment?:BreadCrumbAlignments,\r\n        /**\r\n         * The size to use\r\n         */\r\n        size?:Sizes,\r\n        /**\r\n         * The seperator to use between each entry\r\n         */\r\n        seperator?:BreadCrumbSeperators\r\n    }>(),{\r\n        alignment:BreadCrumbAlignments.left,\r\n        size:Sizes.normal\r\n    });\r\n\r\n    const Class = computed<string[]>(()=>{\r\n        let result:string[] = ['breadcrumb'];\r\n        if (props.alignment && props.alignment!==BreadCrumbAlignments.left){\r\n            result.push(`is-${props.alignment}`);\r\n        }\r\n        if (props.size && props.size!==Sizes.normal){\r\n            result.push(`is-${props.size}`);\r\n        }\r\n        if (props.seperator){\r\n            result.push(`has-${props.seperator}-seperator`);\r\n        }\r\n        return result;\r\n    });\r\n\r\n    const processClick = (onClick?:()=>void) : void =>{\r\n        if (onClick!==undefined){\r\n            onClick();\r\n        }\r\n    };\r\n</script>","<template>\r\n    <div class=\"card\" :class=\"{'is-fullwidth':props.full_width,'is-fullheight':props.full_height}\">\r\n        <div class=\"card-icon\" v-if=\"props.icon\">\r\n            <div class=\"card-icon-wrapper\">\r\n                <Icon :icon=\"props.icon\" :size=\"IconSizes.xxlarge\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-header\" v-if=\"slots.header\">\r\n            <!--\r\n                @slot The header of the card\r\n            -->\r\n            <slot name=\"header\" v-bind=\"headerProps\"/>\r\n        </div>\r\n        <div class=\"card-content\" v-if=\"slots.content\">\r\n            <!--\r\n                @slot The body of the card\r\n            -->\r\n            <slot name=\"content\"/>\r\n        </div>\r\n        <div class=\"card-footer\" v-if=\"slots.footer\">\r\n            <!--\r\n                @slot The footer of the card\r\n            -->\r\n            <slot name=\"footer\" v-bind=\"footerProps\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Card component to use\r\n * \r\n * @displayName Card\r\n * @link https://bulma.io/documentation/components/card/\r\n */\r\n    import Icon from '../common/icon.vue';\r\n    import { IconSizes } from '../../enums';\r\n    import {useSlots} from 'vue';\r\n\r\n    const slots = useSlots();\r\n\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * Indicates if the width of the card should be based on the content or a built in maximum\r\n         */\r\n        full_width?:boolean,\r\n        /**\r\n         * Indicates if the height of the card should be based on the content or a build in maximum\r\n         */\r\n        full_height?:boolean,\r\n        /**\r\n         * Set an icon to overlay within the header\r\n         */\r\n        icon?:string\r\n    }>(),\r\n    {\r\n        full_height:false,\r\n        full_width:false\r\n    });\r\n\r\n    const footerProps = {\r\n        addon_class: 'card-footer-item'\r\n    };\r\n\r\n    const headerProps = {\r\n        header_class: 'card-header-title has-text-centered',\r\n        addon_class: 'card-header-icon'\r\n    };\r\n</script>","<template>\r\n    <nav class=\"level\">\r\n        <div class=\"level-left\" v-if=\"props.left_slots\">\r\n            <template v-for=\"name in props.left_slots\">\r\n                <div class=\"level-item\" v-if=\"slots[name]\">\r\n                    <!--\r\n                        @slot The dynamically produced slot for each left slot\r\n                    -->\r\n                    <slot :name=\"name\"/>\r\n                </div>\r\n            </template>\r\n        </div>\r\n        <template v-if=\"props.slots\">\r\n            <template v-for=\"name in props.slots\">\r\n                <div class=\"level-item\" v-if=\"slots[name]\">\r\n                    <!--\r\n                        @slot The dynamically produced slot for each slot\r\n                    -->\r\n                    <slot :name=\"name\"/>\r\n                </div>\r\n            </template>\r\n        </template>\r\n        <div class=\"level-right\" v-if=\"props.right_slots\">\r\n            <template v-for=\"name in props.right_slots\">\r\n                <div class=\"level-item\" v-if=\"slots[name]\">\r\n                    <!--\r\n                        @slot The dynamically produced slot for each right slot\r\n                    -->\r\n                    <slot :name=\"name\"/>\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { useSlots } from 'vue';\r\n\r\n/**\r\n * A multi-purpose horizontal level, which can contain almost any other element\r\n * \r\n * @displayName Level\r\n * @link https://bulma.io/documentation/layout/level/\r\n */\r\n\r\n    const props = defineProps<{\r\n        left_slots?:string[],\r\n        right_slots?:string[],\r\n        slots?:string[]\r\n    }>();\r\n\r\n    const slots = useSlots();\r\n</script>","<template>\r\n    <article class=\"media\">\r\n        <figure class=\"media-left\" v-if=\"slots.left_figure\">\r\n            <!--\r\n                @slot A slot containing an image to place on the left of the article\r\n            -->\r\n            <slot name=\"left_figure\"/>\r\n        </figure>\r\n        <div class=\"media-content\">\r\n            <!--\r\n                @slot The content of this media item\r\n            -->\r\n            <slot name=\"content\"/>\r\n        </div>\r\n        <div class=\"media-right\" v-if=\"slots.right_section\">\r\n            <!--\r\n                @slot The content to place on the right of this article\r\n            -->\r\n            <slot name=\"right_section\"/>\r\n        </div>\r\n    </article>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * The famous media object prevalent in social media interfaces, but useful in any context\r\n *  \r\n * @displayName Media\r\n * @link https://bulma.io/documentation/layout/media-object/\r\n */\r\n    import {useSlots} from 'vue';\r\n\r\n    const slots = useSlots();\r\n </script>","<template>\r\n    <div :class=\"{'modal':true,'is-active':props.display}\" :style=\"`z-index:${props.z_index}`\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content\">\r\n            <!--\r\n                @slot The content to display within the modal\r\n            -->\r\n            <slot/>\r\n        </div>\r\n        <button class=\"modal-close is-large\" aria-label=\"close\" v-if=\"props.has_close\" @click=\"emit('close')\"></button>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Mocal component to use\r\n * \r\n * @displayName Modal\r\n * @link https://bulma.io/documentation/components/modal/\r\n */\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * Indicates if the modal should be shown\r\n         */\r\n       display?:boolean,\r\n       /**\r\n        * Indicates if there should be a close button\r\n        */\r\n       has_close?:boolean,\r\n       /**\r\n        * Set the z-index if something beyond the default is desired\r\n        */\r\n       z_index?:number\r\n    }>(),{\r\n        display:true,\r\n        has_close:false,\r\n        z_index:99\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the close button is clicked\r\n         */\r\n        close:[]\r\n    }>();\r\n</script>","<template>\r\n    <div class=\"modal\" :class=\"{'is-active':props.show}\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-card\" :class=\"classes\">\r\n            <div class=\"card-icon\" v-if=\"props.icon\">\r\n                <div class=\"card-icon-wrapper\">\r\n                    <Icon :icon=\"props.icon\" :size=\"IconSizes.xxlarge\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-card-head\" v-if=\"slots.header\">\r\n                <!--\r\n                    @slot The header of the modal card\r\n                -->\r\n                <slot name=\"header\" v-bind=\"headerProps\" />\r\n                <button v-if=\"props.has_close\" class=\"delete\" aria-label=\"close\" @click=\"emit('close')\"></button>\r\n            </div>\r\n            <div class=\"modal-card-body\" v-if=\"slots.content\">\r\n                <!--\r\n                    @slot The body of the modal card\r\n                -->\r\n                <slot name=\"content\" />\r\n            </div>\r\n            <div class=\"modal-card-foot\" v-if=\"slots.footer\">\r\n                <!--\r\n                    @slot The footer of the modal card\r\n                -->\r\n                <slot name=\"footer\" v-bind=\"footerProps\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Modal Card component to use\r\n * \r\n * @displayName ModalCard\r\n * @link https://bulma.io/documentation/components/modal/\r\n */\r\n    import {computed, useSlots} from 'vue';\r\n    import Icon from '../common/icon.vue';\r\n    import { IconSizes } from '../../enums';\r\n\r\n    const slots = useSlots();\r\n    \r\n    const props = defineProps<{\r\n        /**\r\n         * Indicates if the modal card should be shown\r\n         */\r\n        show?:boolean,\r\n        /**\r\n         * Indicates if a close icon should exist on the card\r\n         */\r\n        has_close?:boolean,\r\n        /**\r\n         * Indicates if the modal card should be set to the maximum allowed width\r\n         */\r\n        max_width?:boolean,\r\n        /**\r\n         * Indicates if the modal card should be set to the maximum allowed height\r\n         */\r\n        max_height?:boolean\r\n        /**\r\n         * Indicates if the width of the card should be based on the content or a built in maximum\r\n         */\r\n         full_width?:boolean,\r\n        /**\r\n         * Indicates if the height of the card should be based on the content or a build in maximum\r\n         */\r\n        full_height?:boolean,\r\n        /**\r\n         * Set an icon to overlay within the header\r\n         */\r\n        icon?:string\r\n    }>();\r\n    \r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the close button is clicked\r\n         */\r\n        close:[]\r\n    }>();\r\n\r\n    const footerProps = {\r\n        addon_class: 'card-footer-item'\r\n    };\r\n\r\n    const headerProps = {\r\n        header_class: 'modal-card-title has-text-centered',\r\n        addon_class: 'card-header-icon'\r\n    };\r\n\r\n    const classes = computed<string[]>(()=>{\r\n        var result=[];\r\n        if (props.full_width){result.push('is-fullwidth');}\r\n        if (props.full_height){result.push('is-fullheight');}\r\n        if (props.max_width){result.push('is-maxwidth');}\r\n        if (props.max_height){result.push('is-maxheight');}\r\n        return result;\r\n    });\r\n</script>","<template>\r\n    <div class=\"panel\" :class=\"addons\">\r\n        <div class=\"panel-heading\" v-if=\"slots.header\" v-show=\"!(props.hidden_sections??[]).includes('header')\">\r\n            <!--\r\n                @slot The header for the panel\r\n            -->\r\n            <slot name=\"header\"/>\r\n        </div>\r\n        <div class=\"panel-tabs\" v-if=\"slots.tabs\" v-show=\"!(props.hidden_sections??[]).includes('tabs')\">\r\n            <!--\r\n                @slot The tabs container for the panel\r\n            -->\r\n            <slot name=\"tabs\"/>\r\n        </div>\r\n        <template v-for=\"name in BlockNames\">\r\n            <div class=\"panel-block\" v-if=\"slots[name]\"  v-show=\"!(props.hidden_sections??[]).includes(name)\">\r\n                <!--\r\n                    @slot A slot named after the slots provided inside the block names.  If none are supplied default is the minimum.\r\n                -->\r\n                <slot :name=\"name\"/>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed,useSlots } from 'vue';\r\n    import { ColorTypes } from '../../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Panel component to use\r\n * \r\n * @displayName Panel\r\n * @link https://bulma.io/documentation/components/panel/\r\n */\r\n    const slots : any = useSlots();\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * The color of the panel\r\n         */\r\n        type?:ColorTypes,\r\n        /**\r\n         * Panel blocks to supply via slot names, if not specified the minimal slot will be default\r\n         */\r\n        block_names?:string[],\r\n        /**\r\n         * Indicates if the width of the panel should be based on the content instead of a built in maximum\r\n         */\r\n        full_width?:boolean,\r\n        /**\r\n         * Indicates if the height of the panel should be based on the content instead of a built in maximum\r\n         */\r\n        full_height?:boolean,\r\n        /**\r\n         * The names of the panel blocks to hide\r\n         */\r\n        hidden_sections?:string[]\r\n    }>();\r\n\r\n    const BlockNames = computed<string[]>(() => props.block_names??['default']);\r\n\r\n    const addons = computed<string[]>(() => {\r\n        return [\r\n            (props.type ? `is-${props.type}` : ''),\r\n            (props.full_width ? 'is-fullwidth' : ''),\r\n            (props.full_height ? 'is-fullheight' : '')\r\n        ];\r\n    });\r\n</script>","<template>\r\n    <section :class=\"['section',(props.size ? `is-${props.size}` : '')]\">\r\n        <!--\r\n            @slot The content to place inside the section\r\n        -->\r\n        <slot/>\r\n    </section>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A generic section container used in laying out \r\n * \r\n * @displayName Section\r\n * @link https://bulma.io/documentation/layout/section/\r\n */\r\n    import {SectionSizes} from '../../enums';\r\n\r\n    const props = defineProps<{\r\n        size?:SectionSizes\r\n    }>();\r\n </script>","<template>\r\n    <div :class=\"containerClasses\">\r\n        <table :class=\"tableClasses\">\r\n            <thead v-if=\"slots.thead\">\r\n                <!--\r\n                    @slot The thead portion of the table\r\n                -->\r\n                <slot name=\"thead\" />\r\n            </thead>\r\n            <tbody v-if=\"slots.tbody\">\r\n                <!--\r\n                    @slot The tbody portion of the table\r\n                -->\r\n                <slot name=\"tbody\"/>\r\n            </tbody>\r\n            <tfoot v-if=\"slots.tfoot\">\r\n                <!--\r\n                    @slot The tfoot portion of the table\r\n                -->\r\n                <slot name=\"tfoot\"/>\r\n            </tfoot>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Table component to use\r\n * \r\n * @displayName Table\r\n * @link https://bulma.io/documentation/elements/table/\r\n */\r\n    import {computed, useSlots} from 'vue';\r\n    import { ITableProperties } from './interfaces';\r\n\r\n    const slots = useSlots();\r\n    \r\n    const props = withDefaults(defineProps<ITableProperties>(),{\r\n        fixed_header:false,\r\n        scrollable:false\r\n    });\r\n    \r\n    const containerClasses = computed<string[]>(()=>{\r\n        return [\r\n            (props.scrollable?'table-container':''),\r\n            (props.fixed_header&&!props.scrollable?'is-fixed':'')\r\n        ];\r\n    });\r\n\r\n    const tableClasses = computed<string[]>(()=>{\r\n        return [\r\n            'table',\r\n            'is-striped',\r\n            'is-hoverable',\r\n            (props.fixed_header&&!props.scrollable?'is-fixed':''),\r\n            (props.full_width?'is-fullwidth':''),\r\n            (props.narrow?'is-narrow':'')\r\n        ];\r\n    });\r\n</script>","<template>\r\n    <div :class=\"Classes\">\r\n        <ul>\r\n            <Promised :promise=\"props.tabs\">\r\n                <template v-slot=\"{response}\">\r\n                    <li v-for=\"tab in (response as Tab[])\" :class=\"{'is-active':tab.active}\">\r\n                        <a :href=\"tab.href\" @click=\"tabClicked($event,tab)\">\r\n                            <span v-if=\"tab.icon\" class=\"icon is-small\">\r\n                                <Icon :icon=\"tab.icon\"/>\r\n                            </span>\r\n                            <span>{{tab.title}}</span>\r\n                        </a>\r\n                    </li>\r\n                </template>\r\n                <template #pending>\r\n                    <li style=\"width:100px;\">\r\n                        <Progress :size=\"Sizes.small\"/>\r\n                    </li>\r\n                </template>\r\n            </Promised>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Tabs component to use (Tab Navigation)\r\n * \r\n * @displayName Tabs\r\n * @link https://bulma.io/documentation/components/tabs/\r\n */\r\n    import {Icon,Promised, Progress} from '../common/';\r\n    import {computed} from 'vue';\r\n    import { TabAlignments, TabStyles,Sizes } from '../../enums';\r\n    import {Tab} from './interfaces';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The tabs to be defined \r\n         */\r\n        tabs:Tab[]|Promise<Tab[]>,\r\n        /**\r\n         * The alignment of the tabs\r\n         */\r\n        alignment?:TabAlignments,\r\n        /**\r\n         * The color styling for the tabs\r\n         */\r\n        type?:TabStyles,\r\n        /**\r\n         * Indicates if the width should just be max and not based on the content\r\n         */\r\n        full_width?:boolean\r\n    }>(),{\r\n        alignment:TabAlignments.left\r\n    });\r\n\r\n    const Classes = computed<string[]>(()=>{\r\n        return [\r\n            'tabs',\r\n            `is-${props.alignment}`,\r\n            (props.type?`is-${props.type}`:''),\r\n            (props.full_width?'is-fullwidth':'')\r\n        ];\r\n    });\r\n\r\n    const tabClicked = (event:any,tab:Tab):void=> {\r\n        if ((tab.href === null || tab.href === undefined)\r\n            && tab.onClick!==undefined) {\r\n            event.preventDefault();\r\n            tab.onClick();\r\n        }\r\n    }\r\n</script>","<template>\r\n    <div :class=\"Classes\">\r\n        <div class=\"slideout-background\" @click=\"emit('close')\"></div>\r\n        <div class=\"slideout-content\">\r\n            <button v-if=\"props.has_close\" class=\"delete\" aria-label=\"close\" @click=\"emit('close')\"></button>\r\n            <div class=\"slideout-head\" v-if=\"slots.header\">\r\n                <!--\r\n                    @slot The header of the slideout\r\n                -->\r\n                <slot name=\"header\" v-bind=\"headerProps\"/>\r\n            </div>\r\n            <div class=\"slideout-body\">\r\n                <!--\r\n                    @slot The content of the slideout\r\n                -->\r\n                <slot name=\"content\" v-if=\"slots.content\"/>\r\n                <!--\r\n                    @slot The default content if no slot is specified\r\n                -->\r\n                <slot/>\r\n            </div>\r\n            <div class=\"slideout-foot\" v-if=\"slots.footer\">\r\n                <!--\r\n                    @slot The footer of the slideout\r\n                -->\r\n                <slot name=\"footer\" v-bind=\"footerProps\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * A Slideout component to use, similar to a modal card, slides out from the right\r\n * \r\n * @displayName Slideout\r\n */\r\n    import { ColorTypes } from '../../enums';\r\n    import {computed, useSlots } from 'vue';\r\n\r\n    const slots = useSlots();\r\n\r\n    const footerProps = {\r\n        addon_class: ''\r\n    };\r\n\r\n    const headerProps = {\r\n        header_class: 'slideout-title has-text-centered',\r\n        addon_class: ''\r\n    };\r\n\r\n    const props = defineProps<{\r\n        /**\r\n         * Indicates if the slideout should be shown\r\n         */\r\n        show?:boolean,\r\n        /**\r\n         * Indicates if there should be a close button\r\n         */\r\n        has_close?:boolean,\r\n        /**\r\n         * Indicates that the width of this slideout should be the maximum allowed and not based on the content\r\n         */\r\n        full_width?:boolean,\r\n        /**\r\n         * The color type to use for the slideout\r\n         */\r\n        type?:ColorTypes,\r\n        /**\r\n         * Indicates if the animation of the slideout when appears should be disabled\r\n         */\r\n        not_animated?:boolean\r\n    }>();\r\n    \r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the close button is clicked\r\n         */\r\n        close:[]\r\n    }>();\r\n\r\n    const Classes = computed<string[]>(()=>{\r\n        return [\r\n            'slideout',\r\n            (props.show?'is-active':''),\r\n            (props.type!==undefined && props.type!==null?`is-${props.type}`:''),\r\n            (props.full_width?'is-fullwidth':''),\r\n            (props.not_animated?'no-animation':'')\r\n        ];\r\n    });\r\n</script>","<template>\r\n    <div :class=\"['steps-container',(props.orientation===StepWizardOrientations.default?'' : `${props.orientation}`)]\">\r\n        <ul :class=\"['steps',(props.size===Sizes.normal ? '' : `is-${props.size}`)]\">\r\n            <li v-for=\"step,index in props.steps\" \r\n                :class=\"['step-item', (index<currentIndex ? 'is-completed' : ''),(index===currentIndex?'is-active':''),(step.type?`is-${step.type}` : '')]\">\r\n                <div class=\"step-marker is-clickable\" @click=\"emit('changedStep',index)\">\r\n                    <Icon v-if=\"step.icon\" :icon=\"step.icon\"/>\r\n                    <span v-else>{{ index+1 }}</span>\r\n                </div>\r\n                <div class=\"step-details\" v-if=\"step.title!==''\">\r\n                    <p class=\"step-title\">{{ step.title }}</p>\r\n                    <p v-if=\"step.description\">{{step.description}}</p>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        <div class=\"steps-content\">\r\n            <template v-for=\"step,index in props.steps\">\r\n                <div :class=\"['step-content',(index===currentIndex?'is-active':'')]\" v-if=\"slots[step.name]\">\r\n                    <!--\r\n                        @slot a slot created for each step named with the step's name\r\n                    -->\r\n                    <slot :name=\"step.name\"/>\r\n                </div>\r\n            </template>\r\n        </div>\r\n        <div class=\"steps-actions\">\r\n            <template v-if=\"props.use_previous_next\">\r\n                <div class=\"steps-action\">\r\n                    <Button :title=\"Previous\" :disabled=\"currentIndex===0\" @click=\"()=>{currentIndex--;}\"/>\r\n                </div>\r\n                <div class=\"steps-action\" v-if=\"currentIndex+1<props.steps.length\">\r\n                    <Button :title=\"Next\" :disabled=\"!(props.steps[currentIndex].is_valid===undefined ? true : props.steps[currentIndex].is_valid)\" @click=\"()=>{currentIndex++;}\"/>\r\n                </div>\r\n                <div class=\"steps-action\" v-if=\"currentIndex+1===props.steps.length\">\r\n                    <Button :title=\"Done\" :disabled=\"!(props.steps[currentIndex].is_valid===undefined ? true : props.steps[currentIndex].is_valid)\" @click=\"()=>{emit('done');}\"/>\r\n                </div>\r\n            </template>\r\n            <template v-else>\r\n                <!--\r\n                    @slot a slot created for the actions (as a default) when use_previous_next is false\r\n                -->\r\n                <slot name=\"actions\" v-if=\"slots['actions']\"/>\r\n                <template v-for=\"step,index in props.steps\">\r\n                    <!--\r\n                        @slot a slot created for each of the actions of each step when use_previous_next is false\r\n                    -->\r\n                    <slot :name=\"`actions-${step.name}`\" v-if=\"slots[`actions-${step.name}`] && index===currentIndex\"/>\r\n                </template>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to supply Step Wizard control\r\n * All steps are 0 based index\r\n * \r\n * @displayName StepWizard\r\n * @link https://aramvisser.github.io/bulma-steps/\r\n */\r\n    import { Sizes, StepWizardOrientations } from '../../enums';\r\n    import { WizardStep } from '../common/typeDefinitions';\r\n    import Icon from '../common/icon.vue';\r\n    import Button from '../common/buttons/button.vue';\r\n    import {ref,computed, inject,watch,useSlots, MaybeRef } from 'vue';\r\n    import translate from '../../messages/messages.js';\r\n    import { useLanguage } from '../shared';\r\n\r\n    const slots = useSlots();\r\n    const Language = useLanguage(inject);\r\n\r\n    const Previous = computed<string>(()=>translate('Pagination.Previous',Language));\r\n    const Next = computed<string>(()=>translate('Pagination.Next',Language));\r\n    const Done = computed<string>(()=>translate('Wizard.Done',Language));\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The steps for the wizard\r\n         */\r\n        steps:WizardStep[],\r\n        /**\r\n         * Inidicates if the actions should be defaulted to Previous/Next/Done\r\n         */\r\n        use_previous_next?:boolean,\r\n        /**\r\n         * The size of the steps indicators to use\r\n         */\r\n        size?:Sizes,\r\n        /**\r\n         * The starting step index\r\n         */\r\n        starting_index?:MaybeRef<number>,\r\n        /**\r\n         * The orientation style for the wizard\r\n         */\r\n        orientation?:StepWizardOrientations\r\n    }>(),\r\n    {\r\n        size:Sizes.normal,\r\n        use_previous_next:true,\r\n        orientation:StepWizardOrientations.default\r\n    });\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the wizard is completed (last step succeeded and done clicked)\r\n         */\r\n        done: [],\r\n        /**\r\n         * Emitted when the step is changed to a given index\r\n         */\r\n        changedStep:[index:number]\r\n    }>();\r\n\r\n    const currentIndex = ref(props.starting_index??0);\r\n\r\n    watch(currentIndex,(value:number,oldValue:number)=>{\r\n        emit('changedStep',value);\r\n    });\r\n\r\n    defineExpose({\r\n        /**\r\n         * Used to move to a given step in the wizard\r\n         * \r\n         * @param index the step index to move to\r\n         */\r\n        moveToStep:(index:number)=>{\r\n            currentIndex.value=index;\r\n        }\r\n    });\r\n</script>","import './sass/bulma-skins.scss';\r\nimport {css} from '../components/utilities';\r\nimport { SkinTypes } from '../enums';\r\n\r\nconst url = (document.currentScript===null||document.currentScript===undefined ? import.meta.url : document.currentScript['src']);\r\n\r\ncss(`${url.substring(0,url.lastIndexOf(\"/\"))}/vibrantvue.min.css`);\r\n\r\nexport const AVAIABLE_SKINS:string[] = Object.values(SkinTypes)\r\n    .filter((value,index,array) => array.indexOf(value)===index);\r\n\r\nexport const setSkin = (skin?:SkinTypes|null):void => {\r\n    document.getElementsByTagName('html')[0].setAttribute('data-theme',`${skin?skin:''}`);\r\n};\r\n","<template>\r\n    <Card>\r\n        <template #header=\"exts\" v-if=\"props.title\">\r\n            <h3 :class=\"exts.header_class\">{{props.title}}</h3>\r\n        </template>\r\n        <template #content>\r\n            <canvas ref=\"canvas\" :style=\"Style\"/>\r\n        </template>\r\n        <template #footer=\"exts\" v-if=\"props.show_refresh!=null&&props.show_refresh!=undefined&&props.show_refresh\">\r\n            <ButtonRefresh :class=\"exts.addon_class\" @click=\"Refresh\"/>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch, computed, onMounted, ref,inject,MaybeRef } from 'vue';\r\n    import Card from '../layout/card.vue';\r\n    import ButtonRefresh from '../common/buttons/button-refresh.vue';\r\n    import {ChartTypes,ChartLegendPositions} from '../../enums';\r\n    import { useChartJS } from '../shared';\r\n    import { loadNonEs6Module } from '../utilities';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create a ChartJS chart\r\n * \r\n * @displayName Chart\r\n * @link https://www.chartjs.org/\r\n * @link_title Chart JS\r\n */\r\n    const chartURL = `${useChartJS(inject)}chart.umd.min.js`;\r\n\r\n    const canvas = ref<any>(null);\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * The labels to use\r\n         */\r\n        labels?:string[], \r\n        /**\r\n         * The data sets to supply\r\n         */\r\n        datasets:unknown[], \r\n        /**\r\n         * The type of chart to render\r\n         */\r\n        type?:ChartTypes, \r\n        /**\r\n         * The title for the chart\r\n         */\r\n        title?:string, \r\n        /**\r\n         * Inidicates if a Refresh button should be supplied\r\n         */\r\n        show_refresh?:boolean, \r\n        /**\r\n         * The width for the chart\r\n         */\r\n        width?:number, \r\n        /**\r\n         * The height for the chart\r\n         */\r\n        height?:number, \r\n        /**\r\n         * The position of the chart legend\r\n         */\r\n        legend_position?:ChartLegendPositions, \r\n        /**\r\n         * The scales to supply to the chart\r\n         */\r\n        scales?:unknown[], \r\n        /**\r\n         * The tooltips to supply to the chart\r\n         */\r\n        tooltips?:unknown\r\n    }>(),{\r\n        legend_position:ChartLegendPositions.right\r\n    });\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when a legend item is clicked.  Supplies both the chart object and the legend item clicked\r\n         */\r\n        legendItemClick: [chart:unknown,legendItem:unknown]\r\n    }>();\r\n\r\n    let chart : any|null = null;\r\n\r\n    const Refresh = () => {\r\n        if (chart != null)\r\n            chart.update();\r\n    };\r\n    const Style = computed(() => {\r\n        var ret = '';\r\n        if (props.width) {\r\n            ret = `width:${props.width}px;`;\r\n        }\r\n        if (props.height) {\r\n            ret += `height:${props.height}px;`;\r\n        }\r\n        return ret;\r\n    });\r\n\r\n    watch(()=>props.type, (val) => {\r\n        if (chart != null)\r\n            chart.type = (val == null ? 'line' : val);\r\n    });\r\n    watch(()=>props.labels,\r\n        (value) => {\r\n            if (chart != null) {\r\n                chart.data.labels = value;\r\n                if (props.show_refresh == null || !props.show_refresh) {\r\n                    Refresh();\r\n                }\r\n            }\r\n        },\r\n        { deep: true }\r\n    );\r\n    watch(()=>props.datasets,\r\n        (value) => {\r\n            if (chart != null) {\r\n                chart.data.datasets = value;\r\n                if (props.show_refresh == null || !props.show_refresh) {\r\n                    Refresh();\r\n                }\r\n            }\r\n        },\r\n        { deep: true }\r\n    );\r\n\r\n    onMounted(async () => {\r\n        let opts :any = {\r\n            responsive: true,\r\n            animation: {\r\n                duration: 100\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    position: `${props.legend_position}`,\r\n                    labels: {\r\n                        filter: (item, chrt) => {\r\n                            return item.text != undefined;\r\n                        }\r\n                    },\r\n                    onClick: function (e, legendItem) {\r\n                        emit('legendItemClick',chart,legendItem);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (props.scales!= null && props.scales != undefined) {\r\n            opts.scales = props.scales;\r\n        }\r\n        if (props.tooltips != null && props.tooltips != undefined) {\r\n            opts.tooltips = props.tooltips;\r\n        }\r\n        const { Chart } = await loadNonEs6Module(chartURL,['Chart']);\r\n        chart = new Chart(canvas.value.getContext('2d'), {\r\n            type: (props.type == null ? 'line' : props.type),\r\n            data: {\r\n                datasets: props.datasets,\r\n                labels: props.labels\r\n            },\r\n            options: opts\r\n        });\r\n        chart.update();\r\n    });\r\n</script>","<template>\r\n    <div class=\"editor\" ref=\"container\" />\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create a Code Writer interface based on acejs\r\n * \r\n * @displayName CodeWriter\r\n * @link https://ace.c9.io/\r\n * @link_title Ace Editor\r\n */\r\n    import { watch, computed, onMounted, markRaw, ref,inject } from 'vue';\r\n    import { useAceJS } from '../shared';\r\n    import { AutoCompleteEntry } from './typeDefinitions';\r\n    import { loadNonEs6Module } from '../utilities';\r\n\r\n    const aceJS = `${useAceJS(inject)}src-noconflict/ace.js`;\r\n\r\n    const props = withDefaults(defineProps<{\r\n        /**\r\n         * What code language to use\r\n         */\r\n        language?:string,\r\n        /**\r\n         * Provided auto complete entries to supply\r\n         */\r\n        autocompletes?:AutoCompleteEntry[],\r\n        /**\r\n         * Inidicates if the code writer is readonly\r\n         */\r\n        readonly?:boolean,\r\n        /**\r\n         * The value of the code writer content\r\n         */\r\n        value?:string\r\n    }>(),{\r\n        readonly:false,\r\n        value:''\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the content of the code has changed.  Provides the new content value.\r\n         */\r\n        'valueChanged':[value:string]\r\n    }>();\r\n\r\n    const container = ref(null);\r\n    const editor  = ref<any|null>(null);\r\n\r\n    const getValue = function () {\r\n        return (editor.value.getValue() == '' ? null : editor.value.getValue());\r\n    };\r\n    const setValue = function (value) {\r\n        editor.value.setValue((value == null ? '' : value));\r\n    };\r\n\r\n    watch(()=>props.readonly, (val) => {\r\n        editor.value.setReadOnly((val == null || val == undefined ? false : val));\r\n    });\r\n    watch(()=>props.value, (val) => {\r\n        setValue(val);\r\n    });\r\n    watch(()=>props.language, (val) => {\r\n        editor.value.getSession().setMode(val);\r\n    });\r\n\r\n    const MinAutoCompleteLength = computed(() => {\r\n        let ret = Number.MAX_SAFE_INTEGER;\r\n        if (props.autocompletes != undefined && props.autocompletes != null) {\r\n            for (let x = 0; x < props.autocompletes.length; x++) {\r\n                if (props.autocompletes[x].method.indexOf('.')>=0) {\r\n                    ret = Math.min(ret, props.autocompletes[x].method.indexOf('.'));\r\n                } else {\r\n                    ret = Math.min(ret, props.autocompletes[x].method.length);\r\n                }\r\n            }\r\n            if (ret > 3 && props.autocompletes.length > 0) {\r\n                let allSame = true;\r\n                let start = props.autocompletes[0].method.substring(0, 3);\r\n                for (let x = 0; x < props.autocompletes.length; x++) {\r\n                    if (props.autocompletes[x].method.substring(0, 3) != start) {\r\n                        allSame = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (allSame)\r\n                    ret = 3;\r\n            }\r\n        }\r\n        return ret;\r\n    });\r\n\r\n    defineExpose({ \r\n        /**\r\n         * Gets the current value \r\n         */\r\n        getValue, \r\n        /**\r\n         * Sets the current value\r\n         * \r\n         * @param value string|null\r\n         */\r\n        setValue \r\n    });\r\n\r\n    onMounted(async () => {\r\n        const {ace} =  await loadNonEs6Module(aceJS,['ace']);\r\n        editor.value = markRaw(ace.edit(container.value.$el, {\r\n            mode: props.language,\r\n            selectionStyle: 'text',\r\n            minLines: 20,\r\n            maxLines: 50,\r\n            enableBasicAutocompletion: true\r\n        }));\r\n\r\n        editor.value.setReadOnly(props.readonly === undefined || props.readonly === null ? false : props.readonly);\r\n\r\n        if (props.value !== null && props.value !== undefined) {\r\n            editor.value.setValue(props.value);\r\n        }\r\n\r\n        editor.value.on('change', () => emit('valueChanged', getValue()));\r\n\r\n        if (props.autocompletes !== null && props.autocompletes !== undefined) {\r\n            editor.value.setOptions({\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true\r\n            });\r\n\r\n            editor.value.completers = [{\r\n                identifierRegexps: [/[a-zA-Z0-9_\\.]+/],\r\n                getCompletions: function (editor, session, pos, prefix, callback) {\r\n                    var completes:any[] = [];\r\n                    prefix = prefix.toUpperCase();\r\n                    if (prefix.length >= MinAutoCompleteLength) {\r\n                        completes = props.autocompletes!\r\n                                .filter(ac=>ac.method.toUpperCase().startsWith(prefix)\r\n                                && ac.method.length>prefix.legend)\r\n                                .map(ac=>{\r\n                                    return {\r\n                                        caption: ac.method + (ac.description === null || ac.description === undefined ? '' : '->' + ac.description),\r\n                                        value: ac.method,\r\n                                        meta: 'autos'\r\n                                    }\r\n                                });\r\n                    }\r\n                    if (completes.length === 0) { callback(null, []); return; }\r\n                    callback(null, completes.map(function (word) {\r\n                        return word;\r\n                    }));\r\n                }\r\n            }];\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Table v-bind=\"tableProperties\">\r\n        <template #thead>\r\n            <tr v-if=\"props.has_filter??false\">\r\n                <th colspan=\"100%\">\r\n                    <Filter @filter=\"(value)=>emit('filter',value)\"/>\r\n                </th>\r\n            </tr>\r\n            <tr v-for=\"row in props.columns\">\r\n                <th v-for=\"col in row\" :colspan=\"col.headerColspan\" :rowspan=\"col.headerRowspan\" :class=\"col.headerClass\">\r\n                    <!--\r\n                        @slot A slot automatically created for each column.  Available to make custom header content for a given column\r\n                    -->\r\n                    <slot :name=\"`head-${col.id}`\">\r\n                        <span v-if=\"props.current_sort!==undefined && props.current_sort!==null && (col.canSort??false) && col.id===props.current_sort.column\" \r\n                            class=\"icon-text is-clickable\"\r\n                            @click=\"changeSort(col.id)\">\r\n                            <span class=\"icon\">\r\n                                <Icon icon=\"arrow-down\"/>\r\n                            </span>\r\n                            <span>{{col.title}}</span>\r\n                        </span>\r\n                        <template v-else>\r\n                            {{col.title}}\r\n                        </template>\r\n                    </slot>\r\n                </th>\r\n            </tr>\r\n        </template>\r\n        <template #tbody>\r\n            <template v-if=\"props.data===null || props.data.length===0\">\r\n                <tr>\r\n                    <td colspan=\"100%\">\r\n                        <Progress v-if=\"props.data===null\"/>\r\n                        <Notification :message=\"props.empty_message??'No data available'\" v-else/>\r\n                    </td>\r\n                </tr>\r\n            </template>\r\n            <template v-else>\r\n                <template v-for=\"drow,index in props.data\">\r\n                    <tr :key=\"`row-${index}-${cindex}`\" \r\n                        v-for=\"row,cindex in ColumnRows.filter(col=>col.some(c=>!(c.headerOnly??false)))\"\r\n                        :class=\"extractRowClass(index,drow)\">\r\n                        <td :key=\"`data-${index}-${cindex}`\" \r\n                            v-for=\"col in row.filter(c=>!(c.headerOnly??false))\" \r\n                            :colspan=\"col.dataColspan\" \r\n                            :rowspan=\"col.dataRowspan\"\r\n                            :class=\"getCellClass(index,col,drow,(col.propertyName?drow[col.propertyName] : undefined))\"\r\n                            @click=\"emit('cellClicked',{rowIndex:index,data:(col.propertyName?drow[col.propertyName] : null),row:drow})\"\r\n                        >\r\n                        <!--\r\n                            @slot A slot automatically created for each column.  Available to make custom table cell content for a given column.  Supplied with rowIndex,data,row.\r\n                        -->\r\n                            <slot :name=\"`body-${col.id}`\" v-bind=\"{rowIndex:index,data:(col.propertyName?drow[col.propertyName] : null),row:drow}\">\r\n                                {{(col.propertyName?drow[col.propertyName] : null)}}\r\n                            </slot>\r\n                        </td>\r\n                    </tr>\r\n                </template>\r\n            </template>\r\n        </template>\r\n        <template #tfoot v-if=\"supportsPagination||slots.tfoot_head||slots.tfoot_bottom\">\r\n            <!--\r\n                @slot appears prior to where the pagination footer would appear in the tfoot\r\n            -->\r\n            <slot name=\"tfoot_head\"  v-if=\"slots.tfoot_head\"/>\r\n            <tr v-if=\"supportsPagination\">\r\n                <td colspan=\"100%\">\r\n                    <Pagination \r\n                        v-bind=\"paginationProperties\" \r\n                        @moveForward=\"emit('moveForward')\"\r\n                        @moveBack=\"emit('moveBack')\"\r\n                        @goToPage=\"(page:number)=>emit('goToPage',page)\"/>\r\n                </td>\r\n            </tr>\r\n            <!--\r\n                @slot appears after where the pagination footer would appear in the tfoot\r\n            -->\r\n            <slot name=\"tfoot_bottom\" v-if=\"slots.tfoot_bottom\"/>\r\n        </template>\r\n    </Table>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create a Grid on the screen.\r\n * The grid can support pagination, filtering, etc all layed out in a table that can be defined \r\n * and implemented with minimal parts such as defining the tbody or a loop for the elements\r\n * \r\n * @displayName Grid\r\n */\r\n    import { CellData, GridSort, IGridProperties,GridColumn } from './typeDefinitions';\r\n    import Table from '../layout/table.vue';\r\n    import Pagination from '../common/pagination.vue';\r\n    import Notification from '../common/notification.vue';\r\n    import Progress from '../common/progress.vue';\r\n    import Filter from '../common/filter.vue';\r\n    import Icon from '../common/icon.vue';\r\n    import { ITableProperties } from '../layout/interfaces';\r\n    import { IPaginationProperties } from '../common/typeDefinitions';\r\n    import {computed, toValue, useSlots} from 'vue';\r\n    import { Sizes } from '../../enums';\r\n\r\n    const slots : any = useSlots();\r\n\r\n    const props = withDefaults(defineProps<IGridProperties>(),{\r\n        use_next:true,\r\n        size:Sizes.small,\r\n        rounded:false ,\r\n        has_previous:undefined,\r\n        has_more:undefined\r\n    });\r\n    const emit = defineEmits<{\r\n        /**\r\n         * Emitted when the Forward button is clicked on the Pagination\r\n         */\r\n        moveForward:[],\r\n        /**\r\n         * Emitted when the Back button is clicked on the Pagination\r\n         */\r\n        moveBack:[],\r\n        /**\r\n         * Emitted when a Specific Page button is clicked on the Pagiation\r\n         */\r\n        goToPage:[page:number],\r\n        /**\r\n         * Emitted when a table cell is clicked on\r\n         */\r\n        cellClicked:[cell:CellData],\r\n        /**\r\n         * Emitted when a header that is sortable is clicked on to invoke a sort\r\n         */\r\n        sort:[by:GridSort],\r\n        /**\r\n         * Emitted when the Filter item emits a request to filter\r\n         */\r\n        filter:[value:string|null]\r\n    }>();\r\n    const tableProperties:ITableProperties = {\r\n        scrollable:props.scrollable,\r\n        fixed_header:props.fixed_header,\r\n        full_width:props.full_width,\r\n        narrow:props.narrow\r\n    };\r\n    const paginationProperties:IPaginationProperties = {\r\n        use_next:props.use_next,\r\n        has_more:props.has_more,\r\n        has_previous:props.has_previous,\r\n        size:props.size,\r\n        rounded:props.rounded,\r\n        button_type:props.button_type,\r\n        total_pages:props.total_pages,\r\n        current_page:props.current_page\r\n    };\r\n    const supportsPagination = computed<boolean>(()=>{\r\n        if (props.has_previous){return true;}\r\n        if (props.has_more){return true;}\r\n        if (props.current_page!==undefined && props.total_pages!==undefined && toValue<number>(props.total_pages)>1){return true;}\r\n        return false;\r\n    });\r\n    const ColumnRows = computed(()=>{\r\n        if (props.column_rows===undefined || props.column_rows.length===0){\r\n            return props.columns;\r\n        }\r\n        return props.column_rows.map(row=>{\r\n            return row.map(c=>props.columns.filter(col=>col.some(i=>i.id===c))[0].find(col=>col.id===c));\r\n        });\r\n    });\r\n    const changeSort = (column:string) => {\r\n        if (props.current_sort!==undefined && props.current_sort!==null \r\n        && props.current_sort.column===column){\r\n            emit('sort',{\r\n                column:column,\r\n                ascending:!props.current_sort.ascending\r\n            });\r\n        }else{\r\n            emit('sort',{\r\n                column:column,\r\n                ascending:true\r\n            });\r\n        }\r\n    };\r\n    const extractRowClass = (rowIndex:number,row:any): string|null=>{\r\n        if (props.getRowColor){\r\n            let color = props.getRowColor(rowIndex,row);\r\n            if (color){\r\n                return `is-${color}`;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    const getCellClass = (rowIndex:number,col:GridColumn,row:any,data:any|undefined) : string|null =>{\r\n        let result:string|null = '';\r\n        if (col.cellClass || col.getCellColor){\r\n            if(col.cellClass){\r\n                result += `${col.cellClass}`;\r\n            }\r\n            if (col.getCellColor){\r\n                let cellColor = col.getCellColor(rowIndex,row,data);\r\n                if (cellColor){\r\n                    result+= ` is-${cellColor}`;\r\n                }\r\n            }\r\n        }\r\n        return (result===''?null:result);\r\n    }\r\n</script>","<template>\r\n    <div class=\"progress-group\">\r\n        <ToolTip v-for=\"entry,index in Entries\" is=\"progress\" \r\n            :class=\"`progress is-${entry.size} is-${entry.type} ${entry.onClick!==undefined ? 'is-clickable' : ''}`\" \r\n            :key=\"index\"\r\n            :text=\"entry.caption??''\"\r\n            :position=\"ToolTipPositions.bottom\"\r\n            :style=\"{width:`${entry.percentage}%`}\"\r\n            value=\"100\" \r\n            max=\"100\"\r\n            @click=\"()=>{if(entry.onClick!==undefined) entry.onClick();}\">\r\n            {{ `${entry.percentage}%` }}\r\n        </ToolTip>\r\n        <progress v-if=\"Filler!=null\" \r\n            :class=\"`progress is-${Filler.size} is-${Filler.type}`\" \r\n            :style=\"{width:`${Filler.percentage}%`}\"\r\n            value=\"100\" \r\n            max=\"100\">\r\n            {{ `${Filler.percentage}%` }}\r\n        </progress>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n/**\r\n * Used to create a group of progressbars as a way of displaying multiple progress steps\r\n * \r\n * @displayName ProgressGroup\r\n * @link https://github.com/CreativeBulma/bulma-tooltip/\r\n */\r\n    import {computed,MaybeRef} from 'vue';\r\n    import {ToolTip} from '../common/index';\r\n    import {ProgressEntry} from './typeDefinitions';\r\n    import { Sizes,ColorTypes,ToolTipPositions } from '../../enums';\r\n\r\n    type MappedEntry = {\r\n        size:Sizes,\r\n        type:ColorTypes|null,\r\n        caption:MaybeRef<string>|null,\r\n        percentage:number,\r\n        onClick?:()=>void\r\n    };\r\n\r\n    const props = defineProps<{\r\n        /**\r\n        * The size to use\r\n        */\r\n        size?:Sizes,\r\n        /**\r\n         * The values of the progress\r\n         */\r\n        values:ProgressEntry[],\r\n        /**\r\n         * The maxmimum total value to use for scaling\r\n         */\r\n        max?:number\r\n    }>();\r\n\r\n    const Total = computed<number>(()=>{\r\n        let total:number = 0;\r\n        for(let x=0;x<props.values.length;x++){\r\n            total+=props.values[x].value;\r\n        }\r\n        return total;\r\n    });\r\n\r\n    const Entries = computed<MappedEntry[]>(()=>{\r\n        return props.values.map<MappedEntry>(val=>{\r\n            return {\r\n                size:props.size??Sizes.normal,\r\n                type:val.type,\r\n                percentage:(val.value/(props.max??Total.value))*100,\r\n                caption:val.caption??`${val.value}`,\r\n                onClick:val.onClick\r\n            };\r\n        });\r\n    });\r\n\r\n    const Filler = computed<MappedEntry|null>(()=>{\r\n        if (props.max!==undefined){\r\n            return {\r\n                size:props.size??Sizes.normal,\r\n                type:null,\r\n                percentage:((props.max!-Total.value)/props.max!)*100,\r\n                caption:null\r\n            };\r\n        }\r\n        return null;\r\n    });\r\n</script>","import * as common from './common/index.ts';\r\nimport { MenuItem,ParentMenuItem,WizardStep,DropDownItem,DropDownBlock } from './common/typeDefinitions.ts';\r\nimport * as dragging from './dragging/index.ts';\r\nimport * as form from './form/index.ts';\r\nimport * as layout from './layout/index.ts';\r\nimport * as skin from '../css/skins.ts';\r\nimport * as enums from '../enums.ts';\r\nimport {ValueChangedEvent,ListItemValue,SelectListItemValue,FormInputType,TranslateMethod} from './form/typeDefinitions.ts';\r\nimport * as utilities from './utilities.ts';\r\nimport * as extended from './extended/index.ts';\r\nimport {AutoCompleteEntry} from './extended/typeDefinitions.ts';\r\nimport {Tab} from './layout/interfaces.ts';\r\n\r\nexport const {Animation,Button,ButtonsContainer,ButtonAdd,ButtonCancel,ButtonDelete,ButtonDisable,ButtonDownload,\r\n    ButtonEdit,ButtonEnable,ButtonOkay,ButtonPrint,ButtonRefresh,ButtonSave,ButtonUpload,\r\n    CheckMark,DropDown,DynamicSlot,Filter,Icon,Message,Notification,PageNotification,Pagination,Promised,\r\n    Progress,NavBar,Menu,MenuLabel,MenuList,MenuEntry,ToolTip,Badge,Tag,Tags} = common;\r\nexport const {DraggableItem,DropZone,Sortable} = dragging;\r\nexport const {AutoComplete,CheckboxGroup,Checkbox,DateField,ComponentForm,FullEditor,\r\n    Header,Hidden,NumberField,Paragraph,RadioGroup,Select,Switch,Text,\r\n    TextArea,Time,FormComponent} = form;\r\nexport const {Banner,Box,Breadcrumbs,Card,ColumnContainer,Footer,\r\n    Level,List,Media,Modal,ModalCard,Panel,Section,Table,Tabs,Slideout,StepWizard} = layout;\r\nexport const {AVAIABLE_SKINS,setSkin} = skin;\r\nexport const {ColorTypes,NoticeTypes,Sizes,AnimationSpeeds,AnimationTypes,IconSizes,ChartLegendPositions,ChartTypes,DropZoneQuadrants,\r\n    BreadCrumbAlignments,BreadCrumbSeperators,ColumnContainerModifiers,ColumnSizes,\r\n    ColumnOffsetSizes,BorderTypes,TabAlignments,TabStyles,TileSizes,TileTypes,FixedNavBarPositions,FixedMenuPositions,\r\n    BadgePositions, ToolTipPositions,ToolTipTextAlignments,ButtonAlignments,SectionSizes} = enums;\r\nexport const {loadNonEs6Module} = utilities;\r\nexport const {Chart,CodeWriter,Grid,ProgressGroup} = extended;\r\nexport type {ValueChangedEvent,ListItemValue,WizardStep,DropDownItem,DropDownBlock,SelectListItemValue,FormInputType,TranslateMethod,MenuItem,ParentMenuItem,AutoCompleteEntry,Tab};"],"names":["css","path","resolve","promises","head","url","index","style","prom","results","loadedModules","loadNonEs6Module","windowProperties","res","m","timeout","script","idx","result","p","generateUUID","cryptoRef","r","_a","ColorTypes","NoticeTypes","Sizes","AnimationSpeeds","AnimationTypes","ChartTypes","ChartLegendPositions","IconSizes","DropZoneQuadrants","BreadCrumbAlignments","BreadCrumbSeperators","ColumnContainerModifiers","ColumnSizes","ColumnOffsetSizes","BorderTypes","TabAlignments","TabStyles","TileSizes","TileTypes","FixedNavBarPositions","FixedMenuPositions","BadgePositions","ToolTipPositions","ToolTipTextAlignments","ButtonAlignments","SkinTypes","SectionSizes","StepWizardOrientations","useLanguage","inject","ILanguage","computed","useIconSet","IIconSet","useSummerNote","useFontAwesome","useAnimation","useChartJS","useAceJS","baseURL","props","__props","getSpeedTime","speed","getAnimationName","animation","getSpeedName","Duration","onEnter","onExit","repeatingClass","brandsUrl","allUrl","brandsId","reg","urlReg","brands","ref","loading","loadStyles","urlBase","iconSet","el","content","match","watch","clazz","emit","__emit","Classes","button","filter","pagination","date","form$1","wizard","messages","form","translate","message","language","split","obj","lang","Language","Properties","menuID","isActive","Blocks","toValue","item","GetItemClasses","entry","GetItemURL","ProcessItemClick","reload","sortMethod","filterReg","imps","names","components","FilterReg","onMounted","Filter","val","FilterKeyPress","event","Size","Type","iconType","Previous","Next","ButtonClass","GoToPage","currentPage","HasPrevious","HasNext","Pages","center","x","moveBack","moveForward","goToPage","page","error","ErrorMessage","isRejected","isResolved","isPending","data","watchPromise","promise","tmp","unref","err","percentage","processClick","classCheck","isDragging","handleDisabled","handle","Disabled","Start","Stop","clickHandle","isOver","lastQuadrant","getQuadrant","bounds","mid","ret","Enter","Leave","Moved","Drop","slots","useSlots","Items","li","invokeClick","sorted","selectedIndex","currentIndex","currentQuadrant","oldValue","newValue","dragStart","itemEntered","itemDropped","elem","HIDDEN_FIELDS_PROPERTY","DISABLED_FIELDS_PROPERTY","defaultTranslate","value","useTranslator","Translate","useValuesList","name","iHiddenValues","readonly","iDisabledValues","hiddenValues","h","disabledValues","resolveListItems","values","tmpResult","NoResults","Translator","selected","searchString","classes","contentSpan","getValue","setValue","vals","v","paste","keyPress","clear","focusInput","addSelected","removeSelected","__expose","Error","checks","locked","Values","tchecks","check","Label","addDays","days","padLeft","char","length","processFormat","curCode","tzo","hours","minutes","monthName","years","format","regTime","styles","minute","hour","regDate","regDateTime","time","showInterface","preValue","calendar","reactive","Messages","isValid","d","MonthName","Weeks","curVal","stopMonth","week","processTimeChange","selectDate","day","cancel","calendarClicked","cancelClicked","MoveMonth","direction","cdnBase","__temp","__restore","_withAsyncContext","snote","contents","onUnmounted","mergeValueGroups","parent","dest","base","tvalues","s","t","sv","sr","isChecked","tabKeyCode","tab","newLine","keyPressed","selectionStart","selectionEnd","start","end","chunk","addnewLine","chunks","c","mod","Columns","classData","b","getColumnSize","form_columns","size","convertInputToColumn","input","refs","Rows","row","curLen","inp","field","len","hiddenInputs","disabledFields","k","inputs","isHidden","FormInputTypes","LABELLED_FIELDS","TRANSLATE_FIELDS","type","inputType","Autocomplete","Button","CheckboxGroup","Checkbox","Date","FullEditor","Header","Hidden","Number","Paragraph","RadioGroup","Select","Switch","Text","Textarea","Time","Subform","fieldName","altFieldName","hasLabel","l","inputProps","f","key","valueChanged","buttonClicked","provide","getValues","setValues","hiddenFields","hideField","showField","Class","onClick","footerProps","headerProps","BlockNames","addons","containerClasses","tableClasses","tabClicked","Done","AVAIABLE_SKINS","array","setSkin","skin","chartURL","canvas","chart","Refresh","Style","opts","chrt","e","legendItem","Chart","aceJS","container","editor","MinAutoCompleteLength","allSame","ace","markRaw","session","pos","prefix","callback","completes","ac","word","tableProperties","paginationProperties","supportsPagination","ColumnRows","col","i","changeSort","column","extractRowClass","rowIndex","color","getCellClass","cellColor","Total","total","Entries","Filler","Animation","ButtonsContainer","ButtonAdd","ButtonCancel","ButtonDelete","ButtonDisable","ButtonDownload","ButtonEdit","ButtonEnable","ButtonOkay","ButtonPrint","ButtonRefresh","ButtonSave","ButtonUpload","CheckMark","DropDown","DynamicSlot","Icon","Message","Notification","PageNotification","Pagination","Promised","Progress","NavBar","Menu","MenuLabel","MenuList","MenuEntry","ToolTip","Badge","Tag","Tags","common","DraggableItem","DropZone","Sortable","dragging","AutoComplete","DateField","ComponentForm","NumberField","TextArea","FormComponent","Banner","Box","Breadcrumbs","Card","ColumnContainer","Footer","Level","List","Media","Modal","ModalCard","Panel","Section","Table","Tabs","Slideout","StepWizard","layout","enums","utilities","CodeWriter","Grid","ProgressGroup","extended"],"mappings":"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"}