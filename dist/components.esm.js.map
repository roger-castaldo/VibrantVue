{"version":3,"file":"components.esm.js","sources":["../src/components/utilities.ts","../src/components/enums.ts","../src/components/common/animation.vue","../src/components/shared.ts","../src/components/common/icon.vue","../src/components/common/button.vue","../src/messages/messages.ts","../src/components/common/button-add.vue","../src/components/common/button-cancel.vue","../src/components/common/button-delete.vue","../src/components/common/button-disable.vue","../src/components/common/button-download.vue","../src/components/common/button-edit.vue","../src/components/common/button-enable.vue","../src/components/common/button-okay.vue","../src/components/common/button-print.vue","../src/components/common/button-refresh.vue","../src/components/common/button-save.vue","../src/components/common/button-upload.vue","../src/components/layout/card.vue","../src/components/common/chart.vue","../src/components/common/dynamic-slot.vue","../src/components/common/filter.vue","../src/components/common/message.vue","../src/components/common/notification.vue","../src/components/common/page-notification.vue","../src/components/common/pagination.vue","../src/components/common/usePromise.ts","../src/components/common/Promised.ts","../src/components/common/progress.vue","../src/components/dragging/draggable-item.vue","../src/components/dragging/dropzone.vue","../src/components/layout/list.vue","../src/components/layout/list-item.vue","../src/components/dragging/sortable.vue","../src/components/form/common.ts","../src/components/form/autocomplete.vue","../src/components/form/button.vue","../src/components/form/checkbox-group.vue","../src/components/form/checkbox.vue","../src/components/form/dates.ts","../src/components/form/time.vue","../src/components/form/date.vue","../src/components/form/full-editor.vue","../src/components/form/header.vue","../src/components/form/hidden.vue","../src/components/form/number.vue","../src/components/form/paragraph.vue","../src/components/form/radio-group.vue","../src/components/form/select.vue","../src/components/form/switch.vue","../src/components/form/text.vue","../src/components/form/textarea.vue","../src/components/form/row.vue","../src/components/form/subform.vue","../src/components/form/form-component.vue","../src/components/form/component-form.vue","../src/components/layout/banner.vue","../src/components/layout/box.vue","../src/components/layout/breadcrumbs-item.vue","../src/components/layout/breadcrumbs.vue","../src/components/layout/column-container.vue","../src/components/layout/column.vue","../src/components/layout/modal-card.vue","../src/components/layout/panel.vue","../src/components/layout/table.vue","../src/components/layout/tabs-tab.vue","../src/components/layout/tabs.vue","../src/components/layout/tile.vue","../src/css/skins.js","../src/components/index.ts"],"sourcesContent":["export const css = (path:string|string[]) : Promise<any>=>{\r\n    return new Promise((resolve) => {\r\n        let promises = [];\r\n        var head = document.head || document.getElementsByTagName('head')[0];\r\n        (!Array.isArray(path) ? [path] : path).forEach((url,index) => {\r\n            if (!url.toLowerCase().endsWith('.css')) {\r\n                url += '.css';\r\n            }\r\n            let add = document.querySelectorAll('link[server_path=\"' + url + '\"]').length == 0;\r\n            if (add) {\r\n                let style = document.createElement('link');\r\n                let prom = new Promise(resolve => {\r\n                    style.onload = function () { resolve(url); };\r\n                });\r\n                promises[index] = prom;\r\n                head.appendChild(style);\r\n                style.setAttribute('rel', 'stylesheet');\r\n                style.setAttribute('type', 'text/css');\r\n                style.setAttribute('server_path', url);\r\n                style.setAttribute('href', url);\r\n            } else\r\n                promises[index] = Promise.resolve(url);\r\n        });\r\n        Promise.all(promises).then(results => {\r\n            resolve(results);\r\n        });\r\n    });\r\n};","export enum ColorTypes{ white, black, light, dark, primary, link, info, success, warning, danger };\r\nexport enum NoticeTypes{ info, success, warning, danger };\r\nexport enum Sizes{small,normal,medium,large};\r\nexport enum AnimationSpeeds{slower,slow,fast,faster};\r\nexport enum AnimationTypes{bounce,flash,pulse,rubberBand,shakeX,shakeY,headShake,swing,tada,wobble,jello,heartBeat,\r\nbackOutDown,backOutLeft,backOutRight,backOutUp,\r\nbounceIn,bounceInDown,bounceInLeft,bounceInRight,bounceInUp,\r\nbounceOut,boundOutDown,bounceOutLeft,boundOutRight,bounceOutUp,\r\nfadeIn,fadeInDown,fadeInDownBig,fadeInLeft,fadeInLeftBig,fadeInRight,fadeInRightBig,fadeInUp,fadeInUpBig,fadeInTopLeft,fadeInTopRight,fadeInBottomLeft,fadeInBottomRight,\r\nfadeOut,fadeOutDown,fadeOutDownBig,fadeOutLeft,fadeOutLeftBig,fadeOutRight,fadeOutRightBig,fadeOutUp,fadeOutUpBig,fadeOutTopLeft,fadeOutTopRight,fadeOutBottomRight,fadeOutBottomLeft,\r\nflip,flipInX,flipInY,flipOutX,flipOutY,\r\nlightSpeedInRight,lightSpeedInLeft,lightSpeedOutRight,lightSpeedOutLeft,\r\nrotateIn,rotateInDownLeft,rotateInDownRight,rotateInUpLeft,rotateInUpRight,\r\nrotateOut,rotateOutDownLeft,rotateOutDownRight,rotateOutUpLeft,rotateOutUpRight,\r\nhinge,jackInTheBox,rollIn,rollOut,\r\nzoomIn,zoomInDown,zoomInLeft,zoomInRight,zoomInUp,\r\nzoomOut,zoomOutDown,zoomOutLeft,zoomOutRight,zoomOutUp,\r\nslideInDown,slideInLeft,slideInRight,slideInUp,\r\nslideOutDown,slideOutLeft,slideOutRight,slideOutUp};\r\nexport enum ChartTypes{area,bar,bubble,doughnut,pie,line,polarArea,radar,scatter};\r\nexport enum ChartLegendPositions{top,left,bottom,right,chartArea};\r\nexport enum IconSizes{xxsmall,xsmall,small,normal,large,xlarge,xxlarge};\r\nexport enum DropZoneQuadrants{center,topLeft,bottomLeft,topRight,bottomRight,top,bottom};\r\nexport enum BreadCrumbAlignments{centered,right,left};\r\nexport enum BreadCrumbSeperators{arrow,button,dot,succeeds};\r\nexport enum ColumnContainerModifiers {mobile, desktop, gapless, multiline, centered, borderleft, borderright, borderbottom, bordertop, fullWidth, fullHeight};\r\nexport enum ColumnSizes {three_quarters=\"three-quarters\",two_thirds=\"two-thirds\",half=\"half\",one_third=\"one-third\",\r\none_quarter=\"one-quarter\",full=\"full\",one_fifth=\"one-fifth\",two_fifths=\"two-fifths\",three_fifths=\"three-fifths\",\r\nfour_fifths=\"four-fifths\",one=\"1\",two=\"2\",three=\"3\",four=\"4\",five=\"5\",six=\"6\",seven=\"7\",eight=\"8\",nine=\"9\",\r\nten=\"10\",eleven=\"11\",twelve=\"12\",narrow=\"narrow\",wide=\"wide\"};\r\nexport enum ColumnOffsetSizes {three_quarters=\"three-quarters\",two_thirds=\"two-thirds\",half=\"half\",one_third=\"one-third\",\r\none_quarter=\"one-quarter\",one_fifth=\"one-fifth\",two_fifths=\"two-fifths\",three_fifths=\"three-fifths\",four_fifths=\"four-fifths\",\r\none=\"1\",two=\"2\",three=\"3\",four=\"4\",five=\"5\",six=\"6\",seven=\"7\",eight=\"8\",nine=\"9\",ten=\"10\",eleven=\"11\"}\r\nexport enum BorderTypes {left,right,bottom,top,all};\r\nexport enum TabAlignments{centered,right,left};\r\nexport enum TabStyles{boxed,toggled,roundToggle};\r\nexport enum TileSizes{one=\"1\",two=\"2\",three=\"3\",four=\"4\",five=\"5\",six=\"6\",seven=\"7\",eight=\"8\",nine=\"9\",ten=\"10\",eleven=\"11\",twelve=\"12\"};\r\nexport enum TileTypes{parent,child,ancestor}","ï»¿<template>\r\n    <Transition :enter-active-class=\"onEnter\" :leave-active-class=\"onExit\" :duration=\"Duration\" v-if=\"!props.repeating\">\r\n        <slot/>\r\n    </Transition>\r\n    <div :class=\"repeatingClass\" v-else>\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import {css} from '../utilities.js';\r\n    import { computed } from 'vue';\r\n    import { AnimationSpeeds, AnimationTypes } from '../enums';\r\n\r\n    css('https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css');\r\n\r\n    const props = withDefaults(defineProps<{\r\n        incoming?:AnimationTypes,\r\n        outgoing?:AnimationTypes,\r\n        inout?:AnimationTypes\r\n        speed?:AnimationSpeeds, \r\n        speedIn?:AnimationSpeeds, \r\n        speedOut?:AnimationSpeeds,\r\n        repeating?:AnimationTypes\r\n    }>(),{\r\n        speed:AnimationSpeeds.slow\r\n    });\r\n\r\n    const getSpeedTime = (speed:AnimationSpeeds) => {\r\n        switch (speed) {\r\n            case AnimationSpeeds.slower:\r\n                return 3000;\r\n                break;\r\n            case AnimationSpeeds.fast:\r\n                return 800;\r\n                break;\r\n            case AnimationSpeeds.faster:\r\n                return 500;\r\n                break;\r\n            default:\r\n                return 2000;\r\n                break;\r\n        }\r\n    };\r\n\r\n    const getAnimationName = (animation?:AnimationTypes) => {\r\n        return (animation === undefined ? '' : `animate__${animation}`);\r\n    };\r\n    const getSpeedName = (speed?:AnimationSpeeds)=> {\r\n        return (speed === undefined ? 'animate__slow' : `animate__${speed}`);\r\n    };\r\n    \r\n    const Duration = computed(() => {\r\n        return {\r\n            enter: getSpeedTime(props.speedIn ?? props.speed),\r\n            leave: getSpeedTime(props.speedOut ?? props.speed)\r\n        };\r\n    });\r\n    const onEnter = computed(() => {\r\n        return [\r\n            'animate__animated',\r\n            getAnimationName(props.incoming ?? props.inout),\r\n            getSpeedName(props.speedIn ?? props.speed)\r\n        ].join(' ');\r\n    });\r\n    const onExit = computed(() => {\r\n        return [\r\n            'animate__animated',\r\n            getAnimationName(props.outgoing ?? props.inout),\r\n            getSpeedName(props.speedOut ?? props.speed)\r\n        ].join(' ');\r\n    });\r\n    const repeatingClass = computed(() => {\r\n        return [\r\n            'animate__animated',\r\n            'animate__infinite',\r\n            getAnimationName(props.repeating),\r\n            getSpeedName(props.speed ?? '')\r\n        ].join(' ');\r\n    });\r\n</script>","import { ComputedRef, computed } from \"vue\";\r\n\r\nexport const useLanguage= (inject: (<T>(string,T?)=> T | undefined)) : ComputedRef<string> => {\r\n    const ILanguage = inject<string>(\"Language\",'en');\r\n    const Language = computed<string>(()=>ILanguage);\r\n  \r\n    return Language;\r\n};\r\n\r\nexport const useIconSet= (inject: (<T>(string,T?)=> T | undefined)) : ComputedRef<string> => {\r\n    const IIconSet = inject<string>(\"IconSet\",'solid');\r\n    const IconSet = computed<string>(()=>IIconSet);\r\n  \r\n    return IconSet;\r\n};","ï»¿<template>\r\n    <i :class=\"clazz\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { css } from '../utilities.js';\r\n    import { computed,onMounted,inject } from 'vue';\r\n    import {IconSizes} from '../enums';\r\n    import { useIconSet } from '../shared';\r\n\r\n    const urlBase:string = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/';\r\n    const brandsUrl:string = `${urlBase}brands.min.css`;\r\n    const brandsId:string = 'brands_style_sheet';\r\n\r\n    css([\r\n        `${urlBase}all.min.css`\r\n    ]);\r\n\r\n    const reg = /\\.fa-([^: ]+):before/g;\r\n    const brands = [];\r\n\r\n    if (!document.getElementById(brandsId)) {\r\n        let el = document.createElement('style');\r\n        el.setAttribute('type', 'text/css');\r\n        el.setAttribute('server_path', brandsUrl);\r\n        el.setAttribute('id', brandsId);\r\n        document.head.appendChild(el);\r\n        fetch(brandsUrl)\r\n            .then(result => {\r\n                if (result.ok) {\r\n                    result.text().then(content => {\r\n                        [...content.matchAll(reg)].forEach(match => {\r\n                            brands.push(match[1]);\r\n                        });\r\n                        el.innerText = content;\r\n                    });\r\n                }\r\n            });\r\n    }\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        icon:string,\r\n        size?:IconSizes\r\n    }>();\r\n\r\n    const IconSet = useIconSet(inject);\r\n\r\n    const clazz = computed(() => {\r\n        let results = [];\r\n        if (props.icon !== undefined && props.icon !== null) {\r\n            if (brands.indexOf(props.icon) >= 0) {\r\n                results.push('fa-brands');\r\n            } else {\r\n                results.push('fa-ico');\r\n                results.push(`fa-${IconSet.value}`);\r\n            }\r\n        }\r\n        if (props.icon !== undefined && props.icon !== null) {\r\n            results.push((props.icon.indexOf('fa-') == -1 ? ' fa-' : ' ') + props.icon);\r\n        }\r\n        if (props.size !== undefined && props.size !== null && props.size!==IconSizes.normal) {\r\n            switch(props.size){\r\n                case IconSizes.xxsmall:results.push('fa-2xs');break;\r\n                case IconSizes.xsmall:results.push('fa-xs');break;\r\n                case IconSizes.small:results.push('fa-sm');break;\r\n                case IconSizes.large:results.push('fa-lg');break;\r\n                case IconSizes.xlarge:results.push('fa-xl');break;\r\n                case IconSizes.xxlarge:results.push('fa-2xl');break;\r\n            }\r\n        }\r\n        return results;\r\n    });\r\n\r\n    onMounted(()=>css(`${urlBase}${IconSet.value}.min.css`));\r\n</script>\r\n\r\n<style>\r\n    .fa-ico.fa-md {\r\n        font-size: 15px !important;\r\n    }\r\n</style>","<template>\r\n    <button :class=\"Classes\" v-bind:disabled=\"props.disabled\" v-on:click=\"emit('click')\">\r\n        <span class=\"icon is-small\" v-if=\"props.icon!=null\">\r\n            <Icon :icon=\"props.icon\"/>\r\n        </span>\r\n        <span v-if=\"props.title!=null\">{{props.title}}</span>\r\n    </button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import Icon from './icon.vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import {computed} from 'vue';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<{\r\n       icon?:string|null,\r\n       disabled?:boolean,\r\n       type?:ColorTypes,\r\n       size?:Sizes,\r\n       title?:string|null,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>(),{\r\n        type:ColorTypes.primary,\r\n        size:Sizes.small\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n\r\n    const Classes = computed(()=>{\r\n        let result = ['button','is-rounded',`is-${props.size}`,`is-${props.type}`];\r\n        if (props.disabled){\r\n            result.push('disabled');\r\n        }\r\n        if (props.addonclass){\r\n            result.push(props.addonclass);\r\n        }\r\n        if (props.hidemobile){result.push('is-hidden-mobile');}\r\n        if (props.hidetablet){result.push('is-hidden-tablet-only');}\r\n        if (props.hidedesktop){result.push('is-hidden-desktop is-hidden-widescreen');}\r\n        return result;\r\n    });\r\n</script>\r\n","import * as button from './button/messages.json';\r\nimport * as filter from './filter/messages.json';\r\nimport * as pagination from './pagination/messages.json';\r\nimport * as date from './date/messages.json';\r\nimport { ComputedRef } from 'vue';\r\n\r\nconst messages = {\r\n    Button:button,\r\n    Filter:filter,\r\n    Pagination:pagination,\r\n    Date:date\r\n};\r\n\r\nexport default (message:string,language:ComputedRef<string>):string=>{\r\n    let obj = messages[message.substring(0,message.indexOf('.'))];\r\n    if (obj!==undefined){\r\n        if (obj[language.value]===undefined){\r\n            obj = obj['en'];\r\n        }else{\r\n            obj=obj[language.value];\r\n        }\r\n        obj = obj[message.substring(message.indexOf('.')+1)];\r\n    }\r\n    if (obj===undefined){\r\n        throw `unable to locate message ${message}`;\r\n    }\r\n    return obj;\r\n};","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\nimport { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Add',Language),\r\n            icon:'plus',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Cancel',Language),\r\n            icon:'window-close',\r\n            type:ColorTypes.danger,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Delete',Language),\r\n            icon:'trash-alt',\r\n            type:ColorTypes.danger,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Disable',Language),\r\n            icon:'times-circle',\r\n            type:ColorTypes.danger,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Download',Language),\r\n            icon:'download',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Edit',Language),\r\n            icon:'edit',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Enable',Language),\r\n            icon:'check',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Okay',Language),\r\n            icon:'check',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Print',Language),\r\n            icon:'print',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Refresh',Language),\r\n            icon:'sync',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Save',Language),\r\n            icon:'save',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>\r\n","<template>\r\n    <Button v-bind=\"Properties\" @click=\"emit('click')\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import translate from '../../messages/messages';\r\n    import Button from './button.vue';\r\n    import {computed,inject} from 'vue';\r\n    import {ColorTypes,Sizes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        click: []\r\n    }>();\r\n    const props = defineProps<{\r\n       disabled?:boolean,\r\n       size?:Sizes,\r\n       addonclass?:string|null,\r\n       hidemobile?:boolean,\r\n       hidetablet?:boolean,\r\n       hidedesktop?:boolean \r\n    }>();\r\n    const Language = useLanguage(inject);\r\n    const Properties = computed(()=>{\r\n        return {\r\n            Title:translate('Button.Upload',Language),\r\n            icon:'upload',\r\n            type:ColorTypes.primary,\r\n            disabled:props.disabled,\r\n            addonclass:props.addonclass,\r\n            hidemobile:props.hidemobile,\r\n            hidetablet:props.hidetablet,\r\n            hidedesktop:props.hidedesktop,\r\n            size:props.size\r\n        }\r\n    });\r\n</script>\r\n","ï»¿<template>\r\n    <div class=\"card\" v-bind:class=\"{'is-fullwidth':props.fullWidth,'is-fullheight':props.fullHeight}\">\r\n        <div class=\"card-header\">\r\n            <slot name=\"header\" v-bind=\"headerProps\"/>\r\n        </div>\r\n        <div class=\"card-content\">\r\n            <slot name=\"content\"/>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <slot name=\"footer\" v-bind=\"footerProps\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        fullWidth?:boolean,\r\n        fullHeight?:boolean\r\n    }>();\r\n\r\n    const footerProps = {\r\n        addonclass: 'card-footer-item'\r\n    };\r\n\r\n    const headerProps = {\r\n        headerClass: 'card-header-title is-centered',\r\n        addonclass: 'card-header-icon'\r\n    };\r\n</script>","<template>\r\n    <Card>\r\n        <template #header=\"exts\" v-if=\"props.title\">\r\n            <h3 :class=\"exts.headerClass\">{{props.title}}</h3>\r\n        </template>\r\n        <template #content>\r\n            <canvas ref=\"canvas\" :style=\"Style\"/>\r\n        </template>\r\n        <template #footer=\"exts\" v-if=\"props.showRefresh!=null&&props.showRefresh!=undefined&&props.showRefresh\">\r\n            <ButtonRefresh v-bind=\"exts\" v-on:click=\"Refresh\"/>\r\n        </template>\r\n    </Card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch, computed, onMounted, ref } from 'vue';\r\n    import Card from '../layout/card.vue';\r\n    import ButtonRefresh from './button-refresh.vue';\r\n    import 'jquery';\r\n    import {ChartTypes,ChartLegendPositions} from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const canvas = ref<any>(null);\r\n\r\n    const props = withDefaults(defineProps<{\r\n        labels?:string[], \r\n        datasets:unknown[], \r\n        type?:ChartTypes, \r\n        title?:string, \r\n        showRefresh?:boolean, \r\n        width?:number, \r\n        height?:number, \r\n        legendPosition?:ChartLegendPositions, \r\n        scales?:unknown[], \r\n        tooltips?:unknown\r\n    }>(),{\r\n        legendPosition:ChartLegendPositions.right\r\n    });\r\n    const emit = defineEmits<{\r\n        legendItemClick: [chart:unknown,legendItem:unknown]\r\n    }>();\r\n\r\n    let chart : any|null = null;\r\n\r\n    const Refresh = () => {\r\n        if (chart != null)\r\n            chart.update();\r\n    };\r\n    const Style = computed(() => {\r\n        var ret = '';\r\n        if (props.width) {\r\n            ret = `width:${props.width}px;`;\r\n        }\r\n        if (props.height) {\r\n            ret += `height:${props.height}px;`;\r\n        }\r\n        return ret;\r\n    });\r\n\r\n    watch([props.type], (val) => {\r\n        if (chart != null)\r\n            chart.type = (val == null ? 'line' : val);\r\n    });\r\n    watch([props.labels],\r\n        (value) => {\r\n            if (chart != null) {\r\n                chart.data.labels = value;\r\n                if (props.showRefresh == null || !props.showRefresh) {\r\n                    Refresh();\r\n                }\r\n            }\r\n        },\r\n        { deep: true }\r\n    );\r\n    watch([props.datasets],\r\n        (value) => {\r\n            if (chart != null) {\r\n                chart.data.datasets = value;\r\n                if (props.showRefresh == null || !props.showRefresh) {\r\n                    Refresh();\r\n                }\r\n            }\r\n        },\r\n        { deep: true }\r\n    );\r\n\r\n    onMounted(async () => {\r\n        let opts :any = {\r\n            responsive: true,\r\n            animation: {\r\n                duration: 100\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    position: `${props.legendPosition}`,\r\n                    labels: {\r\n                        filter: (item, chrt) => {\r\n                            return item.text != undefined;\r\n                        }\r\n                    },\r\n                    onClick: function (e, legendItem) {\r\n                        emit('legendItemClick',chart,legendItem);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (props.scales!= null && props.scales != undefined) {\r\n            opts.scales = props.scales;\r\n        }\r\n        if (props.tooltips != null && props.tooltips != undefined) {\r\n            opts.tooltips = props.tooltips;\r\n        }\r\n        const Chart = await import('chart');\r\n        chart = new Chart(canvas.val.getContext('2d'), {\r\n            type: (props.type == null ? 'line' : props.type),\r\n            data: {\r\n                datasets: props.datasets,\r\n                labels: props.labels\r\n            },\r\n            options: opts\r\n        });\r\n        chart.update();\r\n    });\r\n</script>","ï»¿<template>\r\n    <component v-for=\"comp in components\" :is=\"comp\" v-bind=\"props.props\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,watch,computed,onMounted,ComputedRef } from 'vue';\r\n\r\n    const reload = async (url:string,sortMethod?:(a:string,b:string)=>number,filterReg?:ComputedRef<RegExp>) : Promise<any[]> => {\r\n        let imps = await import(url);\r\n        const names = Object.keys(imps);\r\n        if (sortMethod) {\r\n            names.sort(sortMethod);\r\n        }\r\n        return names\r\n            .filter(n=>filterReg===undefined||filterReg.value.test(n))\r\n            .map(n=>{\r\n                return imps[n];\r\n            });\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const components = ref<any[]|null>(null);\r\n\r\n    const props = defineProps<{\r\n        props?:any,\r\n        url:string,\r\n        filter?:string,\r\n        sortMethod:(a:string,b:string)=>number\r\n    }>();\r\n\r\n    const FilterReg = computed<RegExp>(() => {\r\n        return (props.filter == null || props.filter == undefined ? null : new RegExp('^' + props.filter.replaceAll('.', '\\\\.').replaceAll('*', '.+') + '$'));\r\n    });\r\n\r\n    watch([props.url,props.filter], async () => {\r\n        components.value = await reload(props.url, props.sortMethod, FilterReg);\r\n    });\r\n\r\n    onMounted(async () => {\r\n        components.value = await reload(props.url, props.sortMethod, FilterReg);\r\n    });\r\n</script>","<template>\r\n    <div class=\"control has-icons-left\">\r\n        <input type=\"text\" class=\"input is-expanded is-rounded\" :placeholder=\"Filter\" v-model=\"filter\" v-on:keypress=\"FilterKeyPress\">\r\n        <span class=\"icon is-small is-left\">\r\n            <Icon icon=\"filter\"/>   \r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { onMounted, ref, watch, computed,inject } from 'vue';\r\n    import Icon from './icon.vue';\r\n    import translate from '../../messages/messages.js';\r\nimport { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        default_value?:string\r\n    }>();\r\n\r\n    const emit = defineEmits<{\r\n        filter:[value:string|null]\r\n    }>();\r\n\r\n    const Language = useLanguage(inject);\r\n    const Filter = computed<string>(()=>translate('Filter.Filter',Language));\r\n\r\n    const filter = ref<string|null>(null);\r\n\r\n    watch([filter], (val) => {\r\n        if (val[0] === '') {\r\n            if (props.default_value) {\r\n                filter.value = props.default_value;\r\n                emit('filter', (filter.value == '' ? null : filter.value));\r\n            }\r\n        }\r\n    });\r\n\r\n    const FilterKeyPress = (event:any) => {\r\n        if (event.keyCode == 13) {\r\n            emit('filter', (filter.value == '' ? null : filter.value));\r\n        }\r\n    };\r\n\r\n    onMounted(()=>{\r\n        if (props.default_value) {\r\n            filter.value = props.default_value;\r\n        }\r\n    });\r\n</script>\r\n","<template>\r\n    <article :class=\"['message',Size,Type]\">\r\n        <div class=\"message-header\" v-if=\"props.title\">\r\n            <p>{{props.title}}</p>\r\n            <button class=\"delete\" aria-label=\"delete\" v-if=\"props.hasDelete\"></button>\r\n        </div>\r\n        <div class=\"message-body\">\r\n            {{props.message}}\r\n            <slot/>\r\n        </div>\r\n    </article>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import { ColorTypes,Sizes } from '../enums';\r\n    import {computed} from 'vue';\r\n\r\n    const props = withDefaults(defineProps<{\r\n            type?: ColorTypes|null,\r\n            message?:string|null,\r\n            hasDelete?:boolean,\r\n            title?:string|null,\r\n            size?:Sizes|null\r\n        }>(),{\r\n            type:ColorTypes.primary,\r\n            message:null,\r\n            hasDelete:false,\r\n            title:null,\r\n            size:Sizes.normal\r\n        });\r\n\r\n    const Size = computed(()=>{\r\n        if (props.size===Sizes.normal){return null;}\r\n        else{return `is-${props.size}`;}\r\n    });\r\n    const Type = computed(()=>`is-${props.type}`);\r\n</script>","<template>\r\n    <div v-bind:class=\"['notification','is-'+props.type,(props.light ? 'is-light' : '')]\">\r\n        {{props.message}}\r\n        <slot />\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import {NoticeTypes} from '../enums';\r\n\r\n    const props = withDefaults(defineProps<{\r\n            type?: NoticeTypes|null,\r\n            message?:string|null,\r\n            light?:boolean\r\n        }>(),{\r\n            type:NoticeTypes.info,\r\n            message:null,\r\n            light:false\r\n        });\r\n</script>","<template>\r\n    <div :class=\"{'modal':props.blockUser&&props.visible,'is-active':props.blockUser&&props.visible}\">\r\n        <div v-if=\"props.blockUser&&props.visible\" class=\"modal-background\"></div>\r\n        <Animation :incoming=\"AnimationTypes.fadeIn\" :outgoing=\"AnimationTypes.fadeOut\" :speed=\"AnimationSpeeds.slower\">\r\n            <div v-if=\"props.visible\" :class=\"clazz\">\r\n                <Icon :icon=\"iconType\" :size=\"IconSizes.xxlarge\" />\r\n                <h1 v-if=\"props.header!==null && props.header!==undefined\" class=\"title\">{{ props.header }}</h1>\r\n                <div class=\"block\">\r\n                    {{ props.message }}\r\n                </div>\r\n                <Icon v-if=\"props.hasClose\" icon=\"circle-xmark\" v-on:click=\"emit('close')\" :size=\"IconSizes.large\" />\r\n            </div>\r\n        </Animation>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\n    import Icon from './icon.vue';\r\n    import Animation from './animation.vue';\r\n    import {NoticeTypes,AnimationTypes,AnimationSpeeds,IconSizes} from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<{\r\n        visible?:boolean,\r\n        type?:NoticeTypes,\r\n        message?:string,\r\n        header?:string,\r\n        blockUser?:boolean,\r\n        hasClose?:boolean,\r\n        isLight?:boolean\r\n    }>(),{\r\n        visible:false,\r\n        type:NoticeTypes.info\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        close:[]\r\n    }>();\r\n    const iconType = computed<string>(()=>{\r\n        switch(props.type){\r\n            case NoticeTypes.info:\r\n                return 'circle-info';\r\n                break;\r\n            case NoticeTypes.success:\r\n                return 'circle-check';\r\n                break;\r\n            case NoticeTypes.danger:\r\n                return 'bug';\r\n                break;\r\n            case NoticeTypes.warning:\r\n                return 'circle-exclamation';\r\n                break;\r\n        }            \r\n    });\r\n    const clazz = computed<string[]>(() => {\r\n        var result = ['is-page-notification-container',`is-${props.type}`];\r\n        if (props.isLight)\r\n            result.push('is-light-mode');\r\n        if (!(props.hasClose === undefined || props.hasClose === null ? true : props.hasClose))\r\n            result.push('has-no-close');\r\n        return result;\r\n    });\r\n</script>","<template>\r\n    <nav :class=\"['pagination',ButtonClass]\" role=\"navigation\" aria-label=\"pagination\" v-show=\"props.hasmore||props.hasprevious\">\r\n        <a :class=\"['pagination-previous',ButtonClass]\"\r\n           v-bind:title=\"Previous\" v-on:click=\"moveBack\" v-bind:disabled=\"DisablePrevious\">\r\n           <Icon icon=\"backward\" :size=\"IconSizes.small\"/>\r\n            {{Previous}}\r\n        </a>\r\n        <a :class=\"['pagination-next',ButtonClass]\"\r\n           v-bind:title=\"Next\" v-on:click=\"moveForward\" v-bind:disabled=\"DisableNext\">\r\n            {{Next}}\r\n            <Icon icon=\"forward\" :size=\"IconSizes.small\"/>\r\n        </a>\r\n    </nav>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, inject } from 'vue';\r\n    import translate from '../../messages/messages.js';\r\n    import Icon from './icon.vue';\r\n    import { Sizes,ColorTypes,IconSizes } from '../enums';\r\nimport { useLanguage } from '../shared';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<{\r\n        usenext?:boolean,\r\n        hasmore:boolean,\r\n        hasprevious:boolean\r\n        size?:Sizes,\r\n        rounded?:boolean,\r\n        buttonType?:ColorTypes\r\n    }>(),{\r\n        usenext:true,\r\n        hasmore:true,\r\n        hasprevious:true,\r\n        size:Sizes.small,\r\n        rounded:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        moveForward:[],\r\n        moveBack:[]\r\n    }>();\r\n\r\n    const Language = useLanguage(inject);\r\n\r\n    const Previous = computed<string>(()=>translate((props.usenext ? 'Pagination.Previous' : 'Pagination.Older'),Language));\r\n    const Next = computed<string>(()=>translate((props.usenext ? 'Pagination.Next' : 'Pagination.Newer'),Language));\r\n    const ButtonClass = computed<string>(()=>props.buttonType ? `has-background-${props.buttonType}` : '');\r\n\r\n    const DisablePrevious = computed<boolean>(() => props.hasprevious??true);\r\n    const DisableNext = computed<boolean>(() => props.hasmore??true);\r\n\r\n    const moveBack = function () {\r\n        if (!DisablePrevious)\r\n            emit('moveBack');\r\n    };\r\n    const moveForward = function () {\r\n        if (!DisableNext)\r\n            emit('moveForward');\r\n    };\r\n</script>\r\n\r\n<style>\r\n    .pagination a {\r\n        text-decoration: none !important;\r\n    }\r\n</style>","import {\r\n    ref,\r\n    watch,\r\n    Ref,\r\n    computed,\r\n    ComputedRef,\r\n    unref,\r\n  } from 'vue'\r\n  \r\n  export type MaybeRef<T = unknown> = T | Ref<T>\r\n  export type MaybeRefOrGetter<T = unknown> = MaybeRef<T> | (() => T)\r\n  function toValue<T>(source: MaybeRefOrGetter<T>): T {\r\n    // @ts-expect-error: source not callable\r\n    return typeof source === 'function' ? source() : unref(source)\r\n  }\r\n  \r\n  /**\r\n   * Returns the state of a Promise and observes the Promise if it's a Ref to\r\n   * automatically update the state\r\n   *\r\n   * @param promise - Ref of a Promise or raw Promise\r\n   * @param pendingDelay - optional delay to wait before displaying pending\r\n   */\r\n  export function usePromise<T = unknown>(\r\n    promise: MaybeRef<Promise<T> | null | undefined>,\r\n    pendingDelay: MaybeRef<number | string> = 200\r\n  ): UsePromiseResult<T> {\r\n    const isRejected = ref(false)\r\n    const isResolved = ref(false)\r\n    const isPending = computed(() => !isRejected.value && !isResolved.value)\r\n    const isDelayElapsed = ref(false)\r\n    const error = ref<Error | undefined | null>()\r\n    const data = ref<T | null | undefined>()\r\n  \r\n    let timerId: ReturnType<typeof setTimeout> | undefined | null\r\n  \r\n    watch(\r\n      () => toValue(promise),\r\n      (newPromise) => {\r\n        isRejected.value = false\r\n        isResolved.value = false\r\n        error.value = null\r\n        if (!newPromise) {\r\n          data.value = null\r\n          if (timerId) clearTimeout(timerId)\r\n          timerId = null\r\n          return\r\n        }\r\n  \r\n        const pendingDelayNumber = Number(toValue(pendingDelay)) || 0\r\n        if (pendingDelayNumber > 0) {\r\n          isDelayElapsed.value = false\r\n          if (timerId) clearTimeout(timerId)\r\n          timerId = setTimeout(() => {\r\n            isDelayElapsed.value = true\r\n          }, pendingDelayNumber)\r\n        } else {\r\n          isDelayElapsed.value = true\r\n        }\r\n  \r\n        newPromise\r\n          .then((newData) => {\r\n            // ensure we are dealing with the same promise\r\n            if (newPromise === toValue(promise)) {\r\n              data.value = newData\r\n              isResolved.value = true\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // ensure we are dealing with the same promise\r\n            if (newPromise === toValue(promise)) {\r\n              error.value = err\r\n              isRejected.value = true\r\n            }\r\n          })\r\n      },\r\n      { immediate: true }\r\n    )\r\n  \r\n    return { isPending, isRejected, isResolved, isDelayElapsed, error, data }\r\n  }\r\n  \r\n  /**\r\n   * Return type of `usePromise()`\r\n   */\r\n  export interface UsePromiseResult<T = unknown> {\r\n    isPending: ComputedRef<boolean>\r\n    isResolved: Ref<boolean>\r\n    isRejected: Ref<boolean>\r\n    isDelayElapsed: Ref<boolean>\r\n    error: Ref<Error | undefined | null>\r\n    data: Ref<T | undefined | null>\r\n  }","import {\r\n    defineComponent,\r\n    PropType,\r\n    reactive,\r\n    toRefs,\r\n    warn,\r\n    AllowedComponentProps,\r\n    ComponentCustomProps,\r\n    VNodeProps,\r\n    VNode,\r\n  } from 'vue'\r\n  import { usePromise, UsePromiseResult } from './usePromise'\r\n  \r\n  export const PromisedImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'Promised',\r\n    props: {\r\n      promise: {} as PropType<Promise<unknown> | null | undefined>,\r\n      // validator: p =>\r\n      //   p && typeof (p as any).then === 'function' && typeof (p as any).catch === 'function',\r\n  \r\n      pendingDelay: {\r\n        type: [Number, String],\r\n        default: 200,\r\n      },\r\n    },\r\n  \r\n    setup(props, { slots }) {\r\n      const propsAsRefs = toRefs(props)\r\n      const promiseState = reactive(\r\n        usePromise(propsAsRefs.promise, propsAsRefs.pendingDelay)\r\n      )\r\n  \r\n      return () => {\r\n        if ('combined' in slots) {\r\n          return slots.combined!(promiseState)\r\n        }\r\n  \r\n        const [slotName, slotData] = promiseState.isRejected\r\n          ? ['rejected', promiseState.error]\r\n          : !promiseState.isPending\r\n          ? ['default', promiseState.data]\r\n          : promiseState.isDelayElapsed\r\n          ? ['pending', promiseState.data]\r\n          : [null]\r\n  \r\n        if (slotName && !slots[slotName]) {\r\n          warn(\r\n            `(vue-promised) Missing slot \"${slotName}\" in Promised component. Pass an empty \"${slotName}\" slot or use the \"combined\" slot to remove this warning. This will fail in production.`\r\n          );\r\n          return null;\r\n        }\r\n  \r\n        return slotName && slots[slotName]!(slotData);\r\n      }\r\n    },\r\n  })\r\n  \r\n  export const Promised = PromisedImpl as unknown as {\r\n    new (): {\r\n      $props: AllowedComponentProps &\r\n        ComponentCustomProps &\r\n        VNodeProps & { promise: Promise<unknown> }\r\n    }\r\n  \r\n    $slots: {\r\n      default: (data: unknown) => VNode[]\r\n      rejected: (error: Error) => VNode[]\r\n      pending: (error: unknown) => VNode[]\r\n  \r\n      combined: (arg: UsePromiseResult) => VNode[]\r\n    }\r\n  }","<template>\r\n    <progress :class=\"`progress is-${props.size} is-${props.type}`\" :value=\"props.value\" :max=\"props.maximum\">{percentage ? `${percentage}%` : null}</progress>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { computed } from 'vue';\r\nimport { ColorTypes, Sizes } from '../enums';\r\n\r\n    const props = withDefaults(defineProps<{\r\n       type?:ColorTypes,\r\n       size?:Sizes,\r\n       value?:number,\r\n       maximum?:number\r\n    }>(),{\r\n        type:ColorTypes.primary,\r\n        size:Sizes.normal\r\n    });\r\n\r\n    const percentage = computed<number|null>(()=>{\r\n        return props.maximum===undefined ? null : (props.value??0)/props.maximum;\r\n    });\r\n</script>","ï»¿<template>\r\n    <component ref=\"handle\" :is=\"props.tag\" :draggable=\"true\" v-on:dragstart=\"Start\" v-on:dragend=\"Stop\" :class=\"Classes\">\r\n        <slot/>\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,computed,onMounted } from 'vue';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n        started:[],\r\n        stopped:[]\r\n    }>();\r\n\r\n    const props = withDefaults(defineProps<{\r\n        CopyData?:any|null,\r\n        disabled?:boolean,\r\n        tag?:string,\r\n        handlesearch:string|null\r\n    }>(),{\r\n        CopyData:null,\r\n        disabled:false,\r\n        tag:'div'\r\n    });\r\n\r\n    const isDragging = ref<boolean>(false);\r\n    const handleDisabled = ref<boolean>(false);\r\n    const handle = ref<any|null>(null);\r\n\r\n    const Disabled = computed<boolean>(() => (props.disabled??false) || (handleDisabled.value && props.handlesearch!==null));\r\n    const Classes = computed<string[]>(()=>{\r\n        let result = [];\r\n        if (!Disabled){result.push('has-cursor');}\r\n        if (isDragging.value){result.push('is-move');}\r\n        else{result.push('is-grab');}\r\n        return result;\r\n    })\r\n\r\n    const Start = (event:any) : boolean => {\r\n        if (Disabled.value) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n        event.stopPropagation();\r\n        event.dataTransfer.setData('value', JSON.stringify(props.CopyData));\r\n        isDragging.value = true;\r\n        emit('started');\r\n        return true;\r\n    }\r\n\r\n    const Stop = () :void => {\r\n        isDragging.value = false;\r\n        handleDisabled.value = true;\r\n        emit('stopped');\r\n    };\r\n\r\n    onMounted(() => {\r\n        if (props.handlesearch) {\r\n            let clickHandle = $(handle.value).find(props.handlesearch);\r\n            if (clickHandle.length > 0) {\r\n                handleDisabled.value = true;\r\n                clickHandle.on('mousedown',() => handleDisabled.value = false);\r\n                clickHandle.on('mouseup',() => handleDisabled.value = true);\r\n            }\r\n        }\r\n    });\r\n</script>","ï»¿<template>\r\n    <component ref=\"handle\" :is=\"props.tag\" :class=\"{'is-bordered':isOver}\" @dragenter=\"Enter\" @dragleave=\"Leave\" @drop=\"Drop\" @dragover=\"Moved\">\r\n        <slot />\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref,computed } from 'vue';\r\n    import {DropZoneQuadrants} from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<{\r\n        isValidChild?:(data:any)=>boolean,\r\n        tag?:string\r\n    }>(),{\r\n        tag:'div',\r\n        isValidChild:(data:any)=>true\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        itemAdded:[data:any,position:DropZoneQuadrants],\r\n        itemEntered:[quadrant:DropZoneQuadrants],\r\n        itemExited:[quadrant:DropZoneQuadrants],\r\n        itemMoved:[quadrant:DropZoneQuadrants]\r\n    }>();\r\n\r\n    const isOver = ref<boolean>(false);\r\n    const lastQuadrant = ref<DropZoneQuadrants|null>(null);\r\n    const handle = ref<any>(null);\r\n\r\n    const Tag = computed(() => props.tag ?? 'div');\r\n\r\n    const getQuadrant = (event:any):DropZoneQuadrants=> {\r\n        const bounds = handle.value.getBoundingClientRect();\r\n        const mid = {\r\n            x: bounds.x + (bounds.width / 2),\r\n            y: bounds.y + (bounds.height / 2)\r\n        };\r\n        let ret = DropZoneQuadrants.center;\r\n        if (event.x < mid.x) {\r\n            if (event.y < mid.y)\r\n                ret = DropZoneQuadrants.topLeft;\r\n            else\r\n                ret = DropZoneQuadrants.bottomLeft;\r\n        } else {\r\n            if (event.y < mid.y)\r\n                ret = DropZoneQuadrants.topRight;\r\n            else\r\n                ret = DropZoneQuadrants.bottomRight;\r\n        }\r\n        lastQuadrant.value = ret;\r\n        return lastQuadrant.value;\r\n    };\r\n\r\n    const Enter = (event:any) => {\r\n        event.preventDefault();\r\n        isOver.value = true;\r\n        emit('itemEntered', getQuadrant(event));\r\n    };\r\n\r\n    const Leave = (event:any)=> {\r\n        isOver.value = true;\r\n        emit('itemExited', getQuadrant(event));\r\n    };\r\n\r\n    const Moved = (event:any)=> {\r\n        event.preventDefault();\r\n        emit('itemMoved', getQuadrant(event));\r\n    };\r\n\r\n    const Drop = (event:any)=> {\r\n        if (props.isValidChild) {\r\n            if (!props.isValidChild(JSON.parse(event.dataTransfer.getData('value'))))\r\n                return false;\r\n        }\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        emit('itemAdded', JSON.parse(event.dataTransfer.getData('value')), lastQuadrant.value);\r\n        isOver.value = false;\r\n    };\r\n</script>","ï»¿<template>\r\n    <component v-bind:is=\"(numbered==null||numbered==undefined||!numbered ? 'ul' : 'ol')\" v-bind:class=\"classes\">\r\n        <slot/>\r\n    </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\nimport { ColorTypes } from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        type?:ColorTypes,\r\n        numbered?:boolean,\r\n        compact?:boolean,\r\n        outlined?:boolean,\r\n        highlighted?:boolean\r\n    }>();\r\n\r\n    const classes = computed<string[]>(() => {\r\n        var ret = ['block-list', 'has-radius', `is-${props.type??'primary'}`];\r\n        if (props.compact) {\r\n            ret.push('is-small');\r\n        }\r\n        if (props.outlined) {\r\n            ret.push('is-outlined');\r\n        }\r\n        if (props.highlighted) {\r\n            ret.push('is-highlighted');\r\n        }\r\n        return ret;\r\n    });\r\n</script>","ï»¿<template>\r\n    <li v-bind:class=\"classes\">\r\n        <span class=\"icon is-clickable\" v-if=\"props.icon\" v-on:click=\"emit('click')\">\r\n            <Icon :icon=\"props.icon\"/>\r\n        </span>\r\n        <slot/>\r\n    </li>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\n    import Icon from '../common/icon.vue';\r\nimport { ColorTypes } from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        type?:ColorTypes,\r\n        outlined?:boolean,\r\n        highlighted?:boolean,\r\n        icon?:string\r\n    }>();\r\n\r\n    const emit = defineEmits<{click}>();\r\n\r\n    const classes = computed<string[]>(() => {\r\n        var ret = [];\r\n        if (props.type) {\r\n            ret.push('is-' + props.type);\r\n        }\r\n        if (props.outlined) {\r\n            ret.push('is-outlined');\r\n        }\r\n        if (props.highlighted) {\r\n            ret.push('is-highlighted');\r\n        }\r\n        if (props.icon) {\r\n            ret.push('has-icon');\r\n        }\r\n        return ret;\r\n    });\r\n</script>","ï»¿<template>\r\n    <List :type=\"type\" :compact=\"compact\" :outlined=\"outlined\" :highlighted=\"highlighted\" @drop=\"itemDropped\">\r\n        <template v-for=\"item,index in sorted\">\r\n            <ListItem v-show=\"currentIndex===index&&selectedIndex!==index&&currentQuadrant===DropZoneQuadrants.top\">\r\n                <Notification :light=\"true\">&nbsp;</Notification>\r\n            </ListItem>\r\n            <ListItem draggable=\"true\" @dragstart=\"dragStart(index,$event)\" @dragend=\"selectedIndex=null\" @dragover=\"itemEntered(index,$event)\" :class=\"{'has-cursor':true,'is-move':(currentIndex==index),'is-grab':(currentIndex!=index)}\">\r\n                <slot name=\"item\" :item=\"item\" :index=\"index\" />\r\n            </ListItem>\r\n            <ListItem v-show=\"currentIndex===index&&selectedIndex!==index&&currentQuadrant===DropZoneQuadrants.bottom\">\r\n                <Notification :light=\"true\">&nbsp;</Notification>\r\n            </ListItem>\r\n        </template>\r\n    </List>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import List from '../layout/list.vue';\r\n    import ListItem from '../layout/list-item.vue';\r\n    import Notification from '../common/notification.vue';\r\n    import { ref, watch,onMounted } from 'vue';\r\n    import { ColorTypes, DropZoneQuadrants } from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<{\r\n        Items:any[],\r\n        type?:ColorTypes,\r\n        compact?:boolean,\r\n        outlined?:boolean,\r\n        highlighted?:boolean\r\n    }>(),{\r\n        type:ColorTypes.primary,\r\n        compact:false,\r\n        outlined:false,\r\n        highlighted:false\r\n    });\r\n    const emit = defineEmits<{\r\n        sorted:[items:any[]]\r\n    }>();\r\n\r\n    const sorted = ref<any[]>([]);\r\n    const selectedIndex = ref<number>(-1);\r\n    const currentIndex = ref<number>(-1);\r\n    const currentQuadrant = ref<DropZoneQuadrants|null>(null);\r\n\r\n    watch(props.Items, (oldValue,newValue) => {\r\n        sorted.value = [...newValue];\r\n    });\r\n\r\n    onMounted(() => {\r\n        if (props.Items !== null) {\r\n            sorted.value = [...props.Items];\r\n        }\r\n    });\r\n\r\n    const getQuadrant = (event:any):DropZoneQuadrants => {\r\n        var bounds = event.target.getBoundingClientRect();\r\n        var mid = {\r\n            x: bounds.x + (bounds.width / 2),\r\n            y: bounds.y + (bounds.height / 2)\r\n        };\r\n        let ret : DropZoneQuadrants = DropZoneQuadrants.center;\r\n        if (event.y < mid.y)\r\n            ret = DropZoneQuadrants.top;\r\n        else\r\n            ret = DropZoneQuadrants.bottom;\r\n        return ret;\r\n    };\r\n\r\n    const dragStart = (index:number, event:any) => {\r\n        event.stopPropagation();\r\n        selectedIndex.value = index;\r\n        event.dataTransfer.setData('value', null);\r\n    };\r\n\r\n    const itemEntered = (index:number, event:any)=> {\r\n        if (selectedIndex.value) {\r\n            event.stopPropagation();\r\n            if (index != selectedIndex.value) {\r\n                currentIndex.value = index;\r\n                currentQuadrant.value = getQuadrant(event);\r\n            } else {\r\n                currentIndex.value = -1;\r\n                currentQuadrant.value = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    const itemMoved = (index:number, event:any) => {\r\n        if (selectedIndex.value) {\r\n            event.stopPropagation();\r\n            if (index != selectedIndex.value) {\r\n                currentIndex.value = index;\r\n                currentQuadrant.value = getQuadrant(event);\r\n            } else {\r\n                currentIndex.value = -1;\r\n                currentQuadrant.value = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    const itemDropped = (event:any)=> {\r\n        if (selectedIndex.value) {\r\n            event.stopPropagation();\r\n            var index = currentIndex.value + (currentQuadrant.value == DropZoneQuadrants.top ? 0 : 1);\r\n            var elem = sorted.value.splice(index, 1)[0];\r\n            if (index >= selectedIndex.value)\r\n                index--;\r\n            sorted.value.splice(index, 0, elem);\r\n            currentIndex.value = -1;\r\n            currentQuadrant.value = null;\r\n            selectedIndex.value = -1;\r\n            emit('sorted', sorted.value);\r\n        }\r\n    };\r\n</script>","import { ComputedRef, computed, ref } from \"vue\";\r\nimport { FormInputType, TranslateMethod,ValueChangedEvent } from \"./types\";\r\n\r\nexport const HIDDEN_FIELDS_PROPERTY = \"HiddenFields\";\r\nexport const DISABLED_FIELDS_PROPERTY = \"DisabledFields\";\r\n\r\nexport interface translateFieldProps{\r\n    translate?:TranslateMethod;\r\n}\r\n\r\nexport interface coreFieldProps{\r\n    name:string;\r\n    disabled:boolean;\r\n};\r\n\r\nexport interface commonFieldProps extends coreFieldProps,translateFieldProps{};\r\n\r\nconst defaultTranslate : TranslateMethod = (value:string)=>value;\r\n\r\nexport const useTranslator= (props:translateFieldProps,inject: (<T>(string,T?)=> T | undefined)) : ComputedRef<TranslateMethod> => {\r\n    const Translate = inject<TranslateMethod>(\"Translate\",defaultTranslate);\r\n    const Translator = computed<TranslateMethod>(()=>props.translate??Translate);\r\n  \r\n    return Translator;\r\n};\r\n\r\nexport function useValuesList(name:string,inject: (<T>(string,T?)=> T | undefined)){\r\n    const iHiddenValues = inject<string[]>(HIDDEN_FIELDS_PROPERTY);\r\n    const iDisabledValues = inject<string[]>(DISABLED_FIELDS_PROPERTY);\r\n\r\n    const hiddenValues = computed<string[]>(()=>iHiddenValues.filter(h=>h.indexOf(`${name}.`)===0).map(h=>h.split('.')[1]));\r\n    const disabledValues = computed<string[]>(()=>iDisabledValues.filter(h=>h.indexOf(`${name}.`)===0).map(h=>h.split('.')[1]));\r\n\r\n    return {hiddenValues,disabledValues};\r\n}\r\n\r\nexport const buildFieldRows = (fields:FormInputType[]):FormInputType[][]=>{\r\n    let result:FormInputType[][] = [];\r\n    let row:FormInputType[] = [];\r\n    let curLen = 0;\r\n    fields.forEach(field=>{\r\n        let len = (field.form_columns??12);\r\n        if (curLen+len>12){\r\n            result.push(row);\r\n            row=[];\r\n            curLen=0;\r\n        }\r\n        row.push(field);\r\n        curLen+=len;\r\n        if (curLen===12){\r\n            result.push(row);\r\n            row=[];\r\n            curLen=0;\r\n        }\r\n    });\r\n    if (row.length > 0) {\r\n        result.push(row);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport async function resolveListItems<T>(values: (T[]|Promise<T[]>|(()=>T[])|(()=>Promise<T[]>))) : Promise<T[]> {\r\n    let p : Promise<any>|null = null;\r\n    let tmp:any = values;\r\n    if (values instanceof Function){\r\n        tmp = (values as Function)();\r\n    }\r\n    if (tmp instanceof Promise){\r\n        p=tmp;\r\n    }else{\r\n        p=Promise.resolve(tmp);\r\n    }\r\n    let tmpResult:any  = await p as any;\r\n    let result:T[] = [];\r\n    if (tmpResult.value!==undefined){\r\n        result = tmpResult.value as T[];\r\n    }else{\r\n        result = tmpResult as T[];\r\n    }\r\n    return result;\r\n}","ï»¿<template>\r\n    <div class=\"control autocomplete\" v-on:blur=\"clear\" v-on:click=\"focusInput\">\r\n        <div class=\"tagsfield field input is-grouped is-grouped-multiline\">\r\n            <div class=\"control\" v-for=\"(value,index) in selected\">\r\n                <div class=\"tags has-addons\">\r\n                    <a class=\"tag is-link\">{{Translator(value.name)}}</a>\r\n                    <a class=\"tag is-delete\" v-if=\"!value.readonly\" v-on:click=\"removeSelected(index)\"></a>\r\n                </div>\r\n            </div>\r\n            <div  v-if=\"!props.disabled\">\r\n                <span ref=\"contentSpan\" v-bind:placeholder=\"Translator(props.title)\" contenteditable v-show=\"selected.length<props.limit || props.limit==null\" v-bind:class=\"classes\" v-on:focus=\"classes='is-focused';\" v-on:blur=\"classes=null;\" v-on:keydown=\"keyPress\" v-on:paste=\"paste\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"dropdown\" v-bind:class=\"{'is-active':results!=null&&searchString!=null&&searchString!=''}\">\r\n            <div class=\"dropdown-menu\">\r\n                <div class=\"dropdown-content\">\r\n                    <template v-if=\"results!=null && results.length>0\">\r\n                        <a class=\"dropdown-item\" v-for=\"value in results\" v-on:click=\"addSelected(value)\">{{Translator(value.name)}}</a>\r\n                    </template>\r\n                    <template v-else>\r\n                        <a class=\"dropdown-item\">No Results</a>\r\n                    </template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch, ref, inject} from 'vue';\r\n    import 'jquery';\r\n    import { commonFieldProps,useTranslator } from './common';\r\n    import { ValueChangedEvent } from './types';\r\n\r\n    type AutoCompleteItem = {\r\n        id:string,\r\n        name:string,\r\n        readonly?:boolean\r\n    };\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        title:string,\r\n        limit?:number|null,\r\n        callbackurl?:string,\r\n        values?:AutoCompleteItem[],\r\n        fetch?:(url:string,init?: RequestInit) => Promise<Response>\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const selected = ref<AutoCompleteItem[]>([]);\r\n    const searchString = ref<string|null>(null);\r\n    const results = ref<AutoCompleteItem[]|null>(null);\r\n    const classes = ref<string|null>(null);\r\n\r\n    const contentSpan = ref(null);\r\n\r\n    watch(searchString, async (val) => {\r\n        if (val != null) {\r\n            if (val.length >= 2) {\r\n                if (props.values != undefined && props.values != null) {\r\n                    let data = [];\r\n                    for (let x = 0; x < props.values.length; x++) {\r\n                        if (props.values[x].name.toUpperCase().indexOf(val.toUpperCase()) >= 0\r\n                            || props.values[x].id.toUpperCase().indexOf(val.toUpperCase()) >= 0) {\r\n                            data.push(props.values[x]);\r\n                        }\r\n                        if (data.length == 10) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    results.value = data;\r\n                } else {\r\n                    const response = await (props.fetch??fetch)(`${props.callbackurl}?q=${encodeURIComponent(val)}`);\r\n                    let data = await response.json();\r\n                    if (data.length > 10) {\r\n                        data.splice(10, data.length - 10);\r\n                    }\r\n                    results.value = data;\r\n                }\r\n            }\r\n        } else {\r\n            results.value = null;\r\n            $(contentSpan.value).empty();\r\n        }\r\n    });\r\n\r\n    const getValue = () : any|any[]|null => {\r\n        if (selected.value.length == 0)\r\n            return null;\r\n        const result = selected.value.slice();\r\n        if (props.limit != undefined && props.limit == 1) {\r\n            if (result.length > 0) {\r\n                return result[0];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    const setValue = async (value: AutoCompleteItem|AutoCompleteItem[]|string[]|null) : Promise<void> => {\r\n        if (value == null) {\r\n            if (selected.value.length > 0) {\r\n                selected.value.splice(0, selected.value.length);\r\n            }\r\n            searchString.value = null;\r\n        } else {\r\n            const vals: (AutoCompleteItem|null)[] = await Promise.all(\r\n                (Array.isArray(value) ? value : [value]).map<Promise<AutoCompleteItem>>(async (val:any)=>{\r\n                    if (val.id!==undefined && val.name!==undefined){\r\n                        return val as AutoCompleteItem;\r\n                    }else{\r\n                        const response = await (props.fetch??fetch)(`${props.callbackurl}?${(val.id === undefined ? 'q='+encodeURIComponent(val) : 'id='+encodeURIComponent(val.id))}`);\r\n                        let data = await response.json();\r\n                        if (data.length > 0) {\r\n                            if (props.disabled) {\r\n                                data[0].readonly = true;\r\n                            }\r\n                            return data[0] as AutoCompleteItem;\r\n                        }else{\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n            );\r\n            selected.value = vals.filter(v=>v!==null);\r\n            emit('value_changed',{name:props.name,value:getValue()});\r\n        }\r\n    };\r\n    const paste = (event:any):void => {\r\n        event.preventDefault();\r\n        searchString.value = event.clipboardData.getData('text/plain');\r\n    };\r\n    const keyPress = (event:any):void => {\r\n        switch (event.key) {\r\n            case 'Backspace':\r\n                if (searchString.value != null && searchString.value.length > 0) {\r\n                    searchString.value = searchString.value.substring(0, searchString.value.length - 1);\r\n                }\r\n                break;\r\n            case 'Enter':\r\n            case 'Shift':\r\n                break;\r\n            default:\r\n                if (event.key.length == 1) {\r\n                    searchString.value = (searchString.value == null ? '' : searchString.value) + event.key;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    const clear = ():void => {\r\n        searchString.value = null;\r\n    };\r\n    const focusInput = ():void=> {\r\n        contentSpan.value.focus();\r\n    };\r\n    const addSelected = (val:AutoCompleteItem):void  => {\r\n        selected.value.push(val);\r\n        clear();\r\n        emit('value_changed', { name: props.name, value: getValue() });\r\n    };\r\n    const removeSelected = (index:number):void => {\r\n        selected.value.splice(index, 1);\r\n        focusInput();\r\n        emit('value_changed', { name: props.name, value: getValue() });\r\n    };\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>","ï»¿<template>\r\n    <Button :type=\"sstyle\" :icon=\"(props.icon ? props.icon : null)\" :title=\"Translator(props.label)\" v-on:click=\"emit('button_clicked',props.name)\" :disabled=\"props.disabled\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { inject } from 'vue';\r\nimport Button from '../common/button.vue';\r\n    import { ColorTypes } from '../enums';\r\n    import { commonFieldProps,useTranslator } from './common';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        label:string;\r\n        sstyle:ColorTypes;\r\n        icon?:string;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const emit = defineEmits<{\r\n         button_clicked:[name:string]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n</script>","ï»¿<template>\r\n    <div>\r\n        <Promised v-bind:promise=\"Values\">\r\n            <template v-slot=\"values:ListItemValue[]\">\r\n                <template v-for=\"value in values\">\r\n                    <label class=\"checkbox is-block\" v-show=\"!hiddenValues.some(v=>v===value.value.toString())\">\r\n                        <input type=\"checkbox\" class=\"checkbox\" v-bind:value=\"value.value\" v-model=\"checks\" v-bind:disabled=\"props.disabled||disabledValues.some(v=>v===value.value.toString())\" />\r\n                        {{Translator(value.label)}}\r\n                    </label>\r\n                </template>\r\n            </template>\r\n            <template #pending>\r\n                <Progress/> \r\n            </template>\r\n            <template #rejected>\r\n                <Notification :type=\"NoticeTypes.danger\" :message=\"Error\"/>\r\n            </template>\r\n        </Promised>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, computed, watch, inject } from 'vue';\r\n    import {Promised} from '../common/Promised';\r\n    import {ListItemValue, ValueChangedEvent } from './types';\r\n    import { commonFieldProps,resolveListItems,useTranslator, useValuesList } from './common';\r\n    import {Progress,Notification} from '../common/';\r\n    import {NoticeTypes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n    import translate from '../../messages/messages.js';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        values:ListItemValue[]|Promise<ListItemValue[]>|(()=>ListItemValue[])|(()=>Promise<ListItemValue[]>);\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Language = useLanguage(inject);\r\n    const Error = computed<string>(()=>translate('Form.Error',Language));\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const checks = ref<any[]>([]);\r\n    const locked = ref<boolean>(false);\r\n    \r\n    const Values = computed<Promise<ListItemValue[]>>(async () => {\r\n        if (props.values == null) {\r\n            return [];\r\n        } else {\r\n            let result:ListItemValue[] = await resolveListItems<ListItemValue>(props.values);\r\n            let tchecks:any[] = result.filter((item)=>item.selected).map((item):any=>item.value);\r\n            if (checks.value === null || checks.value.length == 0) {\r\n                checks.value = (tchecks.length>0 ? [...tchecks] : []);\r\n            } else {\r\n                tchecks = checks.value;\r\n                result = result.map((item:ListItemValue):ListItemValue=>{\r\n                    return {\r\n                        label:item.label,\r\n                        value:item.value,\r\n                        selected:tchecks.some((check)=>check===item.value)\r\n                    };\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n\r\n    watch(checks, (val) => {\r\n        emit('value_changed', { name: props.name, value: getValue() });\r\n    });\r\n\r\n    const getValue = ():any[]|null => {\r\n        return (checks.value.length == 0 ? null : checks.value);\r\n    };\r\n    const setValue = (value:any[]|null):void => {\r\n        locked.value = true;\r\n        checks.value.splice(0);\r\n        if (value !== null) {\r\n            checks.value = [...value];\r\n        }\r\n        locked.value = false;\r\n        emit('value_changed', { name: props.name, value: getValue() });\r\n    };\r\n    \r\n    const {hiddenValues,disabledValues} = useValuesList(props.name,inject);\r\n\r\n    defineExpose({ getValue, setValue});\r\n</script>","ï»¿<template>\r\n    <label class=\"checkbox\">\r\n        <input type=\"checkbox\" class=\"checkbox\" :name=\"props.name\" :disabled=\"props.disabled\" v-model=\"value\"/>\r\n        {{Label}}\r\n        <span class=\"help is-danger\" v-if=\"props.required\">*</span>\r\n    </label>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch,computed, inject} from 'vue';\r\n    import { commonFieldProps,useTranslator} from './common';\r\n    import { ValueChangedEvent } from './types';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        label:string;\r\n        required?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        required:false,\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const Label = computed<string>(() => Translator.value(props.label));\r\n\r\n    const value = ref<boolean>(false);\r\n\r\n    watch(value, (val) => emit('value_changed', { name: props.name, value: val }));\r\n\r\n    const getValue = () => { return value.value; };\r\n    const setValue = (val:boolean)=> { value.value = val; };\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>","import { ComputedRef } from 'vue';\r\nimport translate from '../../messages/messages.js';\r\n\r\nexport const addDays = (date:Date,days:number) : Date => {\r\n    let result = new Date(date);\r\n    result.setDate(date.getDate() + days);\r\n    return result;\r\n};\r\nexport const addHours = (date:Date,hours:number):Date => {\r\n    let result = new Date(date);\r\n    result.setHours(result.getHours() + hours, result.getMinutes(), result.getSeconds(), result.getMilliseconds());\r\n    return result;\r\n};\r\nexport const daysBetween = (start:Date,end:Date):number => {\r\n    var one = new Date(start.getFullYear(), start.getMonth(), start.getDate());\r\n    var two = new Date(end.getFullYear(), end.getMonth(), end.getDate());\r\n    var millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n    var millisBetween = two.getTime() - one.getTime();\r\n    var days = millisBetween / millisecondsPerDay;\r\n    return Math.abs(Math.floor(days));\r\n};\r\nexport const canParse = (value:string):boolean => {\r\n    try {\r\n        return !isNaN(Date.parse(value));\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n};\r\nexport const getWeekOfMonth = (date:Date):number => {\r\n    return Math.floor((date.getDate() + new Date(date.getFullYear(), date.getMonth(), 1).getDay()) / 7);\r\n};\r\n\r\nexport const padLeft = (value:string,char:string,length:number):string=>{\r\n    let result=value;\r\n    while(result.length<length)\r\n        result = char+result;\r\n    return result;\r\n};\r\n\r\nconst processFormat = (curCode:string,language:ComputedRef<string>,date:Date):string=>{\r\n    let result:string = '';\r\n    switch (curCode) {\r\n        case 'd':\r\n        case 'dd':\r\n            result += `${padLeft(date.getDate().toString(),'0',curCode.length)}`;\r\n            break;\r\n        case 'ddd':\r\n        case 'dddd':\r\n            let name:string ='';\r\n            switch (date.getDay()) {\r\n                case 0:\r\n                    name = 'Sunday';\r\n                    break;\r\n                case 1:\r\n                    name= 'Monday';\r\n                    break;\r\n                case 2:\r\n                    name='Tuesday';\r\n                    break;\r\n                case 3:\r\n                    name='Wednesday';\r\n                    break;\r\n                case 4:\r\n                    name='Thursday';\r\n                    break;\r\n                case 5:\r\n                    name='Friday';\r\n                    break;\r\n                case 6:\r\n                    name='Saturday';\r\n                    break;\r\n            }\r\n            result+=`${translate('Date.Weekdays.'+(curCode.length > 3 ? name : name.substring(0,3)),language)}`;\r\n            break;\r\n        case 'f':\r\n        case 'ff':\r\n        case 'fff':\r\n            result += `${padLeft(date.getMilliseconds().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'F':\r\n        case 'FF':\r\n        case 'FFF':\r\n            result += `${(date.getMilliseconds() == 0 ? '' : padLeft(date.getMilliseconds().toString(),'0', curCode.length))}`;\r\n            break;\r\n        case 'g':\r\n        case 'gg':\r\n            result += 'A.D.';\r\n            break;\r\n        case 'h':\r\n        case 'hh':\r\n            result += `${padLeft((date.getHours() > 12 ? date.getHours() - 12 : (date.getHours() == 0 ? 12 : date.getHours())).toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'H':\r\n        case 'HH':\r\n            result += `${padLeft(date.getHours().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'K':\r\n        case 'z':\r\n        case 'zz':\r\n        case 'zzz':\r\n            let tzo:number = date.getTimezoneOffset()*-1;\r\n            let hours:number = parseInt((tzo / 60).toFixed(0));\r\n            let minutes:number = tzo - (Math.abs(hours) * 60);\r\n            switch (curCode) {\r\n                case 'K':\r\n                case 'zzz':\r\n                    result += `${(hours < 0 ? '-' : '+')}${padLeft(Math.abs(hours).toString(),'0', 2) + ':' + padLeft(Math.abs(minutes).toString(),'0', 2)}`;\r\n                    break;\r\n                case 'z':\r\n                case 'zz':\r\n                    result += `${(hours < 0 ? '-' : '+')}${padLeft(Math.abs(hours).toString(),'0', curCode.length)}`;\r\n                    break;\r\n            }\r\n            break;\r\n        case 'm':\r\n        case 'mm':\r\n            result += `${padLeft(date.getMinutes().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'M':\r\n        case 'MM':\r\n            result += `${padLeft((date.getMonth() + 1).toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'MMM':\r\n        case 'MMMM':\r\n            let monthName:string = '';\r\n            switch (date.getMonth()) {\r\n                case 0:\r\n                    monthName = 'January';\r\n                    break;\r\n                case 1:\r\n                    monthName = 'February';\r\n                    break;\r\n                case 2:\r\n                    monthName = 'March';\r\n                    break;\r\n                case 3:\r\n                    monthName = 'April';\r\n                    break;\r\n                case 4:\r\n                    monthName = 'May';\r\n                    break;\r\n                case 5:\r\n                    monthName = 'June';\r\n                    break;\r\n                case 6:\r\n                    monthName = 'July';\r\n                    break;\r\n                case 7:\r\n                    monthName = 'August';\r\n                    break;\r\n                case 8:\r\n                    monthName = 'September';\r\n                    break;\r\n                case 9:\r\n                    monthName = 'October';\r\n                    break;\r\n                case 10:\r\n                    monthName = 'November';\r\n                    break;\r\n                case 11:\r\n                    monthName = 'December';\r\n                    break;\r\n            }\r\n            result+=`${translate('Date.Months.'+(curCode.length>3 ? monthName : monthName.substring(0,3)),language)}`;\r\n            break;\r\n        case 's':\r\n        case 'ss':\r\n            result += `${padLeft(date.getSeconds().toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 't':\r\n        case 'tt':\r\n            if (date.getHours() >= 12)\r\n                result += `${(curCode.length == 1 ? 'P' : 'PM')}`;\r\n            else\r\n                result += `${(curCode.length == 1 ? 'A' : 'AM')}`;\r\n            break;\r\n        case 'y':\r\n        case 'yy':\r\n            var years = date.getFullYear().toString();\r\n            while (years.length > 2) {\r\n                years = years.substring(1);\r\n            }\r\n            result += `${padLeft(years.toString(),'0', curCode.length)}`;\r\n            break;\r\n        case 'yyy':\r\n        case 'yyyy':\r\n        case 'yyyyy':\r\n            result += `${padLeft(date.getFullYear().toString(),'0', curCode.length)}`;\r\n            break;\r\n        default:\r\n            result += `[UNKOWN FORMAT ${curCode}]`;\r\n            break;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const format = (date:Date,language:ComputedRef<string>,format?:string):string=> {\r\n    format = format??'ddd MMM dd yyyy HH:mm:ss G\\\\MTzz00';\r\n    let result:string = '';\r\n    let curCode:string = '';\r\n    for (var x = 0; x < format.length; x++) {\r\n        switch (format.charAt(x)) {\r\n            case '\\\\':\r\n                if (curCode != '') {\r\n                    result += processFormat(curCode,language, date);\r\n                    curCode = '';\r\n                }\r\n                result += format.charAt(x + 1);\r\n                x++;\r\n                break;\r\n            case 'd':\r\n            case 'f':\r\n            case 'F':\r\n            case 'g':\r\n            case 'h':\r\n            case 'H':\r\n            case 'K':\r\n            case 'm':\r\n            case 'M':\r\n            case 's':\r\n            case 't':\r\n            case 'y':\r\n            case 'z':\r\n                if (curCode != '') {\r\n                    if (curCode.charAt(0) != format.charAt(x)) {\r\n                        result += processFormat(curCode,language, date);\r\n                        curCode = '';\r\n                    } else {\r\n                        curCode += format.charAt(x);\r\n                    }\r\n                } else {\r\n                    curCode += format.charAt(x);\r\n                }\r\n                break;\r\n            default:\r\n                if (curCode != '') {\r\n                    result += processFormat(curCode,language, date);\r\n                    curCode = '';\r\n                }\r\n                result += format.charAt(x);\r\n                break;\r\n        }\r\n    }\r\n    if (curCode != '') {\r\n        result += processFormat(curCode,language, date);\r\n        curCode = '';\r\n    }\r\n    return result;\r\n};","ï»¿<template>\r\n    <div class=\"control\">\r\n        <input class=\"input is-time\" :name=\"props.name\" :id=\"props.name\" type=\"time\" v-model=\"value\" :disabled=\"props.disabled\" :style=\"styles\">\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch, computed } from 'vue';\r\n    import { coreFieldProps } from './common';\r\n    import { ValueChangedEvent } from './types';\r\n\r\n    const regTime = RegExp('^(\\\\d{2}):(\\\\d{2}) (AM|PM)$');\r\n    const reg24Time = RegExp('^(\\\\d{2}):(\\\\d{2}):\\\\d{2}$');\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<coreFieldProps>();\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    const styles = computed(() => {\r\n        if (value.value == null || value.value == '') {\r\n            return null;\r\n        } else {\r\n            var minute = Number(value.value.substring(3, 5));\r\n            var hour = Number(value.value.substring(0, 2)) % 12 + (minute / 60);\r\n            return {\r\n                backgroundImage: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><circle cx='20' cy='20' r='18.5' fill='none' stroke='%23222' stroke-width='3' /><path d='M20,4 20,8 M4,20 8,20 M36,20 32,20 M20,36 20,32' stroke='%23bbb' stroke-width='1' /><circle cx='20' cy='20' r='2' fill='%23222' stroke='%23222' stroke-width='2' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,4 20.5,4 21.5,24.5 Z' fill='%23222' style='transform:rotate(${360 * minute / 60}deg); transform-origin: 50% 50%;' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,8.5 20.5,8.5 21.5,24.5 Z' style='transform:rotate(${360 * hour / 12}deg); transform-origin: 50% 50%;' /></svg>\")`\r\n            };\r\n        }\r\n    });\r\n\r\n    watch(value, (val) => { emit('value_changed', { name: props.name, value: val }) });\r\n\r\n    const getValue = ():string|null=> { return value.value; };\r\n    const setValue = (val:string|null):void=> {\r\n        if (val != null) {\r\n            if (regTime.test(val)) {\r\n                var tmp = regTime.exec(val);\r\n                val = (tmp[3] == \"AM\" ? tmp[1] : (parseInt(tmp[1]) + 12).toFixed(0)) + ':' + tmp[2] + ':00';\r\n            }\r\n        }\r\n        value.value = val;\r\n    };\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>\r\n\r\n<style>\r\n.input.is-time {\r\n    background-image: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><circle cx='20' cy='20' r='18.5' fill='none' stroke='%23222' stroke-width='3' /><path d='M20,4 20,8 M4,20 8,20 M36,20 32,20 M20,36 20,32' stroke='%23bbb' stroke-width='1' /><circle cx='20' cy='20' r='2' fill='%23222' stroke='%23222' stroke-width='2' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,4 20.5,4 21.5,24.5 Z' fill='%23222' style='transform:rotate(120deg); transform-origin: 50% 50%;' /></svg>\"), url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'><path d='M18.5,24.5 19.5,8.5 20.5,8.5 21.5,24.5 Z' style='transform:rotate(20deg); transform-origin: 50% 50%;' /></svg>\");\r\n    background-position: 1px 1px;\r\n    background-repeat: no-repeat;\r\n    background-size: 32px 32px;\r\n    color: #222;\r\n    transition: backgroundImage 0.25s;\r\n    padding-left: 40px;\r\n    width: 140px;\r\n}\r\n</style>","ï»¿<template>\r\n    <div>\r\n        <div class=\"control has-icons-left has-icons-right\">\r\n            <input class=\"input is-expanded\" :name=\"props.name\" :id=\"props.name\" type=\"text\" v-model=\"value\" :placeholder=\"'DD-MM-YYYY'+(props.includeTime ? ' HH:mm' : '')\" :disabled=\"props.disabled\">\r\n            <span class=\"icon is-small is-left is-clickable\" v-on:click=\"calendarClicked\">\r\n                <Icon icon=\"calendar-alt\"/>\r\n            </span>\r\n            <span class=\"icon is-small is-right is-clickable\" v-on:click=\"cancelClicked\">\r\n                <Icon icon=\"window-close\"/>\r\n            </span>\r\n        </div>\r\n        <div class=\"modal\" v-bind:class=\"{'is-active':showInterface}\">\r\n            <div class=\"modal-background\"></div>\r\n            <div class=\"modal-content\">\r\n                <div class=\"panel is-primary is-dateselect\">\r\n                    <div class=\"panel-heading\">\r\n                        <div class=\"columns card-header-title\">\r\n                            <div class=\"column\"><icon icon=\"arrow-circle-left\" v-on:click=\"MoveMonth(-1)\"/></div>\r\n                            <div class=\"column has-text-centered\">{{MonthName}} {{calendar.Year}}</div>\r\n                            <div class=\"column has-text-right\"><icon icon=\"arrow-circle-right\" v-on:click=\"MoveMonth(1)\"/></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"panel-block\">\r\n                        <table class=\"table is-striped has-text-centered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{Messages.Sun}}</th>\r\n                                    <th>{{Messages.Mon}}</th>\r\n                                    <th>{{Messages.Tue}}</th>\r\n                                    <th>{{Messages.Wed}}</th>\r\n                                    <th>{{Messages.Thu}}</th>\r\n                                    <th>{{Messages.Fri}}</th>\r\n                                    <th>{{Messages.Sat}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"week in Weeks\">\r\n                                    <td v-for=\"day in week\" v-bind:class=\"['is-unselectable',(day.Disabled ? 'has-text-primary-dark has-background-primary-light' : 'is-clickable'),(day.isToday ? 'has-background-primary-dark' : ''),(day.isSelected ? 'has-background-success-dark' : '')]\" v-on:click=\"selectDate(day)\">\r\n                                        {{day.Number}}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot v-if=\"props.includeTime\">\r\n                                <tr>\r\n                                    <td colspan=\"100%\" class=\"has-text-centered\">\r\n                                        <Time :ref=\"time\" :name=\"`${props.name}-time`\" :disabled=\"props.disabled\" @value_changed=\"processTimeChange\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"panel-block\">\r\n                        <ButtonOkay addonclass=\"card-footer-item\" v-bind:disabled=\"!isValid\" v-on:click=\"showInterface=false\"/>\r\n                        <ButtonCancel addonclass=\"card-footer-item\" v-on:click=\"cancel\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {addDays,format,padLeft} from './dates';\r\n    import { ref, reactive, watch, readonly,computed,inject } from 'vue';\r\n    import { Icon, ButtonOkay, ButtonCancel } from '../common/';\r\n    import Time from './time.vue';\r\n    import translate from '../../messages/messages.js';\r\n    import { ValueChangedEvent } from './types';\r\n    import { coreFieldProps } from './common';\r\nimport { useLanguage } from '../shared';\r\n\r\n    const regDate = RegExp('^(\\\\d{2})-(\\\\d{2})-(\\\\d{4})$');\r\n    const regDateTime = RegExp('^(\\\\d{2})-(\\\\d{2})-(\\\\d{4}) (\\\\d{2}):(\\\\d{2})$');\r\n\r\n    type CalendarDay = {\r\n        Number:number,\r\n        Disabled: boolean,\r\n        isToday: boolean,\r\n        isSelected:boolean\r\n    };\r\n\r\n    interface fieldProps extends coreFieldProps {\r\n        label:string;\r\n        includeTime?:boolean;\r\n    }\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const time = ref(null);\r\n\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const showInterface = ref<boolean>(false);\r\n    const value = ref<string|null>(null);\r\n    const preValue = ref<string|null>(null);\r\n    const calendar = reactive({\r\n        Month: new Date().getMonth(),\r\n        Year: new Date().getFullYear(),\r\n        Today: new Date().getDay()\r\n    });\r\n\r\n    const Language = useLanguage(inject);\r\n\r\n    const Messages = readonly({\r\n        Sun: computed(()=>(translate('Date.Weekdays.Sun',Language))),\r\n        Mon: computed(()=>(translate('Date.Weekdays.Mon',Language))),\r\n        Tue: computed(()=>(translate('Date.Weekdays.Tue',Language))),\r\n        Wed: computed(()=>(translate('Date.Weekdays.Wed',Language))),\r\n        Thu: computed(()=>(translate('Date.Weekdays.Thu',Language))),\r\n        Fri: computed(()=>(translate('Date.Weekdays.Fri',Language))),\r\n        Sat: computed(()=>(translate('Date.Weekdays.Sat',Language))),\r\n    });\r\n\r\n    const isValid = computed<boolean>(() => {\r\n        return value.value!==null \r\n            && (props.includeTime ? regDateTime : regDate).test(value.value);\r\n    });\r\n\r\n    const getValue= ():Date|null=> {\r\n        if (value.value == null || value.value == '') {\r\n            return null;\r\n        } else {\r\n            if (!regDateTime.test(value.value) && props.includeTime) {\r\n                return null;\r\n            } else if (!props.includeTime && !regDate.test(value.value)) {\r\n                return null;\r\n            } else if (regDate.test(value.value) && props.includeTime) {\r\n                return null;\r\n            }\r\n            let tmp = (props.includeTime ? regDateTime.exec(value.value) : regDate.exec(value.value));\r\n            return new Date(parseInt(tmp[3]), parseInt(tmp[2]) - 1, parseInt(tmp[1]),\r\n                (props.includeTime ? parseInt(tmp[4]) : 0),\r\n                (props.includeTime ? parseInt(tmp[5]) : 0), 0, 0);\r\n        }\r\n    };\r\n\r\n    watch(value, (val) => {\r\n        if (val == null) {\r\n            emit('value_changed', { name: props.name, value: null });\r\n            calendar.Month = new Date().getMonth();\r\n            calendar.Year = new Date().getFullYear();\r\n        } else {\r\n            if (!regDate.test(val) && !regDateTime.test(val)) {\r\n                val = val.replaceAll(/[^0-9]/g, '');\r\n                var tmp = [];\r\n                for (var x = 0; x < val.length; x += 2) {\r\n                    if (x == 4) {\r\n                        tmp.push(val.substring(x, Math.min(val.length - x, 4) + x));\r\n                        x += 2;\r\n                    } else {\r\n                        tmp.push(val.substring(x, Math.min(val.length - x, 2) + x));\r\n                    }\r\n                }\r\n                if (tmp.length > 0) {\r\n                    if (!/^([0-1]|(0[1-9])|(1[0-2]))$/.test(tmp[0]))\r\n                        tmp.splice(0);\r\n                    if (tmp.length > 1) {\r\n                        if (!/^[0-3]/.test(tmp[1])) {\r\n                            tmp.splice(1);\r\n                        } else {\r\n                            if (/^(01|03|05|07|08|10|12)$/.test(tmp[0])) {\r\n                                if (!/^([0-3]|(0[1-9])|([1-2][0-9])|(3[0-1]))$/.test(tmp[1])) {\r\n                                    tmp.splice(1);\r\n                                }\r\n                            } else if (/^(02|04|06|09|11)$/.test(tmp[0])) {\r\n                                if (!/^([0-3]|(0[1-9])|([1-2][0-9])|(30))$/.test(tmp[1])) {\r\n                                    tmp.splice(1);\r\n                                }\r\n                            } else if (!/^([0-2]|(0[1-9])|([1-2][0-9]))$/.test(tmp[1])) {\r\n                                tmp.splice(1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (tmp.length > 3) {\r\n                        if (!/^([0-2]|([0-1][0-9])|(2[0-3]))$/.test(tmp[3])) {\r\n                            tmp.splice(3);\r\n                        }\r\n                    }\r\n                    if (tmp.length > 4) {\r\n                        if (!/^[0-5][0-9]?$/.test(tmp[4])) {\r\n                            tmp.splice(4);\r\n                        }\r\n                    }\r\n                }\r\n                val = tmp.join('');\r\n                if (!props.includeTime && val.length > 8) {\r\n                    val = val.substring(0, 8);\r\n                }\r\n                if (val.length >= 2) {\r\n                    val = val.substring(0, 2) + '-' + (val.length > 2 ? val.substring(2) : '');\r\n                }\r\n                if (val.length >= 5) {\r\n                    val = val.substring(0, 5) + '-' + (val.length > 5 ? val.substring(5) : '');\r\n                }\r\n                if (val.length >= 9 && props.includeTime) {\r\n                    val = val.substring(0, 9) + ' ' + (val.length > 9 ? val.substring(9) : '');\r\n                }\r\n                if (val.length >= 11) {\r\n                    val = val.substring(0, 11) + ':' + (val.length > 11 ? val.substring(11) : '');\r\n                }\r\n                value.value = val;\r\n            } else {\r\n                var d = getValue();\r\n                if (isValid) {\r\n                    emit('value_changed', { name: props.name, value: d });\r\n                }\r\n                calendar.Month = d.getMonth();\r\n                calendar.Year = d.getFullYear();\r\n            }\r\n        }\r\n    });\r\n\r\n    const MonthName = computed<string>(() => format(new Date(calendar.Year, calendar.Month, 1),Language,\"MMMM\"));\r\n    const Weeks = computed<CalendarDay[][]>(() => {\r\n        var ret:CalendarDay[][] = [];\r\n        var date = new Date(calendar.Year, calendar.Month, 1);\r\n        date = addDays(date,date.getDay() * -1);\r\n        var curVal = getValue();\r\n        var stopMonth = addDays(new Date(calendar.Year, calendar.Month, 1),32).getMonth();\r\n        while (date.getMonth() != stopMonth) {\r\n            var week = [];\r\n            for (var x = 0; x < 7; x++) {\r\n                week.push({\r\n                    Number: date.getDate(),\r\n                    Disabled: date.getMonth() != calendar.Month,\r\n                    isToday: format(date,Language,'yyyy-MM-dd') == format(new Date(),Language,'yyyy-MM-dd'),\r\n                    isSelected: (curVal != null && format(date,Language,'yyyy-MM-dd') == format(curVal,Language,'yyyy-MM-dd'))\r\n                });\r\n                date = addDays(date,1);\r\n            }\r\n            ret.push(week);\r\n        }\r\n        return ret;\r\n    });\r\n\r\n    const setValue = function (val:Date) {\r\n        if (val == null) {\r\n            value.value = null;\r\n        } else {\r\n            value.value = format(val,Language,'dd-MM-yyyy' + (props.includeTime ? ' HH:mm' : ''));\r\n        }\r\n    };\r\n\r\n    defineExpose({getValue,setValue});\r\n\r\n    const processTimeChange = (event:ValueChangedEvent):void=> {\r\n        if (event.value == null) {\r\n            if (value.value != null) {\r\n                value.value = value.value.split(' ')[0];\r\n            }\r\n        } else {\r\n            if (value.value != null) {\r\n                value.value = value.value.split(' ')[0] + ' ' + event.value;\r\n            } else {\r\n                value.value = \r\n                    `${padLeft((calendar.Month == new Date().getMonth() ? new Date().getDate() : 1).toString(),'0',2)}-${padLeft((calendar.Month + 1).toString(),'0',2)}-${calendar.Year} ${event.value}`;\r\n            }\r\n        }\r\n    };\r\n    const selectDate = (day:CalendarDay):void=>{\r\n        if (!day.Disabled && !day.isSelected) {\r\n            if (value.value === null) {\r\n                value.value = `${padLeft(day.Number.toString(),'0',2)}-${padLeft((calendar.Month+1).toString(),'0',2)}-${calendar.Year}`\r\n                    + (props.includeTime ? (time.value.getValue() == null ? '' : ' ' + time.value.getValue()) : '');\r\n            } else {\r\n                var tmp = value.value.split(' ');\r\n                tmp[0] = `${padLeft(day.Number.toString(),'0',2)}-${padLeft((calendar.Month+1).toString(),'0',2)}-${calendar.Year}`\r\n                value.value = `${tmp[0]}${(tmp.length > 1 ? ' ' + tmp[1] : '')}`;\r\n            }\r\n        }\r\n    };\r\n    const cancel = ():void=>{\r\n        value.value = preValue.value;\r\n        showInterface.value = false;\r\n    };\r\n    const calendarClicked = ():void=>{\r\n        if (!props.disabled){\r\n            preValue.value=value.value;\r\n            showInterface.value=true;\r\n        }\r\n    };\r\n    const cancelClicked = ():void=> {\r\n        if (!props.disabled) {\r\n            value.value=null;\r\n        }\r\n    };\r\n    const MoveMonth = (direction:number):void=>{\r\n        if (calendar.Month + direction == -1) {\r\n            calendar.Year = calendar.Year - 1;\r\n            calendar.Month = 11;\r\n        } else if (calendar.Month + direction == 12) {\r\n            calendar.Year = calendar.Year + 1;\r\n            calendar.Month = 0;\r\n        } else {\r\n            calendar.Month += direction;\r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n.is-dateselect{\r\n    width: 355px;\r\n    margin-left: 130px;\r\n}\r\n\r\n.is-dateselect>.panel-block,\r\n.is-dateselect>.panel-heading{\r\n    padding:0;\r\n}\r\n</style>","<template>\r\n    <div class=\"summernote\" ref=\"snote\"/>    \r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch, onMounted, onUnmounted, ref } from 'vue';\r\n    import { css } from '../utilities';\r\n    import {coreFieldProps} from './common';\r\nimport { ValueChangedEvent } from './types';\r\n\r\n    css(['https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote-lite.min.css']);\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    await import('summernote');\r\n    const snote = ref(null);\r\n\r\n    const props = defineProps<coreFieldProps>();\r\n        const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    watch([props.disabled],(val)=>{\r\n        if (snote.value!=null)\r\n            $(snote.value).summernote(val ? 'disable' : 'enable');\r\n    });\r\n\r\n    const getValue = ():string=>{\r\n        return $(snote.value).summernote('code');\r\n    };\r\n    const setValue = (value:string):void=>{\r\n        $(snote.value).summernote('code',value);\r\n    }\r\n\r\n    defineExpose({getValue,setValue});\r\n\r\n    onMounted(()=>{\r\n        $(snote.value).summernote({\r\n            height:400,\r\n            callbacks: {\r\n                onChange: function(contents) {\r\n                    emit('value_changed',{name:props.name,value:contents});\r\n                }\r\n            }\r\n        });\r\n        if (props.disabled??false){\r\n            $(snote.value).summernote('disable');\r\n        }\r\n    });\r\n\r\n    onUnmounted(()=>{\r\n        $(snote.value).summernote('destroy');\r\n    });\r\n</script>","ï»¿<template>\r\n    <component :is=\"props.subtype\">{{Translator(props.label)}}</component>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import { TranslateMethod } from './types';\r\n    import { useTranslator } from './common';\r\n    import { inject } from 'vue';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        label:string,\r\n        subtype?:string,\r\n        Translate?:TranslateMethod\r\n    }>(),{\r\n        subtype:'h1'\r\n    });\r\n\r\n    const Translator = useTranslator(props,inject);\r\n</script>","ï»¿<template>\r\n    <input type=\"hidden\" class=\"input\" :name=\"props.name\" v-model=\"value\">\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch } from 'vue';\r\nimport { ValueChangedEvent } from './types';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        name:string\r\n    }>();\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    watch(value, (val) => emit('value_changed', { name: props.name, value: val }));\r\n\r\n    const getValue = ():string => { return value.value; };\r\n    const setValue = (val:string):void=> { value.value = val; };\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>","ï»¿<template>\r\n    <input type=\"number\" class=\"input\" :name=\"name\" v-model=\"value\" :disabled=\"disabled\" :min=\"props.min\" :max=\"props.max\" :step=\"props.step\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch } from 'vue';\r\n    import { coreFieldProps } from './common';\r\nimport { ValueChangedEvent } from './types';\r\n\r\n    interface fieldProps extends coreFieldProps {\r\n        min?:number;\r\n        max?:number;\r\n        step?:number;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        disabled:false\r\n    });\r\n    \r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    const getValue = ():number|null => {\r\n        if (value.value === '')\r\n            return null;\r\n        let result:number = parseInt(value.value);\r\n        if (props.min !== undefined) {\r\n            if (result < props.min * 1)\r\n                return null;\r\n        }\r\n        if (props.max !== undefined) {\r\n            if (result > props.max * 1)\r\n                return null;\r\n        }\r\n        return result;\r\n    };\r\n    const setValue = (val:number|string|null) => { value.value = (val===null?'':val.toString()); }\r\n\r\n    watch([value], (val) => emit('value_changed', { name: props.name, value: getValue() }));\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>","ï»¿<template>\r\n    <p v-bind:id=\"props.name\">{{Translator(props.label)}}</p>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { TranslateMethod } from './types';\r\n    import { useTranslator } from './common';\r\n    import { inject } from 'vue';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        label:string,\r\n        name?:string,\r\n        Translate?:TranslateMethod\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n</script>","ï»¿<template>\r\n    <div>\r\n        <Promised v-bind:promise=\"Values\">\r\n            <template v-slot=\"values:ListItemValue[]|null\">\r\n                <template v-for=\"val in values\" v-if=\"values!=null\">\r\n                    <label class=\"radio\" v-show=\"!hiddenValues.some(v=>v===val.value.toString())\">\r\n                        <input type=\"radio\" :name=\"props.name\" :value=\"val.value\" class=\"radio\" :disabled=\"props.disabled||disabledValues.some(v=>v===val.value.toString())\"/>\r\n                        {{Translator(val.label)}}\r\n                    </label>\r\n                    <br />\r\n                </template>\r\n            </template>\r\n            <template #pending>\r\n                <Progress/> \r\n            </template>\r\n            <template #rejected>\r\n                <Notification :type=\"NoticeTypes.danger\" :message=\"Error\"/>\r\n            </template>\r\n        </Promised>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, computed, watch, inject } from 'vue';\r\n    import {Promised} from '../common/Promised';\r\n    import {ListItemValue, ValueChangedEvent } from './types';\r\n    import { commonFieldProps,resolveListItems,useTranslator, useValuesList } from './common';\r\n    import {Progress,Notification} from '../common/';\r\n    import {NoticeTypes} from '../enums';\r\n    import { useLanguage } from '../shared';\r\n    import translate from '../../messages/messages.js';\r\n\r\n    interface fieldProps extends commonFieldProps {\r\n        values:ListItemValue[]|Promise<ListItemValue[]>|(()=>ListItemValue[])|(()=>Promise<ListItemValue[]>);\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<fieldProps>();\r\n\r\n    const Language = useLanguage(inject);\r\n    const Error = computed<string>(()=>translate('Form.Error',Language));\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const val = ref<any|null>(null);\r\n\r\n    const getValue = function () { return val.value; }\r\n\r\n    watch(val, (val) => {\r\n        emit('value_changed', { name: props.name, value: getValue() });\r\n    });\r\n\r\n    const Values = computed<Promise<ListItemValue[]>>(async () => {\r\n        if (props.values == null) {\r\n            return [];\r\n        } else {\r\n            let result:ListItemValue[] = await resolveListItems<ListItemValue>(props.values);\r\n            if (val.value===null && result.some(r=>r.selected)){\r\n                val.value = result.find(r=>r.selected).value;\r\n            }\r\n            return result.map((item:ListItemValue):ListItemValue=>{\r\n                return {\r\n                    label:item.label,\r\n                    value:item.value,\r\n                    selected:val.value===item.value\r\n                };\r\n            });\r\n        }\r\n    });\r\n    const setValue = (value:any):void => {\r\n        val.value = value;\r\n    };\r\n    \r\n    const {hiddenValues,disabledValues} = useValuesList(props.name,inject);\r\n\r\n    defineExpose({ getValue, setValue});\r\n</script>","ï»¿<template>\r\n    <div class=\"select\">\r\n        <Promised v-if=\"Values!=null\" v-bind:promise=\"Values\">\r\n            <template v-slot=\"{value}\">\r\n                <select :id=\"props.name\" :name=\"props.name\" :multiple=\"props.multiple\" v-bind:class=\"[props.multiple ? 'is-multiple' : '']\" v-model=\"vals\" :disabled=\"props.disabled\">\r\n                    <template  v-if=\"value!=null\" v-for=\"val in value\">\r\n                        <option v-if=\"val.values==undefined\" :value=\"val.value\" :selected=\"val.selected\" v-show=\"!hiddenValues.some(h=>h===val.value.toString())\" v-bind:disabled=\"disabledValues.some(d=>d===val.value.toString())\">{{Translator(val.label)}}</option>\r\n                        <optgroup v-if=\"val.values!=undefined\" v-bind:label=\"Translator(val.label)\">\r\n                            <option v-for=\"v in val.values\" :value=\"v.value\" :selected=\"v.selected\" v-show=\"!hiddenValues.some(h=>h===v.value.toString())\" v-bind:disabled=\"disabledValues.some(d=>d===v.value.toString())\">\r\n                                {{Translator(v.label)}}\r\n                            </option>\r\n                        </optgroup>\r\n                    </template>\r\n                </select>\r\n            </template>\r\n            <template #pending>\r\n                <Progress/> \r\n            </template>\r\n            <template #rejected>\r\n                <Notification :type=\"NoticeTypes.danger\" :message=\"Error\"/>\r\n            </template>\r\n        </Promised>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch, inject,computed, toRaw } from 'vue';\r\n    import {Promised} from '../common/Promised';\r\n    import { SelectListItemValue, ValueChangedEvent} from './types';\r\n    import { commonFieldProps,resolveListItems,useTranslator, useValuesList } from './common';\r\n    import {Progress,Notification} from '../common/';\r\n    import {NoticeTypes} from '../enums';\r\n    import translate from '../../messages/messages.js';\r\n    import { useLanguage } from '../shared';\r\n\r\n    const mergeValueGroups = (parent:string|null, value:SelectListItemValue, dest:SelectListItemValue[]):SelectListItemValue[]=> {\r\n        let base:any = {\r\n            label: (parent === null ? value.label : `${parent}->${value.label}`),\r\n            values: []\r\n        };\r\n        let idx = dest.length;\r\n        dest.push(base);\r\n        value.values.forEach(val=>{\r\n            if (val.values===undefined){\r\n                base.values.push(val);\r\n            }else{\r\n                dest = mergeValueGroups(base.label,val,dest);\r\n            }\r\n        });\r\n        if (dest[idx].values.length == 0) {\r\n            dest.splice(idx, 1);\r\n        }\r\n        return dest;\r\n    };\r\n\r\n    interface fieldProps extends commonFieldProps{\r\n        values:SelectListItemValue[]|Promise<SelectListItemValue[]>|(()=>SelectListItemValue[])|(()=>Promise<SelectListItemValue[]>);\r\n        multiple?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<fieldProps>(),\r\n    {\r\n        multiple:false\r\n    });\r\n\r\n    const Language = useLanguage(inject);\r\n    const Error = computed<string>(()=>translate('Form.Error',Language));\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const vals = ref<any[]|null>(null);\r\n    const locked = ref<boolean>(false);\r\n    \r\n    const Values = computed<Promise<SelectListItemValue[]>>(async () => {\r\n        if (props.values == null) {\r\n            return [];\r\n        } else {\r\n            let result:SelectListItemValue[] = await resolveListItems<SelectListItemValue>(props.values);\r\n            let tvalues:any[] = result.filter(s=>s.selected).map(s=>s.value);\r\n            if (result.some(s=>s.values!==undefined)){\r\n                result.filter(s=>s.values!==undefined)\r\n                .forEach(s=>{\r\n                    tvalues = tvalues.concat(\r\n                        s.values.filter(v=>v.selected).map(v=>v.value)\r\n                    );\r\n                });\r\n            }\r\n            if (vals.value === null || vals.value.length === 0) {\r\n                vals.value = null;\r\n            } else {\r\n                result = result.map(r=>{\r\n                    let t = r;\r\n                    if (t.values!==undefined){\r\n                        t.values = t.values.map(sv=>{\r\n                            sv.selected=vals.value.some(v=>v===sv.value);\r\n                            return sv;\r\n                        });\r\n                    }\r\n                    return t;\r\n                });\r\n                vals.value.forEach(v=>{\r\n                    if (!result.some(r=>(r.value!==undefined && r.value===v)\r\n                    || (r.values!==undefined && r.values.some(sr=>sr.value===v)))){\r\n                        result.push({\r\n                            label:v,\r\n                            value:v\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            let dest:SelectListItemValue[] = [];\r\n            result.forEach(r=>{\r\n                if (r.values===undefined){\r\n                    dest.push(r);\r\n                }else{\r\n                    dest=mergeValueGroups(r.label,r,dest);\r\n                }\r\n            });\r\n            return dest;\r\n        }\r\n    });\r\n\r\n    const getValue = ():any[]|any=> { \r\n        return (vals.value == null ? null : (vals.value.length == 0 ? null : (props.multiple ? vals.value.slice() : (Array.isArray(vals.value) ? vals.value[0] : vals.value)))); \r\n    };\r\n\r\n    watch(vals, () => {\r\n        if (!locked.value)\r\n            emit('value_changed', { name: props.name, value: getValue() });\r\n    });\r\n    watch(locked, (val) => {\r\n        if (!val)\r\n            emit('value_changed', { name: props.name, value: getValue() });\r\n    });\r\n\r\n    const setValue = (val:any[]|any):void=> {\r\n        locked.value = true;\r\n        if (val !== null && val !== undefined) {\r\n            if (props.multiple) {\r\n                vals.value = (Array.isArray(val) ? val : [val]);\r\n            } else {\r\n                vals.value = val;\r\n            }\r\n        } else {\r\n            if (props.multiple){\r\n                vals.value=[];\r\n            }else{\r\n                vals.value=null;\r\n            }\r\n        }\r\n        locked.value = false;\r\n    };\r\n    \r\n    const {hiddenValues,disabledValues} = useValuesList(props.name,inject);\r\n\r\n    defineExpose({ getValue, setValue });\r\n\r\n</script>","ï»¿<template>\r\n    <div class=\"field\"><input type=\"checkbox\" class=\"switch is-rounded\" :id=\"props.name\" :name=\"props.name\" v-model=\"isChecked\" :disabled=\"props.disabled\"/>\r\n        <label v-bind:for=\"name\">\r\n            {{Translator(props.label)}}\r\n            <span class=\"help is-danger\" v-if=\"props.required\">*</span>\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { inject, ref, watch } from 'vue';\r\n    import {commonFieldProps, useTranslator} from './common';\r\nimport { ValueChangedEvent } from './types';\r\n\r\n    interface fieldProps extends commonFieldProps{\r\n        label:string;\r\n        required?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<fieldProps>();\r\n    \r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const isChecked = ref(false);\r\n\r\n    watch(isChecked, (val) => emit('value_changed', { name: props.name, value: val }));\r\n\r\n    const getValue =  ():boolean=> { return isChecked.value; };\r\n    const setValue = (val:boolean):void=> { isChecked.value = val; };\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>","ï»¿<template>\r\n    <input :type=\"subtype\" class=\"input\" v-bind:name=\"name\" v-bind:disabled=\"disabled\" :maxlength=\"props.maxlength\" v-model=\"value\">\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { ref, watch } from 'vue';\r\n    import { coreFieldProps } from './common';\r\nimport { ValueChangedEvent } from './types';\r\n\r\n    interface fieldProps extends coreFieldProps{\r\n        subtype:string,\r\n        maxlength?:number\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<fieldProps>();\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n    const value = ref(null);\r\n\r\n    watch(value, (val) => emit('value_changed', { name: props.name, value: val }));\r\n\r\n    const getValue = ():any=> { return value.value; }\r\n    const setValue = (val:any):void=> { value.value = val; }\r\n\r\n    defineExpose({ getValue, setValue });\r\n</script>","ï»¿<template>\r\n    <textarea class=\"textarea\" :name=\"props.name\" :rows=\"props.rows\" :cols=\"props.cols\" :maxlength=\"props.maxlength\" :disabled=\"props.disabled\" v-on:keydown=\"keyPressed\" v-model=\"value\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { watch,ref } from 'vue';\r\n    import { coreFieldProps } from './common';\r\nimport { ValueChangedEvent } from './types';\r\n\r\n    const tabKeyCode = 9;\r\n    const tab = String.fromCharCode(tabKeyCode);\r\n    const newLine = String.fromCharCode(10);\r\n\r\n    interface fieldProps extends coreFieldProps{\r\n        maxlength?:number,\r\n        rows?:number,\r\n        cols?:number,\r\n        supportsTab?:boolean\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<fieldProps>();\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent]\r\n    }>();\r\n\r\n    const value = ref<string|null>(null);\r\n\r\n    watch(value, (val) => { emit('value_changed', { name: props.name, value: val }); });\r\n\r\n    const getValue = ():string=> { return value.value; };\r\n    const setValue = (val:string|null):void=> { value.value = val; };\r\n\r\n    defineExpose({ getValue, setValue });\r\n\r\n    const keyPressed = (event:any):boolean=> {\r\n        if (props.supportsTab) {\r\n            let val = getValue();\r\n            switch (event.keyCode) {\r\n                case tabKeyCode:\r\n                    let selectionStart = event.target.selectionStart;\r\n                    let selectionEnd = event.target.selectionEnd;\r\n                    let start = val.substring(0, selectionStart);\r\n                    let end = (val.length > selectionEnd ? val.substring(selectionEnd) : '');\r\n                    let chunk = (selectionStart == selectionEnd ? '' : val.substring(selectionStart, selectionEnd));\r\n                    if (chunk.indexOf(String.fromCharCode(10))<0) {\r\n                        if (event.shiftKey) {\r\n                            if (chunk.startsWith(tab)) {\r\n                                chunk = chunk.substring(1);\r\n                                selectionStart--;\r\n                            } else if (start.endsWith(tab)) {\r\n                                start = start.substring(0, start.length - 1);\r\n                                selectionStart--;\r\n                            }\r\n                        } else {\r\n                            chunk = tab + chunk;\r\n                        }\r\n                    } else {\r\n                        let addnewLine = false;\r\n                        if (chunk.endsWith(newLine)) {\r\n                            addnewLine = true;\r\n                            chunk = chunk.substring(0, chunk.length - 1);\r\n                        }\r\n                        let chunks = chunk.split(newLine);\r\n                        chunk = '';\r\n                        if (event.shiftKey && start.endsWith(tab)) {\r\n                            start = start.substring(0, start.length - 1);\r\n                            selectionStart--;\r\n                        }\r\n                        chunks.forEach((c,index)=>{\r\n                            if (event.shiftKey && c.startsWith(tab)) {\r\n                                c = c.substring(1);\r\n                            } else if (!event.shiftKey) {\r\n                                c = tab + c;\r\n                            }\r\n                            chunk += c + (index === chunks.length - 1 ? '' : newLine);\r\n                        });\r\n                        if (addnewLine) {\r\n                            chunk += newLine;\r\n                        }\r\n                    }\r\n                    val = start + chunk + end;\r\n                    selectionStart += (chunk.length == 1 ? 1 : 0);\r\n                    selectionEnd = selectionStart + (chunk.length == 1 ? 0 : chunk.length);\r\n                    setValue(val);\r\n                    event.target.selectionStart = selectionStart;\r\n                    event.target.selectionEnd = selectionEnd;\r\n                    event.target.focus();\r\n                    if (event.preventDefault != undefined)\r\n                        event.preventDefault();\r\n                    return false;\r\n                default:\r\n                    return true;\r\n                    break;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n</script>","ï»¿<template>\r\n    <div class=\"columns\">\r\n        <FormComponent v-for=\"(input,index) in props.inputs\" :ref=\"(el) => (refs[index] = el)\"  :input=\"input\" v-on:value_changed=\"emit('value_changed',$event)\" v-on:button_clicked=\"emit('button_clicked',$event)\" :disabled=\"props.disabled||disabledFields.some(f=>f===input.name)\" :hidden=\"hiddenInputs.some(f=>f===input.name)\"/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { inject, ref ,watch} from 'vue';\r\n    import FormComponent from './form-component.vue';\r\n    import { FormInputType, ValueChangedEvent } from './types';\r\nimport { DISABLED_FIELDS_PROPERTY, HIDDEN_FIELDS_PROPERTY } from './common';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<{\r\n        inputs:FormInputType[],\r\n        disabled?:boolean\r\n    }>(),{\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent],\r\n         button_clicked:[name:string]\r\n    }>();\r\n\r\n    const hiddenInputs = inject<string[]>(HIDDEN_FIELDS_PROPERTY);\r\n    const disabledFields = inject<string[]>(DISABLED_FIELDS_PROPERTY);\r\n\r\n    const setValue = (values:any):void=> {\r\n        refs.forEach(input => {\r\n            switch (input.type) {\r\n                case 'subform':\r\n                    input.setValue(values);\r\n                    break;\r\n                default:\r\n                    if (input.setValue !== undefined) {\r\n                        if (values === null) {\r\n                            input.setValue(null);\r\n                        } else if (Object.keys(values).some(k=>k===input.fieldName)) {\r\n                            input.setValue(values[input.fieldName]);\r\n                        } else if (Object.keys(values).some(k=>k===input.altFieldName)) {\r\n                            input.setValue(values[input.altFieldName]);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    const getValue = ():any=> {\r\n        var result:any = {};\r\n        refs.forEach(input => {\r\n            if (input.getValue != undefined) {\r\n                switch (input.type) {\r\n                    case 'subform':\r\n                        result = $.extend(result,input.getValue());\r\n                        break;\r\n                    default:\r\n                        result[input.fieldName] = input.getValue();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    const isValid = ():boolean=> {\r\n        return !refs.some(input=>!(input.isValid===undefined?true:input.isValid()));\r\n    };\r\n    \r\n    defineExpose({ setValue, getValue, isValid});\r\n\r\n    const refs = props.inputs.map(i=>ref(null));\r\n</script>","ï»¿<template>\r\n    <div class=\"box\" :id=\"props.name\" :name=\"props.name\" v-show=\"!props.hidden\">\r\n        <Row v-for=\"(row,index) in rows\" :ref=\"(el) => (refs[index] = el)\" :inputs=\"row\" :disabled=\"props.disabled\" v-on:value_changed=\"emit('value_changed',$event)\" v-on:button_clicked=\"emit('button_clicked',$event)\"/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import Row from './row.vue';\r\n    import { ref, watch, computed, Ref } from 'vue';\r\n    import { FormInputType, ValueChangedEvent } from './types';\r\n    import {buildFieldRows, coreFieldProps} from './common';\r\n\r\n    interface fieldProps extends coreFieldProps {\r\n        fields:FormInputType[];\r\n        hidden?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<fieldProps>(),{\r\n        hidden:false,\r\n        disabled:false\r\n    });\r\n    \r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent],\r\n         button_clicked:[name:string]\r\n    }>();\r\n\r\n    let refs = [];\r\n    const hidden = ref(false);\r\n\r\n    const rows = computed<FormInputType[][]>(() => {\r\n        let result = buildFieldRows(props.fields);\r\n        refs = result.map(r=>ref(null));\r\n        return result;\r\n    });\r\n\r\n    const isValid = ():boolean=> !refs.some(row=>!(row.isValid===undefined?true:row.isValid()));\r\n    const setValue = (values:any):void=>refs.forEach(row => row.setValue(values));\r\n    const getValue = ():any=> {\r\n        var ret = {};\r\n        refs.forEach(row => {\r\n            ret = $.extend(ret, row.getValue());\r\n        });\r\n        return ret;\r\n    };\r\n    \r\n    defineExpose({ isValid, setValue, getValue});\r\n    \r\n</script>","ï»¿<template>\r\n    <div class=\"field column\" v-bind:class=\"[columns]\" v-show=\"!props.hidden\">\r\n        <template v-if=\"props.input.type=='header'\">\r\n            <Header v-bind:subtype=\"props.input.subtype\" v-bind:label=\"props.input.label\" ref=\"inp\"/>\r\n        </template>\r\n        <template v-else-if=\"props.input.type=='paragraph'\">\r\n            <Paragraph v-bind:name=\"props.input.name\" v-bind:label=\"props.input.label\" ref=\"inp\"/>\r\n        </template>\r\n        <template v-else-if=\"props.input.type=='button'\">\r\n            <Button v-bind:name=\"props.input.name\" v-bind:sstyle=\"props.input.style\" v-bind:className=\"props.input.className\" v-bind:icon=\"props.input.icon\" v-bind:label=\"props.input.label\" v-bind:disabled=\"Disabled\" v-on:button_clicked=\"button_clicked\" ref=\"inp\"/>\r\n        </template>\r\n        <template v-else>\r\n            <label class=\"label\" v-bind:for=\"props.input.name\" v-if=\"hasLabel\">\r\n                {{Translator(props.input.label)}}\r\n                <span class=\"help is-danger\" v-if=\"props.input.required\">*</span>\r\n            </label>\r\n            <div class=\"control\">\r\n                <component :is=\"inputType\" v-bind=\"inputProps\" v-on:value_changed=\"value_changed\" ref=\"inp\"/>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import 'jquery';\r\n    import { onMounted, computed, ref,readonly,inject } from 'vue';\r\n    import Autocomplete from './autocomplete.vue';\r\n    import Button from './button.vue';\r\n    import CheckboxGroup from './checkbox-group.vue';\r\n    import Checkbox from './checkbox.vue';\r\n    import Date from './date.vue';\r\n    import FullEditor from './full-editor.vue';\r\n    import Header from './header.vue';\r\n    import Hidden from './hidden.vue';\r\n    import Number from './number.vue';\r\n    import Paragraph from './paragraph.vue';\r\n    import RadioGroup from './radio-group.vue';\r\n    import Select from './select.vue';\r\n    import Switch from './switch.vue';\r\n    import Text from './text.vue';\r\n    import Textarea from './textarea.vue';\r\n    import Time from './time.vue';\r\n    import Subform from './subform.vue';\r\n    import { FormInputType, ValueChangedEvent } from './types';\r\n    import { translateFieldProps, useTranslator } from './common';\r\n\r\n    const LABELLED_FIELDS = ['autocomplete', 'checkbox-group', 'date', 'number', 'radio-group', 'select', 'text', 'textarea', 'time', 'file_download', 'subform', 'textarea-code'];\r\n    const TRANSLATE_FIELDS = ['subform','switch','select','radio-group','paragraph','header','checkbox-group','checkbox','button','autocomplete'];\r\n\r\n    interface formComponentProps extends translateFieldProps{\r\n        input:FormInputType,\r\n        disabled?:boolean,\r\n        hidden?:boolean\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const inp = ref<any>(null);\r\n\r\n    const emit = defineEmits<{\r\n         value_changed:[data:ValueChangedEvent],\r\n         button_clicked:[name:string]\r\n    }>();\r\n\r\n    const props = withDefaults(defineProps<formComponentProps>(),{\r\n        disabled:false,\r\n        hidden:false\r\n    });\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    const type = readonly(ref(props.input.type));\r\n\r\n    const inputType = computed(() => {\r\n        let result = null;\r\n        switch (props.input.type) {\r\n            case 'autocomplete': result = Autocomplete; break;\r\n            case 'button': result = Button; break;\r\n            case 'checkbox-group': result = CheckboxGroup; break;\r\n            case 'checkbox': result = Checkbox; break;\r\n            case 'date': result = Date; break;\r\n            case 'full-editor': result = FullEditor; break;\r\n            case 'header': result = Header; break;\r\n            case 'hidden': result = Hidden; break;\r\n            case 'number': result = Number; break;\r\n            case 'paragraph': result = Paragraph; break;\r\n            case 'radio-group': result = RadioGroup; break;\r\n            case 'select': result = Select; break;\r\n            case 'Switch': result = Switch; break;\r\n            case 'text': result = Text; break;\r\n            case 'textarea': result = Textarea; break;\r\n            case 'time': result = Time; break;\r\n            case 'subform': result = Subform; break;\r\n        }\r\n        return result;\r\n    });\r\n\r\n    const setValue = function (value) {\r\n        if (inp.value !== null && inp.value.setValue !== undefined) {\r\n            inp.value.setValue(value);\r\n        }\r\n    };\r\n\r\n    onMounted(() => {\r\n        if (inp.value !== null && props.input.value !== undefined && props.input.value !== null) {\r\n            setValue(props.input.value);\r\n        }\r\n    });\r\n\r\n    const Disabled = computed<boolean>(() => props.input.disabled??props.disabled??false);\r\n    const columns = computed<string>(() => `is-${props.input.form_columns??12}`);\r\n    const fieldName = computed(() => props.input.name);\r\n    const altFieldName = computed(() => props.input.processVariable??props.input.name);\r\n    const hasLabel = computed(() =>(LABELLED_FIELDS.some(l=>l===props.input.type) && props.input.label !== undefined && props.input.label !== null));\r\n    const inputProps = computed(() => {\r\n        let result:any = $.extend({}, props.input);\r\n        delete result.type;\r\n        if (result.className != undefined) {\r\n            delete result.className;\r\n        }\r\n        if (result.form_columns != undefined) {\r\n            delete result.form_columns;\r\n        }\r\n        if (TRANSLATE_FIELDS.some(f=>f===props.input.type)){\r\n            result.translate = props.translate;\r\n        }\r\n        result.disabled = props.disabled;\r\n        return result;\r\n    });\r\n\r\n    const value_changed = (data:ValueChangedEvent) => {\r\n        if (data.value !== undefined && data.value !== null && Array.isArray(data.value)) {\r\n            let tmp = [...data.value];\r\n            data.value = tmp;\r\n        }\r\n        emit('value_changed', data);\r\n    };\r\n    const button_clicked = (data:string)=> {\r\n        emit('button_clicked', data);\r\n    };\r\n    const getValue = ():any|null=> {\r\n        if (inp.value != null) {\r\n            if (inp.value.getValue != undefined) {\r\n                let ret = inp.value.getValue();\r\n                if (ret !== undefined && ret !== null && Array.isArray(ret)) {\r\n                    return [...ret];\r\n                }\r\n                return ret;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    const isValid = ():boolean=> {\r\n        if (props.input.type === 'subform' && inp.value !== null)\r\n            return inp.value.isValid();\r\n        if (props.input.required??false) {\r\n            let val = getValue();\r\n            return val!==undefined && val!==null \r\n                && (Array.isArray(val) ? val.length>0 : true)\r\n                && val.toString()!=='';\r\n        }\r\n        return true;\r\n    };\r\n    const setValues = (values:any|null):void=> {\r\n        if (props.input.type === 'subform' && inp.value !== null)\r\n            inp.value.setValues(values);\r\n        else\r\n            throw 'unable to call set values on any form element except a subform';\r\n    };\r\n    \r\n    defineExpose({ setValue, fieldName, type,altFieldName, getValue, isValid, setValues});\r\n</script>\r\n\r\n<style>\r\n    label.label > span.help.is-danger{\r\n        display:inline-block;\r\n    }\r\n</style>","ï»¿<template>\r\n    <form onsubmit=\"return false;\" class=\"container is-fullhd\">\r\n        <template v-if=\"rows!=null\">\r\n            <Row v-for=\"(row,index) in rows\" :ref=\"(el) => (refs[index] = el)\" v-bind:inputs=\"row\" :transte=\"props.translate\" v-bind:key=\"index\" v-on:value_changed=\"emit('value_changed',$event)\" v-on:button_clicked=\"emit('button_clicked',$event)\" :disabled=\"disabled\"/>\r\n        </template>\r\n    </form>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed, ref,provide, inject, readonly } from 'vue';\r\n    import Row from './row.vue';\r\n    import { FormInputType, TranslateMethod, ValueChangedEvent } from './types';\r\n    import { DISABLED_FIELDS_PROPERTY, HIDDEN_FIELDS_PROPERTY, buildFieldRows, translateFieldProps, useTranslator } from './common';\r\n\r\n    interface formProps extends translateFieldProps{\r\n        elements:FormInputType[];\r\n        disabled?:boolean;\r\n    };\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = withDefaults(defineProps<formProps>(),{\r\n        disabled:false\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        value_changed:[data:ValueChangedEvent],\r\n        button_clicked:[name:string]\r\n    }>();\r\n\r\n    const Translator = useTranslator(props,inject);\r\n\r\n    provide<TranslateMethod|null>('Translate',(value:string):string=>{\r\n        return Translator.value(value);\r\n    });\r\n\r\n    let refs = [];\r\n\r\n    const rows = computed<FormInputType[][]>(()=>{\r\n        if (props.elements != null) {\r\n            let result = buildFieldRows(props.elements);\r\n            refs = result.map(r=>ref(null));\r\n            return result;\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n    const getValues=():any=>{\r\n        let ret:any = {};\r\n        refs.forEach(row => { ret = $.extend(ret, row.getValue()); });\r\n        return ret;\r\n    };\r\n    const setValues = (values:any):void=> {\r\n        refs.forEach(row => row.setValue(values));\r\n    };\r\n    const isValid = ():boolean=> {\r\n        return !refs.some(row=>!(row.isValid===undefined?true:row.isValid()));\r\n    };\r\n\r\n    const hiddenFields = ref<string[]>([]);\r\n    provide(HIDDEN_FIELDS_PROPERTY,readonly(hiddenFields));\r\n    const hideField = (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            hiddenFields.value = [...hiddenFields.value,...name];\r\n        } else {\r\n            hiddenFields.value.push(name);\r\n        }\r\n    };\r\n    const showField = (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            hiddenFields.value = hiddenFields.value.filter(f=>name.indexOf(f)>=0);\r\n        } else {\r\n            hiddenFields.value = hiddenFields.value.filter(f=>f!==name);\r\n        }\r\n    };\r\n\r\n    const disabledFields = ref<string[]>([]);\r\n    provide(DISABLED_FIELDS_PROPERTY,readonly(disabledFields));\r\n    const disableField = (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            disabledFields.value = [...disabledFields.value,...name];\r\n        } else {\r\n            disabledFields.value.push(name);\r\n        }\r\n    };\r\n    const enableField= (name:string|string[]):void=> {\r\n        if (Array.isArray(name)) {\r\n            disabledFields.value = disabledFields.value.filter(f=>name.indexOf(f)>=0);\r\n        } else {\r\n            disabledFields.value = disabledFields.value.filter(f=>f!==name);\r\n        }\r\n    };\r\n\r\n    defineExpose({getValues,setValues,isValid,hideField,showField,disableField,enableField});\r\n</script>","ï»¿<template>\r\n    <section :class=\"['hero','is-small','has-text-centered',(type==null ? '' : 'is-'+props.type)]\">\r\n        <div class=\"hero-body\">\r\n            <p class=\"title\">{{props.title}}</p>\r\n            <p class=\"subtitle\" v-if=\"props.subtitle\">{{props.subtitle}}</p>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import { ColorTypes } from '../enums';\r\n\r\n    const props = defineProps<{\r\n        type:ColorTypes,\r\n        title:string,\r\n        subtitle?:string|null\r\n    }>();\r\n</script>","ï»¿<template>\r\n    <div class=\"box\">\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n</script>","ï»¿<template>\r\n    <li :class=\"{'is-active':props.active}\">\r\n        <a v-on:click=\"emit('click')\">\r\n            <span class=\"icon is-clickable\" v-if=\"props.icon\">\r\n                <Icon :icon=\"props.icon\" />\r\n            </span>\r\n            {{props.title}}\r\n        </a>\r\n    </li>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {Icon} from '../common/';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        active:boolean,\r\n        title:string,\r\n        icon?:string|null\r\n    }>();\r\n    \r\n    const emit = defineEmits<{click}>();\r\n</script>","ï»¿<template>\r\n    <nav :class=\"Class\" aria-label=\"breadcrumbs\">\r\n        <ul>\r\n            <slot/>\r\n        </ul>\r\n    </nav>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import {computed} from 'vue';\r\n    import {BreadCrumbAlignments,Sizes,BreadCrumbSeperators} from '../enums';\r\n\r\n    const props = withDefaults(defineProps<{\r\n        alignment?:BreadCrumbAlignments,\r\n        size?:Sizes,\r\n        seperator?:BreadCrumbSeperators\r\n    }>(),{\r\n        alignment:BreadCrumbAlignments.left,\r\n        size:Sizes.normal\r\n    });\r\n\r\n    const Class = computed<string[]>(()=>{\r\n        let result:string[] = ['breadcrumb'];\r\n        if (props.alignment && props.alignment!==BreadCrumbAlignments.left){\r\n            result.push(`is-${props.alignment}`);\r\n        }\r\n        if (props.size && props.size!==Sizes.normal){\r\n            result.push(`is-${props.size}`);\r\n        }\r\n        if (props.seperator){\r\n            result.push(`has-${props.seperator}-seperator`);\r\n        }\r\n        return result;\r\n    });\r\n</script>","ï»¿<template>\r\n    <div class=\"columns\" v-bind:class=\"[\r\n         {\r\n            'is-mobile':props.mobile,\r\n            'is-desktop':props.desktop,\r\n            'is-tablet':props.tablet,\r\n            'is-gapless':props.gapless,\r\n            'is-multiline':props.multiline,\r\n            'is-centered':props.centered,\r\n            'is-vcentered':props.verticalCentered,\r\n            'is-bordered-left':props.borderleft,\r\n            'is-bordered-right':props.borderright,\r\n            'is-bordered-top':props.bordertop,\r\n            'is-bordered-bottom':props.borderbottom,\r\n            'is-fullwidth':props.fullWidth,\r\n            'is-fullheight':props.fullHeight\r\n         },props.addonclass]\">\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        mobile?:boolean, \r\n        desktop?:boolean, \r\n        tablet?:boolean, \r\n        gapless?:boolean, \r\n        multiline?:boolean, \r\n        centered?:boolean, \r\n        verticalCentered?:boolean, \r\n        borderleft?:boolean, \r\n        borderright?:boolean, \r\n        borderbottom?:boolean, \r\n        bordertop?:boolean, \r\n        fullWidth?:boolean, \r\n        fullHeight?:boolean, \r\n        addonclass?:string\r\n    }>();\r\n</script>","ï»¿<template>\r\n    <div class=\"column\" v-bind:class=\"Class\">\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\nimport { BorderTypes, ColumnOffsetSizes, ColumnSizes } from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        size?:ColumnSizes,\r\n        offset?:ColumnOffsetSizes,\r\n        border?:BorderTypes[],\r\n        addonclass?:string\r\n    }>();\r\n    \r\n    const Class = computed<string[]>(() => {\r\n        var ret = [`is-${props.size??'12'}`];\r\n        if (props.offset){ret.push(`is-offset-${props.offset}`)};\r\n        if (props.border){\r\n            if (props.border.some(b=>b===BorderTypes.all)){\r\n                ret.push('is-bordered');\r\n            }else{\r\n                props.border.forEach(b=>ret.push(`is-bordered-${b}`));\r\n            }\r\n        }\r\n        if (props.addonclass) {\r\n            ret.push(props.addonclass);\r\n        }\r\n        return ret;\r\n    });\r\n</script>","ï»¿<template>\r\n    <div class=\"modal\" v-bind:class=\"{'is-active':props.show}\">\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-card\" v-bind:class=\"classes\">\r\n            <div class=\"modal-card-head\">\r\n                <slot name=\"header\" v-bind=\"headerProps\" />\r\n                <button v-if=\"hasClose\" class=\"delete\" aria-label=\"close\" v-on:click=\"emit('close')\"></button>\r\n            </div>\r\n            <div class=\"modal-card-body\">\r\n                <slot name=\"content\" />\r\n            </div>\r\n            <div class=\"modal-card-foot\">\r\n                <slot name=\"footer\" v-bind=\"footerProps\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import {computed} from 'vue';\r\n    \r\n    const props = defineProps<{\r\n        show?:boolean,\r\n        hasClose?:boolean,\r\n        fullWidth?:boolean,\r\n        fullHeight?:boolean,\r\n        maxWidth?:boolean,\r\n        maxHeight?:boolean\r\n    }>();\r\n    \r\n    const emit = defineEmits<{close}>();\r\n\r\n    const footerProps = {\r\n        addonclass: 'card-footer-item'\r\n    };\r\n\r\n    const headerProps = {\r\n        headerClass: 'modal-card-title is-centered',\r\n        addonclass: 'card-footer-item'\r\n    };\r\n\r\n    const classes = computed<string[]>(()=>{\r\n        var result=[];\r\n        if (props.fullWidth){result.push('is-fullwidth');}\r\n        if (props.fullHeight){result.push('is-fullheight');}\r\n        if (props.maxWidth){result.push('is-maxwidth');}\r\n        if (props.maxHeight){result.push('is-maxheight');}\r\n        return result;\r\n    });\r\n</script>","ï»¿<template>\r\n    <div class=\"panel\" v-bind:class=\"addons\">\r\n        <div class=\"panel-heading\" v-if=\"props.hasHeader\">\r\n            <slot name=\"header\"/>\r\n        </div>\r\n        <div class=\"panel-tabs\" v-if=\"props.hasTabs\">\r\n            <slot name=\"tabs\"/>\r\n        </div>\r\n        <div class=\"panel-block\" v-for=\"name in BlockNames\">\r\n            <slot v-bind:name=\"name\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\nimport { ColorTypes } from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        type?:ColorTypes,\r\n        blockNames?:string[],\r\n        hasTabs?:boolean,\r\n        fullWidth?:boolean,\r\n        fullHeight?:boolean,\r\n        hasHeader?:boolean\r\n    }>();\r\n\r\n    const BlockNames = computed<string[]>(() => props.blockNames??['default']);\r\n\r\n    const addons = computed<string[]>(() => {\r\n        let ret = [];\r\n        if (props.type){ret.push(`is-${props.type}`);}\r\n        if (props.fullWidth) { ret.push('is-fullwidth'); }\r\n        if (props.fullHeight) { ret.push('is-fullheight'); }\r\n        return ret;\r\n    });\r\n</script>","ï»¿<template>\r\n    <div :class=\"containerClasses\">\r\n        <table :class=\"tableClasses\">\r\n            <thead>\r\n                <slot name=\"thead\" />\r\n            </thead>\r\n            <tbody>\r\n                <slot name=\"tbody\"/>\r\n            </tbody>\r\n            <tfoot>\r\n                <slot name=\"tfoot\"/>\r\n            </tfoot>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import {computed} from 'vue';\r\n    \r\n    const props = defineProps<{\r\n        scrollable?:boolean,\r\n        fixedHeader?:boolean,\r\n        fullWidth?:boolean,\r\n        narrow?:boolean\r\n    }>();\r\n    \r\n    const containerClasses = computed<string[]>(()=>{\r\n        let ret:string[]=[];\r\n        if (props.scrollable){ret.push('table-container');}\r\n        if (props.fixedHeader&&props.scrollable){ret.push('is-fixed');}\r\n        return ret;\r\n    });\r\n\r\n    const tableClasses = computed<string[]>(()=>{\r\n        let ret:string[]=['table','is-striped','is-hoverable'];\r\n        if (props.fixedHeader&&!props.scrollable){ret.push('is-fixed');}\r\n        if(props.fullWidth){ret.push('is-fullwidth');}\r\n        if (props.narrow){ret.push('is-narrow');}\r\n        return ret;\r\n    });\r\n</script>","ï»¿<template>\r\n    <li v-bind:class=\"{'is-active':props.active}\">\r\n        <a v-bind:href=\"href\" v-on:click=\"click\">\r\n            <span v-if=\"props.icon\" class=\"icon is-small\">\r\n                <Icon :icon=\"props.icon\"/>\r\n            </span>\r\n            <span>{{props.title}}</span>\r\n        </a>\r\n    </li>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {Icon} from '../common/';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const emit = defineEmits<{click}>();\r\n    const props = defineProps<{\r\n        active?:boolean,\r\n        title?:string,\r\n        icon?:string,\r\n        href?:string\r\n    }>();\r\n\r\n    const click = (event:any):void=> {\r\n        if (props.href === null || props.href === undefined) {\r\n            event.preventDefault();\r\n            emit('click');\r\n        }\r\n    }\r\n</script>","ï»¿<template>\r\n    <div :class=\"classes\">\r\n        <ul>\r\n            <slot />\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import {computed} from 'vue';\r\n    import { TabAlignments, TabStyles } from '../enums';\r\n\r\n    const props = defineProps<{\r\n        alignment?:TabAlignments,\r\n        type?:TabStyles,\r\n        fullWidth?:boolean\r\n    }>();\r\n\r\n    const classes = computed<string[]>(()=>{\r\n        let ret:string[] = ['tabs'];\r\n        if (props.alignment){ret.push(`is-${props.alignment}`);}\r\n        else{ret.push('is-left');}\r\n        if(props.type){ret.push(`is-${props.type}`);}\r\n        if (props.fullWidth){ret.push('is-fullwidth');}\r\n        return ret;\r\n    });\r\n</script>","ï»¿<template>\r\n    <div :class=\"Classes\">\r\n        <slot/>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { computed } from 'vue';\r\nimport { BorderTypes, TileSizes, TileTypes } from '../enums';\r\n</script>\r\n\r\n<script lang=\"ts\" setup>\r\n    const props = defineProps<{\r\n        type:TileTypes,\r\n        size?:TileSizes,\r\n        borders?:BorderTypes[],\r\n        vertical?:boolean\r\n    }>();\r\n\r\n    const Classes = computed<string[]>(() => {\r\n        let result:string[] = ['tile',`is-${props.type}`];\r\n        if (props.size){result.push(`is-${props.size}`);}\r\n        if (props.borders){\r\n            if (props.borders.some(b=>b===BorderTypes.all)){\r\n                result.push('is-bordered');\r\n            }else{\r\n                props.borders.forEach(b=>result.push(`is-bordered-${b}`));\r\n            }\r\n        }\r\n        if (props.vertical){result.push('is-vertical');}\r\n        return result;\r\n    });\r\n</script>","import './sass/bulma-skins.scss';\r\nimport {css} from '../components/utilities';\r\n\r\nconst url = (document.currentScript===null||document.currentScript===undefined ? import.meta.url : document.currentScript.src);\r\n\r\ncss(`${url.substring(0,url.lastIndexOf(\"/\"))}/style.css`);\r\n\r\nexport const AVAIABLE_SKINS = ['cerulean','cosmo','cyborg','darkly','default','flatly','journal','litera','lumen','lux','materia','minty','nuclear','pulse','sandstone','simplex','slate','solar','spacelab','superhero','united','yeti'];\r\n\r\nexport function setSkin(skin){\r\n    document.getElementsByTagName('body')[0].setAttribute('data-skin',skin??'');\r\n};","import * as common from './common/';\r\nimport * as dragging from './dragging/';\r\nimport * as form from './form/';\r\nimport * as layout from './layout/';\r\nimport * as skin from '../css/skins';\r\nimport * as enums from './enums';\r\n\r\nexport const {Animation,Button,ButtonAdd,ButtonCancel,ButtonDelete,ButtonDisable,ButtonDownload,\r\n    ButtonEdit,ButtonEnable,ButtonOkay,ButtonPrint,ButtonRefresh,ButtonSave,ButtonUpload,\r\n    Chart,CheckMark,DynamicSlot,Filter,Icon,Message,Notification,PageNotification,Pagination,Promised } = common;\r\nexport const {DraggableItem,DropZone,Sortable} = dragging;\r\nexport const {AutoComplete,CheckboxGroup,Checkbox,Date,ComponentForm,FullEditor,\r\n    Header,Hidden,Number,Paragraph,RadioGroup,Select,Switch,Text,\r\n    TextArea,Time,FormComponent} = form;\r\nexport const {Banner,Box,BreadcrumbsItem,Breadcrumbs,Card,Column,ColumnContainer,\r\n    List,ListItem,ModalCard,Panel,Table,Tabs,TabsTab,Tile} = layout;\r\nexport const {AVAIABLE_SKINS,setSkin} = skin;\r\nexport const {ColorTypes,Sizes,AnimationSpeeds,AnimationTypes,IconSizes,ChartLegendPositions,ChartTypes} = enums;\r\n"],"names":["css","path","resolve","promises","head","url","index","style","prom","results","ColorTypes","ColorTypes2","NoticeTypes","NoticeTypes2","Sizes","Sizes2","AnimationSpeeds","AnimationSpeeds2","AnimationTypes","AnimationTypes2","ChartTypes","ChartTypes2","ChartLegendPositions","ChartLegendPositions2","IconSizes","IconSizes2","DropZoneQuadrants","DropZoneQuadrants2","BreadCrumbAlignments","BreadCrumbAlignments2","BreadCrumbSeperators","BreadCrumbSeperators2","ColumnContainerModifiers","ColumnContainerModifiers2","ColumnSizes","ColumnOffsetSizes","BorderTypes","BorderTypes2","TabAlignments","TabAlignments2","TabStyles","TabStyles2","TileSizes","TileTypes","TileTypes2","props","__props","getSpeedTime","speed","getAnimationName","animation","getSpeedName","Duration","computed","onEnter","onExit","repeatingClass","useLanguage","inject","ILanguage","useIconSet","IIconSet","urlBase","brandsUrl","brandsId","reg","brands","el","result","content","match","IconSet","clazz","onMounted","emit","__emit","Classes","messages","button","filter","pagination","date","translate","message","language","obj","Language","Properties","footerProps","headerProps","canvas","ref","chart","Refresh","Style","ret","watch","val","value","opts","item","chrt","e","legendItem","Chart","reload","sortMethod","filterReg","imps","names","components","FilterReg","Filter","FilterKeyPress","event","Size","Type","iconType","Previous","Next","ButtonClass","DisablePrevious","DisableNext","moveBack","moveForward","toValue","source","unref","usePromise","promise","pendingDelay","isRejected","isResolved","isPending","isDelayElapsed","error","data","timerId","newPromise","pendingDelayNumber","newData","err","PromisedImpl","defineComponent","slots","propsAsRefs","toRefs","promiseState","reactive","slotName","slotData","warn","Promised","isDragging","handleDisabled","handle","Disabled","Start","Stop","clickHandle","isOver","lastQuadrant","getQuadrant","bounds","mid","Enter","Leave","Moved","Drop","classes","sorted","selectedIndex","currentIndex","currentQuadrant","oldValue","newValue","dragStart","itemEntered","itemDropped","elem","HIDDEN_FIELDS_PROPERTY","DISABLED_FIELDS_PROPERTY","defaultTranslate","useTranslator","Translate","useValuesList","name","iHiddenValues","iDisabledValues","hiddenValues","h","disabledValues","buildFieldRows","fields","row","curLen","field","len","resolveListItems","values","p","tmp","tmpResult","Translator","selected","searchString","contentSpan","x","getValue","setValue","vals","v","paste","keyPress","clear","focusInput","addSelected","removeSelected","__expose","Error","checks","locked","Values","tchecks","check","Label","addDays","days","padLeft","char","length","processFormat","curCode","tzo","hours","minutes","monthName","years","format","regTime","styles","minute","hour","regDate","regDateTime","time","showInterface","preValue","calendar","Messages","readonly","isValid","d","MonthName","Weeks","curVal","stopMonth","week","processTimeChange","selectDate","day","cancel","calendarClicked","cancelClicked","MoveMonth","direction","__temp","__restore","_withAsyncContext","snote","contents","onUnmounted","r","mergeValueGroups","parent","dest","base","idx","tvalues","s","t","sv","sr","isChecked","tabKeyCode","tab","newLine","keyPressed","selectionStart","selectionEnd","start","end","chunk","addnewLine","chunks","c","hiddenInputs","disabledFields","refs","input","i","rows","LABELLED_FIELDS","TRANSLATE_FIELDS","inp","type","inputType","Autocomplete","Button","CheckboxGroup","Checkbox","Date","FullEditor","Header","Hidden","Number","Paragraph","RadioGroup","Select","Switch","Text","Textarea","Time","Subform","columns","fieldName","altFieldName","hasLabel","l","inputProps","f","value_changed","button_clicked","provide","getValues","setValues","hiddenFields","hideField","showField","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_hoisted_1","Class","b","BlockNames","addons","containerClasses","tableClasses","click","AVAIABLE_SKINS","setSkin","skin","Animation","ButtonAdd","ButtonCancel","ButtonDelete","ButtonDisable","ButtonDownload","ButtonEdit","ButtonEnable","ButtonOkay","ButtonPrint","ButtonRefresh","ButtonSave","ButtonUpload","CheckMark","DynamicSlot","Icon","Message","Notification","PageNotification","Pagination","common","DraggableItem","DropZone","Sortable","dragging","AutoComplete","ComponentForm","TextArea","FormComponent","form","Banner","Box","BreadcrumbsItem","Breadcrumbs","Card","Column","ColumnContainer","List","ListItem","ModalCard","Panel","Table","Tabs","TabsTab","Tile","layout","enums"],"mappings":"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"}