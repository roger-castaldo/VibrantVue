hr {
  height: var(--border-width);
}

h6 {
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.hero {
  background-color: var(--grey-dark);
}

a {
  transition: all 200ms ease;
}

.button {
  transition: all 200ms ease;
  border-width: var(--border-width);
  color: var(--white);

  &.is-active,
  &.is-focused,
  &:active,
  &:focus {
    box-shadow: 0 0 0 2px #{set-rgba-alpha("button-focus-border-color", 0.5)};
  }
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      background-color: $color;
      color: $color-invert;

      &.is-hovered,
      &:hover {
        background-color: #{bulmaLighten($color, 7.5%)};
      }

      &.is-active,
      &.is-focused,
      &:active,
      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 2px #{set-rgba-color-alpha($color, 0.5)};
      }
    }
  }
}

.label {
  color: var(--grey-lighter);
}

.button,
.control.has-icons-left .icon,
.control.has-icons-right .icon,
.input,
.pagination-ellipsis,
.pagination-link,
.pagination-next,
.pagination-previous,
.select,
.select select,
.textarea {
  height: 2.5em;
}

.input,
.textarea {
  transition: all 200ms ease;
  box-shadow: none;
  border-width: var(--border-width);
  padding-left: 1em;
  padding-right: 1em;
}

.select {
  &:after,
  select {
    border-width: var(--border-width);
  }
}

.control {
  &.has-addons {
    .button,
    .input,
    .select {
      margin-right: calc(0 - var(--border-width));
    }
  }
}

.notification {
  background-color: var(--grey-dark);
}

.card {
  $card-border-color: lighten-variable("grey-darker", 5);
  box-shadow: none;
  border: $border-width solid var(--card-border-color);
  background-color: var(--grey-darker);
  border-radius: var(--radius);

  .card-image {
    img {
      border-radius: var(--radius) var(--radius) 0 0;
    }
  }

  .card-header {
    box-shadow: none;
    background-color: #{set-rgba-alpha("black-bis", 0.2)};
    border-radius: var(--radius) var(--radius) 0 0;
  }

  .card-footer {
    background-color: #{set-rgba-alpha("black-bis", 0.2)};
  }

  .card-footer,
  .card-footer-item {
    border-width: var(--border-width);
    border-color: var(--card-border-color);
  }
}

.notification {
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      a:not(.button) {
        color: $color-invert;
        text-decoration: underline;
      }
    }
  }
}

.tag {
  border-radius: var(--radius);
}

.menu-list {
  a {
    transition: all 300ms ease;
  }
}

.modal-card-body {
  background-color: var(--grey-darker);
}

.modal-card-foot,
.modal-card-head {
  border-color: var(--grey-dark);
}

.message-header {
  font-weight: var(--weight-bold);
  background-color: var(--grey-dark);
  color: var(--white);
}

.message-body {
  border-width: var(--border-width);
  border-color: var(--grey-dark);
}

.navbar {
  border-radius: var(--radius);

  &.is-transparent {
    background: none;
  }

  &.is-primary {
    .navbar-dropdown {
      a.navbar-item.is-active {
        background-color: var(--link);
      }
    }
  }

  @include touch {
    .navbar-menu {
      background-color: var(--navbar-background-color);
      border-radius: 0 0 var(--radius) var(--radius);
    }
  }
}

.hero .navbar,
body > .navbar {
  border-radius: 0;
}

.pagination-link,
.pagination-next,
.pagination-previous {
  border-width: var(--border-width);
}

.panel-block,
.panel-heading,
.panel-tabs {
  border-width: var(--border-width);

  &:first-child {
    border-top-width: $border-width;
  }
}

.panel-heading {
  font-weight: var(--weight-bold);
}

.panel-tabs {
  a {
    border-width: var(--border-width);
    margin-bottom: calc(0 - var(--border-width));

    &.is-active {
      border-bottom-color: var(--link-active);
    }
  }
}

.panel-block {
  &:hover {
    color: var(--link-hover);

    .panel-icon {
      color: var(--link-hover);
    }
  }

  &.is-active {
    .panel-icon {
      color: var(--link-active);
    }
  }
}

.tabs {
  a {
    border-bottom-width: var(--border-width);
    margin-bottom: calc(0 - var(--border-width));
  }

  ul {
    border-bottom-width: var(--border-width);
  }

  &.is-boxed {
    a {
      border-width: var(--border-width);
    }

    li.is-active a {
      background-color: #{darken-variable("grey-darker", 4)};
    }
  }

  &.is-toggle {
    li a {
      border-width: var(--border-width);
      margin-bottom: 0;
    }

    li + li {
      margin-left: calc(0 - var(--border-width));
    }
  }
}

.hero {
  // Colors
  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      .navbar {
        .navbar-dropdown {
          .navbar-item:hover {
            background-color: var(--navbar-dropdown-item-hover-background-color);
          }
        }
      }
    }
  }
}
